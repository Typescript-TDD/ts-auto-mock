{
    "name": "ts-auto-mock",
    "version": "3.0.0",
    "description": "Typescript transformer to unlock automatic mock creation for interfaces and classes",
    "scripts": {
        "build": "npm run build:modules && npm run build:transformer",
        "build:debug": "npm run build:modules:debug && npm run build:transformer:debug",
        "build:transformer": "webpack --config config/modules/transformer/webpack.js",
        "build:transformer:debug": "cross-env DEBUG=true webpack --config config/modules/transformer/webpack.js",
        "build:modules": "webpack --config config/modules/webpack.js",
        "build:modules:debug": "cross-env DEBUG=true webpack --config config/modules/webpack.js",
        "build:transformer:definitelyTyped": "webpack --config config/modules/definitelyTypedTransformer/webpack.functions.js && webpack --config config/modules/definitelyTypedTransformer/webpack.js",
        "build:transformer:definitelyTyped:debug": "cross-env DEBUG=true webpack --config config/modules/definitelyTypedTransformer/webpack.functions.js && cross-env DEBUG=true webpack --config config/modules/definitelyTypedTransformer/webpack.js",
        "build:playground": "ttsc --project ./test/playground/tsconfig.build.json",
        "test": "npm run test:transformer && npm run test:noTransformer && npm run test:framework:context && npm run test:framework && npm run test:frameworkDeprecated && npm run test:registerMock && npm run test:features && npm run test:filesFilter && npm run test:logs && npm run test:unit",
        "test:unit": "cross-env JASMINE_CONFIG=./test/unit/jasmine.json TSCONFIG=./test/tsconfig.json npm run test:common",
        "test:transformer": "cross-env JASMINE_CONFIG=./test/transformer/jasmine.json TSCONFIG=./test/transformer/tsconfig.json npm run test:common",
        "test:noTransformer": "cross-env JASMINE_CONFIG=./test/noTransformer/jasmine.json TSCONFIG=./test/tsconfig.json npm run test:common",
        "test:registerMock": "cross-env JASMINE_CONFIG=./test/registerMock/jasmine.json TSCONFIG=./test/registerMock/tsconfig.json npm run test:common",
        "test:framework:context": "cross-env JASMINE_CONFIG=./test/frameworkContext/jasmine.json TSCONFIG=./test/frameworkContext/tsconfig.json npm run test:common",
        "test:frameworkDeprecated": "cross-env JASMINE_CONFIG=./test/frameworkContext/jasmineDeprecated.json TSCONFIG=./test/frameworkContext/tsconfig.json npm run test:common",
        "test:framework": "cross-env JASMINE_CONFIG=./test/framework/jasmine.json TSCONFIG=./test/framework/tsconfig.json npm run test:common",
        "test:features": "cross-env JASMINE_CONFIG=./test/features/jasmine.json TSCONFIG=./test/features/tsconfig.json npm run test:common",
        "test:filesFilter": "cross-env JASMINE_CONFIG=./test/filesFilter/jasmine.json TSCONFIG=./test/filesFilter/tsconfig.json npm run test:common",
        "test:logs": "cross-env JASMINE_CONFIG=./test/logs/jasmine.json TSCONFIG=./test/logs/tsconfig.json npm run test:common",
        "test:playground": "cross-env JASMINE_CONFIG=./test/playground/jasmine.json TSCONFIG=./test/playground/tsconfig.json npm run test:common",
        "test:playground:build": "cross-env JASMINE_CONFIG=./test/playground/jasmine.build.json TSCONFIG=./test/playground/tsconfig.json npm run test:common",
        "test:common": "cross-var ts-node --files -r tsconfig-paths/register --compiler ttypescript --project $TSCONFIG node_modules/jasmine/bin/jasmine --config=$JASMINE_CONFIG",
        "dist:collect": "cp -r package.json package-lock.json README.md dist",
        "ts-check:src": "tsc --noEmit",
        "eslint": "eslint ./src/**/*.ts ./test/**/*.ts",
        "prettier": "node node_modules/prettier/bin-prettier.js --check **/*.{ts,json}",
        "prettier:fix": "npm run prettier -- --write",
        "release": "npm run dist:collect && semantic-release",
        "postversion": "cp -r package.json ../ && cp -r package-lock.json ../",
        "cz": "git-cz",
        "commit": "npm run cz",
        "contributors:add": "all-contributors add",
        "contributors:generate": "all-contributors generate"
    },
    "keywords": [
        "typescript",
        "spy",
        "mock",
        "auto"
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/Typescript-TDD/ts-auto-mock.git"
    },
    "author": "Vittorio Guerriero & Giulio Caprino",
    "license": "MIT",
    "devDependencies": {
        "@commitlint/cli": "^11.0.0",
        "@commitlint/config-angular": "^11.0.0",
        "@semantic-release/changelog": "^5.0.1",
        "@semantic-release/git": "^9.0.0",
        "@semantic-release/github": "^7.2.0",
        "@types/jasmine": "^3.6.2",
        "@types/lodash-es": "^4.17.3",
        "@types/micromatch": "^4.0.1",
        "@types/node": "^14.14.12",
        "@typescript-eslint/eslint-plugin": "^4.9.1",
        "@typescript-eslint/parser": "^4.9.1",
        "all-contributors-cli": "6.19.0",
        "clean-webpack-plugin": "^3.0.0",
        "commitizen": "^4.2.2",
        "conventional-changelog-angular": "^5.0.12",
        "copy-webpack-plugin": "^7.0.0",
        "cross-env": "^7.0.3",
        "cross-var": "^1.1.0",
        "cz-customizable": "^6.3.0",
        "eslint": "^7.15.0",
        "eslint-config-prettier": "^7.0.0",
        "eslint-loader": "^4.0.2",
        "eslint-plugin-import": "^2.22.1",
        "eslint-plugin-prettier": "^3.2.0",
        "git-branch-is": "^4.0.0",
        "husky": "^4.3.5",
        "jasmine": "^3.6.3",
        "jasmine-spec-reporter": "^6.0.0",
        "prettier": "^2.2.1",
        "regenerator-runtime": "^0.13.7",
        "semantic-release": "^17.3.0",
        "semantic-release-slack-bot": "^1.7.0",
        "ts-loader": "^8.0.12",
        "ts-node": "^9.1.1",
        "tsconfig-paths": "^3.9.0",
        "ttypescript": "1.5.12",
        "typescript": "^4.1.3",
        "webpack": "^5.10.1",
        "webpack-cli": "^4.2.0",
        "webpack-merge": "^5.7.0",
        "webpack-node-externals": "^2.5.2"
    },
    "dependencies": {
        "lodash-es": "^4.17.15",
        "micromatch": "^4.0.2",
        "winston": "^3.3.3"
    },
    "peerDependencies": {
        "typescript": "^4.0.2"
    },
    "husky": {
        "hooks": {
            "commit-msg": "if git-branch-is master; then commitlint -E HUSKY_GIT_PARAMS; fi"
        }
    },
    "config": {
        "commitizen": {
            "path": "./node_modules/cz-customizable"
        },
        "cz-customizable": {
            "config": "./commitizen.js"
        }
    }
}
