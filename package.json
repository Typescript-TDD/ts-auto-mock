{
  "name": "ts-auto-mock",
  "version": "2.2.2",
  "description": "Typescript transformer to unlock automatic mock creation for interfaces and classes",
  "scripts": {
    "build": "npm run build:modules && npm run build:transformer",
    "build:debug": "npm run build:modules:debug && npm run build:transformer:debug",
    "build:transformer": "webpack --config config/modules/transformer/webpack.js",
    "build:transformer:debug": "cross-env DEBUG=true webpack --config config/modules/transformer/webpack.js",
    "build:modules": "webpack --config config/modules/webpack.js",
    "build:modules:debug": "cross-env DEBUG=true webpack --config config/modules/webpack.js",
    "build:transformer:definitelyTyped": "webpack --config config/modules/definitelyTypedTransformer/webpack.functions.js && webpack --config config/modules/definitelyTypedTransformer/webpack.js",
    "build:playground": "ttsc --project tsconfig.playground.json",
    "test": "npm run test:transformer && npm run test:framework:context && npm run test:framework && npm run test:frameworkDeprecated && npm run test:registerMock && npm run test:features && npm run test:unit",
    "test:unit": "karma start config/karma/karma.config.unit.js",
    "test:transformer": "cross-env CACHE=true karma start config/karma/karma.config.transformer.js",
    "test:registerMock": "cross-env CACHE=true karma start config/karma/karma.config.registerMock.js",
    "test:framework:context": "cross-env CACHE=true karma start config/karma/karma.config.framework.context.js",
    "test:frameworkDeprecated": "cross-env CACHE=true karma start config/karma/karma.config.framework.deprecated.js",
    "test:framework": "cross-env CACHE=false karma start config/karma/karma.config.framework.js",
    "test:features": "cross-env CACHE=true FEATURES=true karma start config/karma/karma.config.features.js",
    "test:playground": "karma start config/karma/karma.config.transformer.playground.js",
    "test:playground:build": "karma start config/karma/karma.config.transformer.playground.build.js",
    "release": "cp -r package.json package-lock.json README.md dist && semantic-release",
    "postversion": "cp -r package.json ../ && cp -r package-lock.json ../",
    "cz": "git-cz",
    "commit": "npm run cz"
  },
  "keywords": [
    "typescript",
    "spy",
    "mock",
    "auto"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/Typescript-TDD/ts-auto-mock.git"
  },
  "author": "Vittorio Guerriero & Giulio Caprino",
  "license": "MIT",
  "devDependencies": {
    "@commitlint/cli": "^8.3.5",
    "@commitlint/config-angular": "^8.3.4",
    "@semantic-release/changelog": "^5.0.1",
    "@semantic-release/git": "^9.0.0",
    "@semantic-release/github": "^7.0.7",
    "@types/jasmine": "^3.5.10",
    "@types/node": "^13.13.5",
    "@typescript-eslint/eslint-plugin": "^2.31.0",
    "@typescript-eslint/eslint-plugin-tslint": "^2.31.0",
    "@typescript-eslint/parser": "^2.31.0",
    "awesome-typescript-loader": "^5.2.1",
    "clean-webpack-plugin": "^3.0.0",
    "commitizen": "^4.1.2",
    "conventional-changelog-angular": "^5.0.10",
    "copy-webpack-plugin": "^5.1.1",
    "cross-env": "^7.0.2",
    "cz-customizable": "^6.2.0",
    "eslint": "^7.0.0",
    "eslint-loader": "^4.0.2",
    "eslint-plugin-import": "^2.20.2",
    "git-branch-is": "^3.1.0",
    "husky": "^4.2.5",
    "jasmine": "^3.5.0",
    "karma": "^5.0.5",
    "karma-chrome-launcher": "^3.1.0",
    "karma-jasmine": "^3.1.1",
    "karma-webpack": "^4.0.2",
    "puppeteer": "^3.0.4",
    "semantic-release": "^17.0.8",
    "ts-loader": "^7.0.3",
    "ts-node": "^8.10.1",
    "tslint": "^6.1.2",
    "ttypescript": "1.5.10",
    "typescript": "^3.8.3",
    "webpack": "^4.43.0",
    "webpack-cli": "^3.3.11",
    "webpack-merge": "^4.2.2",
    "webpack-node-externals": "^1.7.2"
  },
  "dependencies": {
    "lodash-es": "^4.17.15",
    "winston": "^3.2.1"
  },
  "peerDependencies": {
    "typescript": "^3.8.3"
  },
  "husky": {
    "hooks": {
      "commit-msg": "if git-branch-is develop; then commitlint -E HUSKY_GIT_PARAMS; fi"
    }
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-customizable"
    },
    "cz-customizable": {
      "config": "./commitizen.js"
    }
  }
}
