[{"item":"7zip-min","response":"success"},{"item":"a-big-triangle","response":"success"},{"item":"a11y-dialog","response":"success"},{"item":"abbrev","response":"success"},{"item":"abs","response":"success"},{"item":"absolute","response":"success"},{"item":"abstract-leveldown","response":"success"},{"item":"acc-wizard","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"accept","response":"success"},{"item":"accept-language-parser","response":"success"},{"item":"accepts","response":"success"},{"item":"accounting","response":"success"},{"item":"accurate-interval","response":"success"},{"item":"ace","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"ace-diff","response":"success"},{"item":"acl","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"acorn","response":"success"},{"item":"actioncable","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"activedirectory2","response":"success"},{"item":"activestorage","response":"success"},{"item":"activex-access","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"activex-adodb","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"activex-adox","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"activex-dao","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"activex-diskquota","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"activex-excel","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-faxcomexlib","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-infopath","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-interop","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-iwshruntimelibrary","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-libreoffice","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-msforms","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-mshtml","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-msxml2","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-office","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-outlook","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-powerpoint","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-scripting","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-shdocvw","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-shell","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-stdole","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-vbide","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-wia","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"activex-word","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"adal-angular","response":"success"},{"item":"add-zero","response":"success"},{"item":"add2home","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"adhan","response":"success"},{"item":"adlib","response":"success"},{"item":"adm-zip","response":"success"},{"item":"adone","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"aes-js","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"aframe","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property 'name' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n"},{"item":"agenda","response":"success"},{"item":"agent-base","response":"success"},{"item":"agiledigital__mule-preview","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"agilite","response":"success"},{"item":"agora-rtc-sdk","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"airbnb-prop-types","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property 'name' of undefined\n"},{"item":"airtable","response":"success"},{"item":"ajv-async","response":"success"},{"item":"ajv-errors","response":"success"},{"item":"ajv-keywords","response":"success"},{"item":"ajv-merge-patch","response":"success"},{"item":"ajv-pack","response":"success"},{"item":"akamai-edgeworkers","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"akumina-core","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"ale-url-parser","response":"success"},{"item":"alertify","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"alexa-sdk","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"alexa-voice-service","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"algebra.js","response":"success"},{"item":"algoliasearch","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"algoliasearch-helper","response":"success"},{"item":"ali-app","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"ali-oss","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"align-text","response":"success"},{"item":"alks-node","response":"success"},{"item":"all-the-package-names","response":"success"},{"item":"alloy","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"allure-js-commons","response":"success"},{"item":"almost-equal","response":"success"},{"item":"alpha-bravo","response":"success"},{"item":"alt","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-arrival-range","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-autocomplete","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-city-search","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-control-bar","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-district-search","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-driving","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-geocoder","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-geolocation","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-heatmap","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-indoor-map","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-line-search","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-map-type","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-map3d","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-overview","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-place-search","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-riding","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-scale","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-station-search","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-api-tool-bar","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"amap-js-sdk","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"amazon-cognito-auth-js","response":"success"},{"item":"amazon-connect-streams","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"amazon-product-api","response":"success"},{"item":"amcharts","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"amp","response":"success"},{"item":"amp-message","response":"success"},{"item":"amphtml-validator","response":"success"},{"item":"amplifier","response":"success"},{"item":"amplify","response":"success"},{"item":"amplify-deferred","response":"success"},{"item":"amplitude-js","response":"success"},{"item":"amqp","response":"success"},{"item":"amqp-connection-manager","response":"success"},{"item":"amqp-rpc","response":"success"},{"item":"amqplib","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"analytics-node","response":"success"},{"item":"anchor-js","response":"success"},{"item":"angular","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property 'kind' of undefined\n"},{"item":"angular-agility","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"angular-animate","response":"success"},{"item":"angular-block-ui","response":"success"},{"item":"angular-bootstrap-calendar","response":"success"},{"item":"angular-bootstrap-lightbox","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"angular-breadcrumb","response":"success"},{"item":"angular-clipboard","response":"success"},{"item":"angular-cookie","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"angular-cookies","response":"success"},{"item":"angular-deferred-bootstrap","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"angular-desktop-notification","response":"success"},{"item":"angular-dialog-service","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"angular-environment","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"angular-es","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"angular-feature-flags","response":"success"},{"item":"angular-file-saver","response":"success"},{"item":"angular-file-upload","response":"success"},{"item":"angular-formly","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"angular-fullscreen","response":"success"},{"item":"angular-gettext","response":"success"},{"item":"angular-google-analytics","response":"success"},{"item":"angular-gridster","response":"success"},{"item":"angular-growl-v2","response":"success"},{"item":"angular-hotkeys","response":"success"},{"item":"angular-http-auth","response":"success"},{"item":"angular-httpi","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"angular-idle","response":"success"},{"item":"angular-jwt","response":"success"},{"item":"angular-load","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"angular-loading-bar","response":"success"},{"item":"angular-local-storage","response":"success"},{"item":"angular-localforage","response":"success"},{"item":"angular-locker","response":"success"},{"item":"angular-material","response":"success"},{"item":"angular-media-queries","response":"success"},{"item":"angular-meteor","response":"success"},{"item":"angular-mocks","response":"success"},{"item":"angular-modal","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"angular-notifications","response":"success"},{"item":"angular-notify","response":"success"},{"item":"angular-oauth2","response":"success"},{"item":"angular-odata-resources","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"angular-pdfjs-viewer","response":"success"},{"item":"angular-permission","response":"success"},{"item":"angular-promise-tracker","response":"success"},{"item":"angular-q-extras","response":"success"},{"item":"angular-q-spread","response":"success"},{"item":"angular-resource","response":"success"},{"item":"angular-route","response":"success"},{"item":"angular-sanitize","response":"success"},{"item":"angular-scenario","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"angular-scroll","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"angular-signalr-hub","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"angular-spinner","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"angular-storage","response":"success"},{"item":"angular-strap","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"angular-toastr","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property 'kind' of undefined\n"},{"item":"angular-toasty","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"angular-tooltips","response":"success"},{"item":"angular-translate","response":"success"},{"item":"angular-ui-bootstrap","response":"success"},{"item":"angular-ui-notification","response":"success"},{"item":"angular-ui-router","response":"success"},{"item":"angular-ui-scroll","response":"success"},{"item":"angular-ui-sortable","response":"success"},{"item":"angular-ui-tree","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"angular-websocket","response":"success"},{"item":"angular-wizard","response":"success"},{"item":"angular-xeditable","response":"success"},{"item":"angular.throttle","response":"success"},{"item":"angularfire","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"angularlocalstorage","response":"success"},{"item":"angulartics","response":"success"},{"item":"animation-frame","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"animejs","response":"success"},{"item":"annyang","response":"success"},{"item":"ansi","response":"success"},{"item":"ansi-escape-sequences","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"ansi-styles","response":"success"},{"item":"ansicolors","response":"success"},{"item":"antlr4","response":"success"},{"item":"antlr4-autosuggest","response":"success"},{"item":"any-db","response":"success"},{"item":"any-db-transaction","response":"success"},{"item":"anymatch","response":"success"},{"item":"anyproxy","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"aos","response":"success"},{"item":"apex.js","response":"success"},{"item":"api-error-handler","response":"success"},{"item":"apicache","response":"success"},{"item":"apigee-access","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"apimocker","response":"success"},{"item":"apollo-codegen","response":"success"},{"item":"apollo-upload-client","response":"success"},{"item":"apostrophe","response":"success"},{"item":"app-module-path","response":"success"},{"item":"app-root-dir","response":"success"},{"item":"app-root-path","response":"success"},{"item":"appdmg","response":"success"},{"item":"append-query","response":"success"},{"item":"appframework","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"apple-mapkit-js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"apple-music-api","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"applepayjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"appletvjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"applicationinsights-js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"apptimize__apptimize-web-sdk","response":"success"},{"item":"aqb","response":"success"},{"item":"arangodb","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"arbiter","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"arcgis-js-api","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"arcgis-rest-api","response":"success"},{"item":"arcgis-to-geojson-utils","response":"success"},{"item":"architect","response":"success"},{"item":"archiver","response":"success"},{"item":"archy","response":"success"},{"item":"are-we-there-yet","response":"success"},{"item":"argon2-browser","response":"success"},{"item":"argparse","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property 'declarations' of undefined\n"},{"item":"args","response":"success"},{"item":"argv","response":"success"},{"item":"aria-query","response":"success"},{"item":"arr-diff","response":"success"},{"item":"arr-union","response":"success"},{"item":"array-binarysearch.closest","response":"success"},{"item":"array-find-index","response":"success"},{"item":"array-foreach","response":"success"},{"item":"array-sort","response":"success"},{"item":"array-unique","response":"success"},{"item":"array.from","response":"success"},{"item":"array.prototype.flat","response":"success"},{"item":"array.prototype.flatmap","response":"success"},{"item":"artillery","response":"success"},{"item":"asana","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"asap","response":"success"},{"item":"ascii-art","response":"success"},{"item":"ascii2mathml","response":"success"},{"item":"asciichart","response":"success"},{"item":"asciify","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"asenv","response":"success"},{"item":"asn1","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"asn1js","response":"success"},{"item":"aspnet-identity-pw","response":"success"},{"item":"assert","response":"success"},{"item":"assert-equal-jsx","response":"success"},{"item":"assert-plus","response":"success"},{"item":"assertsharp","response":"success"},{"item":"assets-webpack-plugin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"astring","response":"success"},{"item":"async","response":"success"},{"item":"async-busboy","response":"success"},{"item":"async-cache","response":"success"},{"item":"async-eventemitter","response":"success"},{"item":"async-lock","response":"success"},{"item":"async-polling","response":"success"},{"item":"async-retry","response":"success"},{"item":"async-stream-generator","response":"success"},{"item":"async-writer","response":"success"},{"item":"async.nexttick","response":"success"},{"item":"asynciterator","response":"success"},{"item":"athenajs","response":"success"},{"item":"atlaskit__button","response":"success"},{"item":"atlaskit__calendar","response":"success"},{"item":"atlaskit__feedback-collector","response":"success"},{"item":"atlaskit__inline-edit","response":"success"},{"item":"atlaskit__layer","response":"success"},{"item":"atlaskit__single-select","response":"success"},{"item":"atlaskit__tree","response":"success"},{"item":"atlassian-crowd-client","response":"success"},{"item":"atmosphere.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"atob","response":"success"},{"item":"atob-lite","response":"success"},{"item":"atom","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property 'declarations' of undefined\n"},{"item":"atom-keymap","response":"success"},{"item":"atom-mocha-test-runner","response":"success"},{"item":"atpl","response":"success"},{"item":"audio-context","response":"success"},{"item":"audio-play","response":"success"},{"item":"audiobuffer-to-wav","response":"success"},{"item":"audiosprite","response":"success"},{"item":"auth-header","response":"success"},{"item":"auth0","response":"success"},{"item":"auth0-angular","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"auth0-js","response":"success"},{"item":"auth0-lock","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"auth0.widget","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"authenticator","response":"success"},{"item":"auto-launch","response":"success"},{"item":"auto-sni","response":"success"},{"item":"autobahn","response":"success"},{"item":"autocannon","response":"success"},{"item":"autoprefixer","response":"success"},{"item":"autoprefixer-core","response":"success"},{"item":"autosize","response":"success"},{"item":"autosuggest-highlight","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"avoscloud-sdk","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"await-timeout","response":"success"},{"item":"awesomplete","response":"success"},{"item":"aws-iot-device-sdk","response":"success"},{"item":"aws-lambda","response":"success"},{"item":"aws-param-store","response":"success"},{"item":"aws-regions","response":"success"},{"item":"aws-serverless-express","response":"success"},{"item":"aws4","response":"success"},{"item":"axe-webdriverjs","response":"success"},{"item":"axel","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"axios-cancel","response":"success"},{"item":"axios-case-converter","response":"success"},{"item":"axios-curlirize","response":"success"},{"item":"axios-token-interceptor","response":"success"},{"item":"axon","response":"success"},{"item":"azure","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"azure-kusto-data","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\n\n../DefinitelyTyped/types/azure-kusto-data/index.d.ts(8,30): error TS2307: Cannot find module 'adal-node'.\n"},{"item":"azure-mobile-services-client","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"azure-sb","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"b2a","response":"success"},{"item":"b64-lite","response":"success"},{"item":"b_","response":"success"},{"item":"babel-code-frame","response":"success"},{"item":"babel-core","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property 'symbol' of undefined\n"},{"item":"babel-generator","response":"success"},{"item":"babel-plugin-macros","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property 'symbol' of undefined\n"},{"item":"babel-plugin-react-pug","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"babel-plugin-syntax-jsx","response":"success"},{"item":"babel-template","response":"success"},{"item":"babel-traverse","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"babel-types","response":"success"},{"item":"babel-webpack-plugin","response":"success"},{"item":"babel__code-frame","response":"success"},{"item":"babel__core","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property 'symbol' of undefined\n"},{"item":"babel__generator","response":"success"},{"item":"babel__standalone","response":"success"},{"item":"babel__template","response":"success"},{"item":"babel__traverse","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"babelify","response":"success"},{"item":"babylon","response":"success"},{"item":"babylon-walk","response":"success"},{"item":"babyparse","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"backbone","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nMaximum call stack size exceeded\n"},{"item":"backbone-associations","response":"success"},{"item":"backbone-fetch-cache","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nMaximum call stack size exceeded\n"},{"item":"backbone-relational","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nMaximum call stack size exceeded\n"},{"item":"backbone.layoutmanager","response":"success"},{"item":"backbone.localstorage","response":"success"},{"item":"backbone.marionette","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nMaximum call stack size exceeded\n"},{"item":"backbone.paginator","response":"success"},{"item":"backbone.radio","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nMaximum call stack size exceeded\n"},{"item":"backgrid","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nMaximum call stack size exceeded\n"},{"item":"backlog-js","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"backo2","response":"success"},{"item":"backoff","response":"success"},{"item":"backstopjs","response":"success"},{"item":"bagpipes","response":"success"},{"item":"baidu-app","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"baidumap-web-sdk","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"balanced-match","response":"success"},{"item":"bandagedbd__bdapi","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"barbellweights","response":"success"},{"item":"barcode","response":"success"},{"item":"bardjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"base-64","response":"success"},{"item":"base16","response":"success"},{"item":"base64-arraybuffer","response":"success"},{"item":"base64-async","response":"success"},{"item":"base64-js","response":"success"},{"item":"base64-url","response":"success"},{"item":"base64topdf","response":"success"},{"item":"bases","response":"success"},{"item":"bash-glob","response":"success"},{"item":"basic-auth","response":"success"},{"item":"basicauth-middleware","response":"success"},{"item":"basiclightbox","response":"success"},{"item":"batch-stream","response":"success"},{"item":"battery-level","response":"success"},{"item":"bayes-classifier","response":"success"},{"item":"bazinga-translator","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"bchaddrjs","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"bcp-47","response":"success"},{"item":"bcp-47-match","response":"success"},{"item":"bcrypt","response":"success"},{"item":"bcrypt-nodejs","response":"success"},{"item":"bcryptjs","response":"success"},{"item":"bdfjs","response":"success"},{"item":"beanstalkd","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property 'name' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"beanstalkd-worker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property 'name' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"beats","response":"success"},{"item":"bech32","response":"success"},{"item":"behavior3","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"bell","response":"success"},{"item":"benchmark","response":"success"},{"item":"bencode","response":"success"},{"item":"bent","response":"success"},{"item":"better-curry","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"better-queue","response":"success"},{"item":"better-scroll","response":"success"},{"item":"better-sqlite3","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property 'name' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"bezier-js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"bgiframe","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"bidirectional-map","response":"success"},{"item":"big.js","response":"success"},{"item":"bigi","response":"success"},{"item":"bigint","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"bignum","response":"success"},{"item":"bigscreen","response":"success"},{"item":"bin-pack","response":"success"},{"item":"binary-parse-stream","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"binary-parser","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"binaryextensions","response":"success"},{"item":"bind-ponyfill","response":"success"},{"item":"bindings","response":"success"},{"item":"bintrees","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"bip21","response":"success"},{"item":"bip38","response":"success"},{"item":"bit-array","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"bit-twiddle","response":"success"},{"item":"bitcore-lib","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"bittorrent-protocol","response":"success"},{"item":"bitwise-xor","response":"success"},{"item":"bl","response":"success"},{"item":"blacklist","response":"success"},{"item":"blake2","response":"success"},{"item":"blazy","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"bleno","response":"success"},{"item":"blessed","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"blip-sdk","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"blissfuljs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"blob-stream","response":"success"},{"item":"blob-to-buffer","response":"success"},{"item":"blocked","response":"success"},{"item":"blockies","response":"success"},{"item":"blocks","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"bloem","response":"success"},{"item":"bloom-filter","response":"success"},{"item":"bloomfilter","response":"success"},{"item":"blue-tape","response":"success"},{"item":"bluebird","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"bluebird-global","response":"success"},{"item":"bluebird-retry","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"blueimp-load-image","response":"success"},{"item":"blueimp-md5","response":"success"},{"item":"bmp-js","response":"success"},{"item":"bn.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"body-parser","response":"success"},{"item":"body-parser-xml","response":"success"},{"item":"body-scroll-lock","response":"success"},{"item":"bonjour","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property 'kind' of undefined\n"},{"item":"bookshelf","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"boolify-string","response":"success"},{"item":"boom","response":"success"},{"item":"bootbox","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"bootpag","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"bootstrap","response":"success"},{"item":"bootstrap-3-typeahead","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bootstrap-colorpicker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bootstrap-datepicker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bootstrap-fileinput","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property 'declarations' of undefined\n"},{"item":"bootstrap-growl-ifightcrime","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bootstrap-maxlength","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bootstrap-menu","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bootstrap-notify","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bootstrap-select","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bootstrap-slider","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bootstrap-switch","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bootstrap-toggle","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bootstrap-touchspin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bootstrap-treeview","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bootstrap-validator","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bootstrap.paginator","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bootstrap.timepicker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bootstrap.v3.datetimepicker","response":"success"},{"item":"bootstrap3-dialog","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bounce.js","response":"success"},{"item":"box2d","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"bpmn-moddle","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n"},{"item":"brace-expansion","response":"success"},{"item":"braces","response":"success"},{"item":"brainhubeu__react-carousel","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property 'symbol' of undefined\n"},{"item":"brainhubeu__react-carousel","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property 'symbol' of undefined\n"},{"item":"braintree","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"braintree-web","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"braintree-web-drop-in","response":"success"},{"item":"breeze","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"bricks.js","response":"success"},{"item":"bristol","response":"success"},{"item":"bristol-sentry","response":"success"},{"item":"bro-fs","response":"success"},{"item":"brorand","response":"success"},{"item":"browser-bunyan","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null"},{"item":"browser-fingerprint","response":"success"},{"item":"browser-harness","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property 'statements' of undefined\n"},{"item":"browser-pack","response":"success"},{"item":"browser-report","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"browser-resolve","response":"success"},{"item":"browser-sync","response":"success"},{"item":"browser-sync-webpack-plugin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"browserify","response":"success"},{"item":"browserslist","response":"success"},{"item":"browserslist-useragent","response":"success"},{"item":"bs58","response":"success"},{"item":"bser","response":"success"},{"item":"bson","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nMaximum call stack size exceeded\n"},{"item":"btoa","response":"success"},{"item":"btoa-lite","response":"success"},{"item":"buble","response":"success"},{"item":"bucks","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"buffer-compare","response":"success"},{"item":"buffer-crc32","response":"success"},{"item":"buffer-equal","response":"success"},{"item":"buffer-from","response":"success"},{"item":"buffer-reader","response":"success"},{"item":"buffer-xor","response":"success"},{"item":"bufferhelper","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"buffers","response":"success"},{"item":"bufferstream","response":"success"},{"item":"build-output-script","response":"success"},{"item":"bull","response":"success"},{"item":"bull-arena","response":"success"},{"item":"bump-regex","response":"success"},{"item":"bunnymq","response":"success"},{"item":"bunyan","response":"success"},{"item":"bunyan-blackhole","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"bunyan-config","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"bunyan-format","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null"},{"item":"bunyan-logentries","response":"success"},{"item":"bunyan-prettystream","response":"success"},{"item":"bunyan-seq","response":"success"},{"item":"bunyan-winston-adapter","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"burns","response":"success"},{"item":"busboy","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"business-rules-engine","response":"success"},{"item":"bwip-js","response":"success"},{"item":"byline","response":"success"},{"item":"byte-range","response":"success"},{"item":"bytebuffer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"bytes","response":"success"},{"item":"bytewise","response":"success"},{"item":"c3","response":"success"},{"item":"cacache","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"cache-manager","response":"success"},{"item":"cacheable-request","response":"success"},{"item":"cached-path-relative","response":"success"},{"item":"cadesplugin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"cal-heatmap","response":"success"},{"item":"calendar","response":"success"},{"item":"calidation","response":"success"},{"item":"caller","response":"success"},{"item":"callsite","response":"success"},{"item":"calq","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"camelcase-keys-deep","response":"success"},{"item":"camo","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"camunda-external-task-client-js","response":"success"},{"item":"cancan","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"caniuse-api","response":"success"},{"item":"caniuse-lite","response":"success"},{"item":"cannon","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"canvas-confetti","response":"success"},{"item":"canvas-gauges","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"canvasjs","response":"success"},{"item":"canvaskit-wasm","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nMaximum call stack size exceeded\n"},{"item":"capitalize","response":"success"},{"item":"capture-console","response":"success"},{"item":"carbon-components-react","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property 'name' of undefined\n"},{"item":"carbon__colors","response":"success"},{"item":"carbon__icons-react","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property 'declarations' of undefined\n"},{"item":"carbon__layout","response":"success"},{"item":"carbon__motion","response":"success"},{"item":"carbon__pictograms-react","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property 'declarations' of undefined\n"},{"item":"carbon__themes","response":"success"},{"item":"carbon__type","response":"success"},{"item":"card-validator","response":"success"},{"item":"carlo","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"case-sensitive-paths-webpack-plugin","response":"success"},{"item":"caseless","response":"success"},{"item":"cash","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"cashaddrjs","response":"success"},{"item":"casperjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\n\n../DefinitelyTyped/types/node/globals.d.ts(167,13): error TS2300: Duplicate identifier 'require'.\n../DefinitelyTyped/types/phantomjs/index.d.ts(6,18): error TS2300: Duplicate identifier 'require'.\n"},{"item":"cassandra-store","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: GetAccessor - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: GetAccessor - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: GetAccessor - it will convert to null"},{"item":"cassanknex","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"catbox","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"catbox-memory","response":"success"},{"item":"catbox-redis","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"cavy","response":"success"},{"item":"cbor","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"ccap","response":"success"},{"item":"ccapture.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"center-align","response":"success"},{"item":"centra","response":"success"},{"item":"cesium","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"cfn-response","response":"success"},{"item":"chai","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"chai-almost","response":"success"},{"item":"chai-arrays","response":"success"},{"item":"chai-as-promised","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"chai-datetime","response":"success"},{"item":"chai-dom","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"chai-enzyme","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"chai-fs","response":"success"},{"item":"chai-fuzzy","response":"success"},{"item":"chai-jest-snapshot","response":"success"},{"item":"chai-jquery","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"chai-json-schema","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property 'declarations' of undefined\n"},{"item":"chai-like","response":"success"},{"item":"chai-moment","response":"success"},{"item":"chai-oequal","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"chai-roughly","response":"success"},{"item":"chai-spies","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"chai-string","response":"success"},{"item":"chai-style","response":"success"},{"item":"chai-subset","response":"success"},{"item":"chai-things","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"chai-uuid","response":"success"},{"item":"chai-xml","response":"success"},{"item":"chalk-animation","response":"success"},{"item":"chalk-pipe","response":"success"},{"item":"chance","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"change-case-object","response":"success"},{"item":"change-emitter","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"changelog-parser","response":"success"},{"item":"chardet","response":"success"},{"item":"charm","response":"success"},{"item":"charset","response":"success"},{"item":"chart.js","response":"success"},{"item":"chartist","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property 'kind' of undefined\n"},{"item":"chartmogul-node","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"chayns","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"check-error","response":"success"},{"item":"check-sum","response":"success"},{"item":"check-types","response":"success"},{"item":"checkstyle-formatter","response":"success"},{"item":"checksum","response":"success"},{"item":"cheerio","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"chess.js","response":"success"},{"item":"chessboardjs","response":"success"},{"item":"child-process-promise","response":"success"},{"item":"chmodr","response":"success"},{"item":"chocolatechipjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"chordsheetjs","response":"success"},{"item":"chosen-js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"chownr","response":"success"},{"item":"chroma-js","response":"success"},{"item":"chrome","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"chrome-apps","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"chromecast-caf-receiver","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property 'symbol' of undefined\n"},{"item":"chromecast-caf-sender","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"chromedriver","response":"success"},{"item":"chui","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"chunk","response":"success"},{"item":"chunk-text","response":"success"},{"item":"ci-info","response":"success"},{"item":"cipher-base","response":"success"},{"item":"circuit-breaker-js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"circular-dependency-plugin","response":"success"},{"item":"circular-json","response":"success"},{"item":"ckeditor","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"ckeditor__ckeditor5-core","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property 'kind' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n"},{"item":"ckeditor__ckeditor5-engine","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"ckeditor__ckeditor5-utils","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"clamp-js","response":"success"},{"item":"clamp-js-main","response":"success"},{"item":"classnames","response":"success"},{"item":"cldrjs","response":"success"},{"item":"clean-css","response":"success"},{"item":"clean-regexp","response":"success"},{"item":"clear","response":"success"},{"item":"clearbladejs-client","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"clearbladejs-node","response":"success"},{"item":"clearbladejs-server","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"cleave.js","response":"success"},{"item":"cli","response":"success"},{"item":"cli-box","response":"success"},{"item":"cli-color","response":"success"},{"item":"cli-interact","response":"success"},{"item":"cli-progress","response":"success"},{"item":"cli-spinner","response":"success"},{"item":"cli-spinners","response":"success"},{"item":"cli-table","response":"success"},{"item":"cli-table2","response":"success"},{"item":"client-sessions","response":"success"},{"item":"clientjs","response":"success"},{"item":"cliff","response":"success"},{"item":"clipboard","response":"success"},{"item":"clipboard-js","response":"success"},{"item":"clmtrackr","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"clndr","response":"success"},{"item":"clockpicker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"clone","response":"success"},{"item":"clone-deep","response":"success"},{"item":"cloneable-readable","response":"success"},{"item":"cloner","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"closure-compiler","response":"success"},{"item":"cloud-config-client","response":"success"},{"item":"cloud-env","response":"success"},{"item":"cloudflare-apps","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"clovelced-plugin-audiomanagement","response":"success"},{"item":"clownface","response":"success"},{"item":"cls-hooked","response":"success"},{"item":"clui","response":"success"},{"item":"clusterize.js","response":"success"},{"item":"cmd-shim","response":"success"},{"item":"co","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property 'name' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"co-body","response":"success"},{"item":"co-views","response":"success"},{"item":"code","response":"success"},{"item":"codeflask","response":"success"},{"item":"codegen.macro","response":"success"},{"item":"codemirror","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property 'declarations' of undefined\n"},{"item":"codependency","response":"success"},{"item":"coffeeify","response":"success"},{"item":"coinbase","response":"success"},{"item":"coinbase-commerce-node","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n"},{"item":"coinlist","response":"success"},{"item":"coinstring","response":"success"},{"item":"collections","response":"success"},{"item":"collectionsjs","response":"success"},{"item":"color","response":"success"},{"item":"color-check","response":"success"},{"item":"color-convert","response":"success"},{"item":"color-diff","response":"success"},{"item":"color-hash","response":"success"},{"item":"color-name","response":"success"},{"item":"color-namer","response":"success"},{"item":"color-string","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"color-support","response":"success"},{"item":"colorbrewer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"colornames","response":"success"},{"item":"colresizable","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"columnify","response":"success"},{"item":"com.darktalker.cordova.screenshot","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"com.wikitude.phonegap.wikitudeplugin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"combine-reducers","response":"success"},{"item":"combine-source-map","response":"success"},{"item":"combined-stream","response":"success"},{"item":"combokeys","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"cometd","response":"success"},{"item":"command-exists","response":"success"},{"item":"command-line-args","response":"success"},{"item":"command-line-commands","response":"success"},{"item":"command-line-usage","response":"success"},{"item":"commander-remaining-args","response":"success"},{"item":"commangular","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"comment-json","response":"success"},{"item":"commercetools__enzyme-extensions","response":"success"},{"item":"common-errors","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"common-prefix","response":"success"},{"item":"common-tags","response":"success"},{"item":"commondir","response":"success"},{"item":"commonmark","response":"success"},{"item":"compare-func","response":"success"},{"item":"compare-function","response":"success"},{"item":"compare-version","response":"success"},{"item":"compass-vertical-rhythm","response":"success"},{"item":"complex","response":"success"},{"item":"complex.js","response":"success"},{"item":"component-emitter","response":"success"},{"item":"compose-function","response":"success"},{"item":"compress.js","response":"success"},{"item":"compressible","response":"success"},{"item":"compression","response":"success"},{"item":"compression-webpack-plugin","response":"success"},{"item":"compute-argmax","response":"success"},{"item":"compute-quantile","response":"success"},{"item":"compute-stdev","response":"success"},{"item":"concat-map","response":"success"},{"item":"concat-stream","response":"success"},{"item":"concaveman","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"concurrently","response":"success"},{"item":"conductor-animate","response":"success"},{"item":"confidence","response":"success"},{"item":"config","response":"success"},{"item":"config-yaml","response":"success"},{"item":"configs-overload","response":"success"},{"item":"configstore","response":"success"},{"item":"configurable","response":"success"},{"item":"confit","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"connect","response":"success"},{"item":"connect-azuretables","response":"success"},{"item":"connect-busboy","response":"success"},{"item":"connect-datadog","response":"success"},{"item":"connect-ensure-login","response":"success"},{"item":"connect-flash","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"connect-history-api-fallback","response":"success"},{"item":"connect-history-api-fallback-exclusions","response":"success"},{"item":"connect-livereload","response":"success"},{"item":"connect-modrewrite","response":"success"},{"item":"connect-mongo","response":"success"},{"item":"connect-mongodb-session","response":"success"},{"item":"connect-pg-simple","response":"success"},{"item":"connect-redis","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"connect-sequence","response":"success"},{"item":"connect-slashes","response":"success"},{"item":"connect-timeout","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"connect-trim-body","response":"success"},{"item":"console-log-level","response":"success"},{"item":"console-stamp","response":"success"},{"item":"console-ui","response":"success"},{"item":"consolidate","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"consul","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null"},{"item":"contains-path","response":"success"},{"item":"content-disposition","response":"success"},{"item":"content-range","response":"success"},{"item":"content-type","response":"success"},{"item":"contentful-resolve-response","response":"success"},{"item":"contextjs","response":"success"},{"item":"continuation-local-storage","response":"success"},{"item":"conventional-changelog","response":"success"},{"item":"conventional-changelog-config-spec","response":"success"},{"item":"conventional-changelog-core","response":"success"},{"item":"conventional-changelog-preset-loader","response":"success"},{"item":"conventional-changelog-writer","response":"success"},{"item":"conventional-commits-parser","response":"success"},{"item":"conventional-recommended-bump","response":"success"},{"item":"convert-layout","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"convert-source-map","response":"success"},{"item":"convert-string","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"convert-units","response":"success"},{"item":"convict","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"cookie","response":"success"},{"item":"cookie-parser","response":"success"},{"item":"cookie-session","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"cookie-signature","response":"success"},{"item":"cookie_js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"cookiejar","response":"success"},{"item":"cookies","response":"success"},{"item":"copy","response":"success"},{"item":"copy-paste","response":"success"},{"item":"copy-webpack-plugin","response":"success"},{"item":"copyfiles","response":"success"},{"item":"cordova","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-ionic","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-app-version","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-background-mode","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-badge","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-ble-central","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-bluetoothclassic-serial","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-canvascamera","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-device-name","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-email-composer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-file-opener2","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-ibeacon","response":"success"},{"item":"cordova-plugin-insomnia","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-keyboard","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-mapsforge","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-ms-adal","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-native-keyboard","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-ouralabs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-qrscanner","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-spinner","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-plugin-websql","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-sqlite-storage","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova-universal-links-plugin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordova_app_version_plugin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"cordovarduino","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"core-js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"core-object","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"correlation-id","response":"success"},{"item":"cors","response":"success"},{"item":"cote","response":"success"},{"item":"couchbase","response":"success"},{"item":"countdown","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"counterpart","response":"success"},{"item":"countries-and-timezones","response":"success"},{"item":"country-data","response":"success"},{"item":"country-list","response":"success"},{"item":"country-select-js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"coverup","response":"success"},{"item":"cpx","response":"success"},{"item":"cqrs-domain","response":"success"},{"item":"cradle","response":"success"},{"item":"crc","response":"success"},{"item":"create-error","response":"success"},{"item":"create-hash","response":"success"},{"item":"create-hmac","response":"success"},{"item":"create-react-class","response":"success"},{"item":"create-subscription","response":"success"},{"item":"create-xpub","response":"success"},{"item":"createjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"createjs-lib","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"credential","response":"success"},{"item":"credit-card-type","response":"success"},{"item":"critters-webpack-plugin","response":"success"},{"item":"cron","response":"success"},{"item":"croppie","response":"success"},{"item":"cross-spawn","response":"success"},{"item":"cross-storage","response":"success"},{"item":"crossfilter","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"crossroads","response":"success"},{"item":"crpc","response":"success"},{"item":"crumb","response":"success"},{"item":"cryptex","response":"success"},{"item":"cryptiles","response":"success"},{"item":"crypto-js","response":"success"},{"item":"cryptojs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"cryptr","response":"success"},{"item":"cson","response":"success"},{"item":"csp-html-webpack-plugin","response":"success"},{"item":"csprng","response":"success"},{"item":"csrf","response":"success"},{"item":"css","response":"success"},{"item":"css-font-loading-module","response":"success"},{"item":"css-mediaquery","response":"success"},{"item":"css-modules","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"css-modules-loader-core","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"css-modules-require-hook","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"css-to-style","response":"success"},{"item":"css-tree","response":"success"},{"item":"cssbeautify","response":"success"},{"item":"cssesc","response":"success"},{"item":"cssnano","response":"success"},{"item":"csso","response":"success"},{"item":"csurf","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"csv2json","response":"success"},{"item":"csvrow","response":"success"},{"item":"csvtojson","response":"success"},{"item":"cucumber","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"cuid","response":"success"},{"item":"cuint","response":"success"},{"item":"currency-formatter","response":"success"},{"item":"current-git-branch","response":"success"},{"item":"custom-error-generator","response":"success"},{"item":"custom-functions-runtime","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"cwd","response":"success"},{"item":"cwise","response":"success"},{"item":"cwise-compiler","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"cwise-parser","response":"success"},{"item":"cyberblast__config","response":"success"},{"item":"cyberblast__logger","response":"success"},{"item":"cyberblast__webserver","response":"success"},{"item":"cybozulabs-md5","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"cypress-axe","response":"success"},{"item":"cypress-cucumber-preprocessor","response":"success"},{"item":"cypress-image-snapshot","response":"success"},{"item":"cytoscape","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nMaximum call stack size exceeded\n"},{"item":"d","response":"success"},{"item":"d20","response":"success"},{"item":"d3","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nMaximum call stack size exceeded\n"},{"item":"d3-array","response":"success"},{"item":"d3-axis","response":"success"},{"item":"d3-box","response":"success"},{"item":"d3-brush","response":"success"},{"item":"d3-chord","response":"success"},{"item":"d3-cloud","response":"success"},{"item":"d3-collection","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nMaximum call stack size exceeded\n"},{"item":"d3-color","response":"success"},{"item":"d3-contour","response":"success"},{"item":"d3-delaunay","response":"success"},{"item":"d3-dispatch","response":"success"},{"item":"d3-drag","response":"success"},{"item":"d3-dsv","response":"success"},{"item":"d3-ease","response":"success"},{"item":"d3-fetch","response":"success"},{"item":"d3-force","response":"success"},{"item":"d3-format","response":"success"},{"item":"d3-geo","response":"success"},{"item":"d3-graphviz","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property 'declarations' of undefined\n"},{"item":"d3-hexbin","response":"success"},{"item":"d3-hierarchy","response":"success"},{"item":"d3-hsv","response":"success"},{"item":"d3-interpolate","response":"success"},{"item":"d3-interpolate-path","response":"success"},{"item":"d3-path","response":"success"},{"item":"d3-polygon","response":"success"},{"item":"d3-quadtree","response":"success"},{"item":"d3-queue","response":"success"},{"item":"d3-random","response":"success"},{"item":"d3-request","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property 'name' of undefined\n"},{"item":"d3-sankey","response":"success"},{"item":"d3-scale","response":"success"},{"item":"d3-scale-chromatic","response":"success"},{"item":"d3-selection","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property 'length' of undefined\n"},{"item":"d3-selection-multi","response":"success"},{"item":"d3-shape","response":"success"},{"item":"d3-time","response":"success"},{"item":"d3-time-format","response":"success"},{"item":"d3-timer","response":"success"},{"item":"d3-tip","response":"success"},{"item":"d3-transition","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property 'declarations' of undefined\n"},{"item":"d3-voronoi","response":"success"},{"item":"d3-zoom","response":"success"},{"item":"d3.slider","response":"success"},{"item":"d3kit","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property 'declarations' of undefined\n"},{"item":"d3pie","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"dagre","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"dagre-d3","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"dagre-layout","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"dashify","response":"success"},{"item":"dat.gui","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property 'kind' of undefined\n"},{"item":"data-driven","response":"success"},{"item":"datadog-metrics","response":"success"},{"item":"datadog-statsd-metrics-collector","response":"success"},{"item":"datadog-tracer","response":"success"},{"item":"datadog-winston","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"datastore-core","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: GetAccessor - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"datastore-level","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"datatables.net","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"datatables.net-autofill","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"datatables.net-buttons","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"datatables.net-colreorder","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"datatables.net-fixedcolumns","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"datatables.net-fixedheader","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"datatables.net-keytable","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"datatables.net-rowgroup","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"datatables.net-rowreorder","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"datatables.net-scroller","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"datatables.net-select","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"date-and-time","response":"success"},{"item":"date-arithmetic","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"date-fp","response":"success"},{"item":"date-now","response":"success"},{"item":"date-range-array","response":"success"},{"item":"date-utils","response":"success"},{"item":"date.format.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"dateformat","response":"success"},{"item":"datejs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"daterangepicker","response":"success"},{"item":"dav","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"dayzed","response":"success"},{"item":"db-migrate-base","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"db-migrate-pg","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"db.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"dbus","response":"success"},{"item":"dc","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nMaximum call stack size exceeded\n"},{"item":"deasync","response":"success"},{"item":"death","response":"success"},{"item":"debessmann","response":"success"},{"item":"debounce","response":"success"},{"item":"debounce-promise","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"debug","response":"success"},{"item":"decay","response":"success"},{"item":"decode-entities","response":"success"},{"item":"decode-uri-component","response":"success"},{"item":"decompress","response":"success"},{"item":"decorum","response":"success"},{"item":"dedent","response":"success"},{"item":"deep-assign","response":"success"},{"item":"deep-diff","response":"success"},{"item":"deep-equal","response":"success"},{"item":"deep-equal-in-any-order","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property 'declarations' of undefined\n"},{"item":"deep-extend","response":"success"},{"item":"deep-freeze","response":"success"},{"item":"deep-freeze-strict","response":"success"},{"item":"deezer-sdk","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"default-gateway","response":"success"},{"item":"defaults","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"defaults-deep","response":"success"},{"item":"defer-promise","response":"success"},{"item":"define-properties","response":"success"},{"item":"defined","response":"success"},{"item":"deglob","response":"success"},{"item":"deindent","response":"success"},{"item":"deku","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"delaunator","response":"success"},{"item":"delete-empty","response":"success"},{"item":"deline","response":"success"},{"item":"deluge","response":"success"},{"item":"denodeify","response":"success"},{"item":"deoxxa-content-type","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"depd","response":"success"},{"item":"dependency-tree","response":"success"},{"item":"deployjava","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"deprecate","response":"success"},{"item":"deps-sort","response":"success"},{"item":"derhuerst__cli-on-key","response":"success"},{"item":"destroy","response":"success"},{"item":"destroy-on-hwm","response":"success"},{"item":"detect-character-encoding","response":"success"},{"item":"detect-emoji-support","response":"success"},{"item":"detect-hover","response":"success"},{"item":"detect-it","response":"success"},{"item":"detect-node","response":"success"},{"item":"detect-passive-events","response":"success"},{"item":"detect-pointer","response":"success"},{"item":"detect-port","response":"success"},{"item":"detect-touch-events","response":"success"},{"item":"detective","response":"success"},{"item":"detox","response":"success"},{"item":"dev-ip","response":"success"},{"item":"devexpress-aspnetcore-bootstrap","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"devexpress-web","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"dexie-batch","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"df-visible","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"dhtmlxgantt","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"dhtmlxscheduler","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"di","response":"success"},{"item":"di-lite","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"diacritics","response":"success"},{"item":"dialog-polyfill","response":"success"},{"item":"dicer","response":"success"},{"item":"didyoumean","response":"success"},{"item":"diff","response":"success"},{"item":"diff-match-patch","response":"success"},{"item":"diff2html","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"diffie-hellman","response":"success"},{"item":"difflib","response":"success"},{"item":"digibyte","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"dinero.js","response":"success"},{"item":"dingtalk-robot-sender","response":"success"},{"item":"dir-glob","response":"success"},{"item":"dir-resolve","response":"success"},{"item":"dir-walker-gen","response":"success"},{"item":"direction","response":"success"},{"item":"dirname-regex","response":"success"},{"item":"dirty-chai","response":"success"},{"item":"discontinuous-range","response":"success"},{"item":"discord-rpc","response":"success"},{"item":"discourse-sso","response":"success"},{"item":"dispatchr","response":"success"},{"item":"disposable-email-domains","response":"success"},{"item":"distributions","response":"success"},{"item":"distributions-poisson-quantile","response":"success"},{"item":"diva.js","response":"success"},{"item":"djv","response":"success"},{"item":"dkim-signer","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"dlv","response":"success"},{"item":"dnssd","response":"success"},{"item":"doccookies","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"dock-spawn","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"dockerode","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"docopt","response":"success"},{"item":"doctrine","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"document-ready","response":"success"},{"item":"documentdb","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"documentdb-server","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"documentdb-session","response":"success"},{"item":"dogapi","response":"success"},{"item":"doge-seed","response":"success"},{"item":"dojo","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"dom-clipboard-api","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"dom-inputevent","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"dom-matches","response":"success"},{"item":"dom-mediacapture-record","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"dom-parser","response":"success"},{"item":"dom-to-image","response":"success"},{"item":"dom4","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"domexception","response":"success"},{"item":"domhandler","response":"success"},{"item":"domo","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"dompurify","response":"success"},{"item":"domready","response":"success"},{"item":"domtagger","response":"success"},{"item":"domurl","response":"success"},{"item":"domutils","response":"success"},{"item":"donna","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"dookie","response":"success"},{"item":"dos2unix","response":"success"},{"item":"dot","response":"success"},{"item":"dot-object","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"dot-prop-immutable","response":"success"},{"item":"dotdir-regex","response":"success"},{"item":"dotdotdot","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"dotenv-flow","response":"success"},{"item":"dotenv-parse-variables","response":"success"},{"item":"dotenv-safe","response":"success"},{"item":"dotenv-webpack","response":"success"},{"item":"dotfile-regex","response":"success"},{"item":"dottie","response":"success"},{"item":"double-ended-queue","response":"success"},{"item":"doublearray","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"doubleclick-gpt","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"download","response":"success"},{"item":"downloadjs","response":"success"},{"item":"downscale","response":"success"},{"item":"dplayer","response":"success"},{"item":"draft-convert","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"draft-js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property 'kind' of undefined\n"},{"item":"draftjs-to-html","response":"success"},{"item":"drag-timetable","response":"success"},{"item":"draggabilly","response":"success"},{"item":"dragscroll","response":"success"},{"item":"dragster","response":"success"},{"item":"dragula","response":"success"},{"item":"driftless","response":"success"},{"item":"drivelist","response":"success"},{"item":"dropbox-chooser","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"dropboxjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"dropkickjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"dropzone","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"ds18b20","response":"success"},{"item":"dsv","response":"success"},{"item":"dts-bundle","response":"success"},{"item":"dts-generator","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"duckduckgo-images-api","response":"success"},{"item":"duplexer2","response":"success"},{"item":"duplexer3","response":"success"},{"item":"duplexify","response":"success"},{"item":"duplicate-package-checker-webpack-plugin","response":"success"},{"item":"durandal","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"dush","response":"success"},{"item":"dustjs-linkedin","response":"success"},{"item":"dv","response":"success"},{"item":"dvtng-jss","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"dw-bxslider-4","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"dwt","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: EnumMember - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: EnumMember - it will convert to null"},{"item":"dygraphs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"dymo-label-framework","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"dynamic-time-warping","response":"success"},{"item":"dynamodb","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"dynatable","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"dynatrace","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"dynogels","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property 'symbol' of undefined\n"},{"item":"each","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"earcut","response":"success"},{"item":"easeljs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"eases","response":"success"},{"item":"easy-api-request","response":"success"},{"item":"easy-jsend","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"easy-session","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"easy-table","response":"success"},{"item":"easy-xapi","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"easy-xapi-utils","response":"success"},{"item":"easydate","response":"success"},{"item":"ebml","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"ebongarde-root","response":"success"},{"item":"eccrypto","response":"success"},{"item":"echarts","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"ecma-proposal-math-extensions","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"ecore","response":"success"},{"item":"ecurve","response":"success"},{"item":"ed25519","response":"success"},{"item":"ed2curve","response":"success"},{"item":"edmonds-blossom","response":"success"},{"item":"edtr-io__mathquill","response":"success"},{"item":"ee-first","response":"success"},{"item":"egg-mock","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property 'kind' of undefined\n"},{"item":"egg.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"egjs__axes","response":"success"},{"item":"egjs__component","response":"success"},{"item":"ej.web.all","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"ejs","response":"success"},{"item":"ejs-locals","response":"success"},{"item":"ejson","response":"success"},{"item":"elastic.js","response":"success"},{"item":"elasticlunr","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"elasticsearch","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"electron-clipboard-extended","response":"success"},{"item":"electron-devtools-installer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"electron-json-storage","response":"success"},{"item":"electron-load-devtool","response":"success"},{"item":"electron-localshortcut","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(1655,31): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(3013,31): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(3450,25): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(3603,26): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(4128,30): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(4497,33): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(5341,30): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(6186,25): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(7111,37): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(7123,31): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(7133,31): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(7145,33): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(7157,34): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(7173,42): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(7186,32): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(7200,32): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(7321,22): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-localshortcut/node_modules/electron/electron.d.ts(7756,29): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n"},{"item":"electron-notifications","response":"success"},{"item":"electron-notify","response":"success"},{"item":"electron-packager","response":"success"},{"item":"electron-prompt","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(1655,31): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(3013,31): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(3450,25): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(3603,26): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(4128,30): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(4497,33): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(5341,30): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(6186,25): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(7111,37): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(7123,31): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(7133,31): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(7145,33): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(7157,34): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(7173,42): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(7186,32): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(7200,32): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(7321,22): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-prompt/node_modules/electron/electron.d.ts(7756,29): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n"},{"item":"electron-settings","response":"success"},{"item":"electron-spellchecker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(1655,31): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(3013,31): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(3450,25): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(3603,26): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(4128,30): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(4497,33): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(5341,30): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(6186,25): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(7111,37): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(7123,31): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(7133,31): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(7145,33): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(7157,34): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(7173,42): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(7186,32): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(7200,32): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(7321,22): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-spellchecker/node_modules/electron/electron.d.ts(7756,29): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n"},{"item":"electron-window-state","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(1655,31): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(3013,31): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(3450,25): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(3603,26): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(4128,30): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(4497,33): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(5341,30): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(6186,25): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(7111,37): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(7123,31): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(7133,31): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(7145,33): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(7157,34): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(7173,42): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(7186,32): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(7200,32): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(7321,22): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n../DefinitelyTyped/types/electron-window-state/node_modules/electron/electron.d.ts(7756,29): error TS2689: Cannot extend an interface 'NodeJS.EventEmitter'. Did you mean 'implements'?\n"},{"item":"element-resize-detector","response":"success"},{"item":"element-resize-event","response":"success"},{"item":"elementtree","response":"success"},{"item":"elgamal","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"elliptic","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null"},{"item":"elm","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"elo-rank","response":"success"},{"item":"elv","response":"success"},{"item":"email-templates","response":"success"},{"item":"ember","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"ember-data","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n../DefinitelyTyped/types/ember-data/index.d.ts(967,52): error TS2344: Type 'any' does not satisfy the constraint 'never'.\n"},{"item":"ember-feature-flags","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"ember-mocha","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"ember-modal-dialog","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"ember-qunit","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"ember-resolver","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"ember-test-helpers","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"ember-testing-helpers","response":"success"},{"item":"ember__application","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property 'declarations' of undefined\n"},{"item":"ember__array","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property 'length' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"ember__component","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nMaximum call stack size exceeded\n"},{"item":"ember__controller","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"ember__debug","response":"success"},{"item":"ember__engine","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property 'declarations' of undefined\n"},{"item":"ember__error","response":"success"},{"item":"ember__object","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"ember__ordered-set","response":"success"},{"item":"ember__polyfills","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property 'name' of undefined\n"},{"item":"ember__routing","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"ember__runloop","response":"success"},{"item":"ember__service","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"ember__string","response":"success"},{"item":"ember__template","response":"success"},{"item":"ember__test","response":"success"},{"item":"ember__test-helpers","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"ember__utils","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"emissary","response":"success"},{"item":"emoji-flags","response":"success"},{"item":"emoji-js","response":"success"},{"item":"emoji-mart","response":"success"},{"item":"emoji-regex","response":"success"},{"item":"emoji-strip","response":"success"},{"item":"emojione","response":"success"},{"item":"empower","response":"success"},{"item":"empty-dir","response":"success"},{"item":"emscripten","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"encodeurl","response":"success"},{"item":"encoding-down","response":"success"},{"item":"encoding-japanese","response":"success"},{"item":"end-of-stream","response":"success"},{"item":"engine-check","response":"success"},{"item":"engine.io","response":"success"},{"item":"engine.io-client","response":"success"},{"item":"enhanced-resolve","response":"success"},{"item":"enigma.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"enquire.js","response":"success"},{"item":"ensure-posix-path","response":"success"},{"item":"ent","response":"success"},{"item":"entities","response":"success"},{"item":"entria__relay-experimental","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property 'name' of undefined\n"},{"item":"env-ci","response":"success"},{"item":"env-to-object","response":"success"},{"item":"envify","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"enzyme","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property 'declarations' of undefined\n"},{"item":"enzyme-adapter-react-15","response":"success"},{"item":"enzyme-adapter-react-15.4","response":"success"},{"item":"enzyme-adapter-react-16","response":"success"},{"item":"enzyme-async-helpers","response":"success"},{"item":"enzyme-react-intl","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property 'declarations' of undefined\n"},{"item":"enzyme-redux","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property 'declarations' of undefined\n"},{"item":"enzyme-to-json","response":"success"},{"item":"eonasdan-bootstrap-datetimepicker","response":"success"},{"item":"epiceditor","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"epilogue","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"epub","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"eq.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"error-subclass","response":"success"},{"item":"errorhandler","response":"success"},{"item":"es-feature-detection","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"es-to-primitive","response":"success"},{"item":"es6-collections","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"es6-promisify","response":"success"},{"item":"es6-shim","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"es6-weak-map","response":"success"},{"item":"esc-pos-encoder","response":"success"},{"item":"escape-html","response":"success"},{"item":"escape-latex","response":"success"},{"item":"escape-regexp","response":"success"},{"item":"escodegen","response":"success"},{"item":"escpos","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"eslint","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"eslint-plugin-prettier","response":"success"},{"item":"eslint-scope","response":"success"},{"item":"eslint-visitor-keys","response":"success"},{"item":"esm","response":"success"},{"item":"esprima","response":"success"},{"item":"esprima-walk","response":"success"},{"item":"espruino","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"esquery","response":"success"},{"item":"esrever","response":"success"},{"item":"esri-leaflet","response":"success"},{"item":"esri-leaflet-geocoder","response":"success"},{"item":"estimate","response":"success"},{"item":"estraverse","response":"success"},{"item":"estree","response":"success"},{"item":"estree-jsx","response":"success"},{"item":"etag","response":"success"},{"item":"eth-lightwallet","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"eth-sig-util","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"ethereum-protocol","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: EnumMember - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: EnumMember - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: EnumMember - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: EnumMember - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null"},{"item":"ethereumjs-abi","response":"success"},{"item":"ethjs-signer","response":"success"},{"item":"eureka-js-client","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"evaporate","response":"success"},{"item":"event-emitter","response":"success"},{"item":"event-emitter-es6","response":"success"},{"item":"event-hooks-webpack-plugin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"event-kit","response":"success"},{"item":"event-loop-lag","response":"success"},{"item":"event-stream","response":"success"},{"item":"event-to-promise","response":"success"},{"item":"events","response":"success"},{"item":"events.once","response":"success"},{"item":"eventsource","response":"success"},{"item":"evernote","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"excel-style-dataformatter","response":"success"},{"item":"exenv","response":"success"},{"item":"exif","response":"success"},{"item":"exit","response":"success"},{"item":"exorcist","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"expand-tilde","response":"success"},{"item":"expect-puppeteer","response":"success"},{"item":"expect.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"expectations","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"expired","response":"success"},{"item":"expired-storage","response":"success"},{"item":"expirymanager","response":"success"},{"item":"expo-mixpanel-analytics","response":"success"},{"item":"expo__status-bar-height","response":"success"},{"item":"expo__vector-icons","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(111,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(130,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(206,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(253,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(258,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(291,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(292,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(297,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; }'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"express","response":"success"},{"item":"express-actuator","response":"success"},{"item":"express-async-wrap","response":"success"},{"item":"express-boom","response":"success"},{"item":"express-brute","response":"success"},{"item":"express-brute-memcached","response":"success"},{"item":"express-brute-mongo","response":"success"},{"item":"express-brute-redis","response":"success"},{"item":"express-bunyan-logger","response":"success"},{"item":"express-busboy","response":"success"},{"item":"express-cluster","response":"success"},{"item":"express-correlation-id","response":"success"},{"item":"express-debug","response":"success"},{"item":"express-domain-middleware","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"express-ejs-layouts","response":"success"},{"item":"express-enforces-ssl","response":"success"},{"item":"express-fileupload","response":"success"},{"item":"express-flash","response":"success"},{"item":"express-flash-2","response":"success"},{"item":"express-flash-notification","response":"success"},{"item":"express-form-data","response":"success"},{"item":"express-formidable","response":"success"},{"item":"express-handlebars","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"express-http-proxy","response":"success"},{"item":"express-jsonschema","response":"success"},{"item":"express-jwt","response":"success"},{"item":"express-less","response":"success"},{"item":"express-list-endpoints","response":"success"},{"item":"express-minify","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"express-mongo-sanitize","response":"success"},{"item":"express-mung","response":"success"},{"item":"express-myconnection","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"express-mysql-session","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"express-ntlm","response":"success"},{"item":"express-oauth-server","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"express-paginate","response":"success"},{"item":"express-partials","response":"success"},{"item":"express-pino-logger","response":"success"},{"item":"express-rate-limit","response":"success"},{"item":"express-redis-cache","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nMaximum call stack size exceeded\n"},{"item":"express-request-id","response":"success"},{"item":"express-route-fs","response":"success"},{"item":"express-routemap","response":"success"},{"item":"express-routes-versioning","response":"success"},{"item":"express-sanitized","response":"success"},{"item":"express-serve-static-core","response":"success"},{"item":"express-session","response":"success"},{"item":"express-sitemap-xml","response":"success"},{"item":"express-slow-down","response":"success"},{"item":"express-socket.io-session","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\n\n../DefinitelyTyped/types/express-socket.io-session/index.d.ts(12,27): error TS2694: Namespace 'global.Express' has no exported member 'Session'.\n"},{"item":"express-sslify","response":"success"},{"item":"express-status-monitor","response":"success"},{"item":"express-to-koa","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"express-unless","response":"success"},{"item":"express-urlrewrite","response":"success"},{"item":"express-useragent","response":"success"},{"item":"express-version-request","response":"success"},{"item":"express-version-route","response":"success"},{"item":"express-wechat-access","response":"success"},{"item":"express-ws","response":"success"},{"item":"express-ws-routes","response":"success"},{"item":"express-xml-bodyparser","response":"success"},{"item":"extend","response":"success"},{"item":"extjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"extra-watch-webpack-plugin","response":"success"},{"item":"extract-files","response":"success"},{"item":"extract-text-webpack-plugin","response":"success"},{"item":"extract-zip","response":"success"},{"item":"extsprintf","response":"success"},{"item":"eyes","response":"success"},{"item":"ez-plus","response":"success"},{"item":"f1","response":"success"},{"item":"fabric","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property 'symbol' of undefined\n"},{"item":"facebook-instant-games","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"facebook-js-sdk","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"facebook-locales","response":"success"},{"item":"facebook-pixel","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"facepaint","response":"success"},{"item":"factory-girl","response":"success"},{"item":"faker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"falafel","response":"success"},{"item":"falcor","response":"success"},{"item":"falcor-express","response":"success"},{"item":"falcor-http-datasource","response":"success"},{"item":"falcor-json-graph","response":"success"},{"item":"falcor-router","response":"success"},{"item":"famous","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"fancy-log","response":"success"},{"item":"fancybox","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"farbtastic","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"fast-chunk-string","response":"success"},{"item":"fast-html-parser","response":"success"},{"item":"fast-html-parser","response":"success"},{"item":"fast-json-stable-stringify","response":"success"},{"item":"fast-levenshtein","response":"success"},{"item":"fast-list","response":"success"},{"item":"fast-memory-cache","response":"success"},{"item":"fast-ratelimit","response":"success"},{"item":"fast-shuffle","response":"success"},{"item":"fast-stats","response":"success"},{"item":"fast-text-encoding","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"fast64","response":"success"},{"item":"fastbitset","response":"success"},{"item":"fastclick","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"fastify-accepts","response":"success"},{"item":"fastify-favicon","response":"success"},{"item":"fastify-rate-limit","response":"success"},{"item":"favico.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"favicons","response":"success"},{"item":"favicons-webpack-plugin","response":"success"},{"item":"fb","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"fb-watchman","response":"success"},{"item":"fbemitter","response":"success"},{"item":"feather-icons","response":"success"},{"item":"feather-route-matcher","response":"success"},{"item":"featherlight","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"feathersjs__authentication","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"feathersjs__authentication-client","response":"success"},{"item":"feathersjs__authentication-jwt","response":"success"},{"item":"feathersjs__authentication-local","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"feathersjs__authentication-oauth1","response":"success"},{"item":"feathersjs__authentication-oauth2","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nMaximum call stack size exceeded\n"},{"item":"feathersjs__configuration","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property 'declarations' of undefined\n"},{"item":"feathersjs__errors","response":"success"},{"item":"feathersjs__express","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property 'declarations' of undefined\n"},{"item":"feathersjs__feathers","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n"},{"item":"feathersjs__primus","response":"success"},{"item":"feathersjs__primus-client","response":"success"},{"item":"feathersjs__rest-client","response":"success"},{"item":"feathersjs__socket-commons","response":"success"},{"item":"feathersjs__socketio","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"feathersjs__socketio-client","response":"success"},{"item":"feedme","response":"success"},{"item":"feedparser","response":"success"},{"item":"fetch-jsonp","response":"success"},{"item":"fetch-mock","response":"success"},{"item":"fetch.io","response":"success"},{"item":"ffi","response":"success"},{"item":"ffi-napi","response":"success"},{"item":"ffmpeg","response":"success"},{"item":"ffmpeg-static","response":"success"},{"item":"ffmpeg.js","response":"success"},{"item":"ffprobe-static","response":"success"},{"item":"fhir","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"fhir-js-client","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"fhir-kit-client","response":"success"},{"item":"fibers","response":"success"},{"item":"fibjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"field","response":"success"},{"item":"figlet","response":"success"},{"item":"figma","response":"success"},{"item":"file-exists","response":"success"},{"item":"file-loader","response":"success"},{"item":"file-saver","response":"success"},{"item":"filesize-parser","response":"success"},{"item":"filesystem","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"filewriter","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"fill-pdf","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"filter-invalid-dom-props","response":"success"},{"item":"final-form-focus","response":"success"},{"item":"finalhandler","response":"success"},{"item":"finch","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"find","response":"success"},{"item":"find-cache-dir","response":"success"},{"item":"find-down","response":"success"},{"item":"find-package-json","response":"success"},{"item":"find-parent-dir","response":"success"},{"item":"find-project-root","response":"success"},{"item":"find-root","response":"success"},{"item":"findup-sync","response":"success"},{"item":"fined","response":"success"},{"item":"fingerprintjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"fingerprintjs2","response":"success"},{"item":"firebase-client","response":"success"},{"item":"firebase-token-generator","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"firebird","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"firefox","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"firefox-webext-browser","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"firmata","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"first-mate","response":"success"},{"item":"fixed-data-table","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nMaximum call stack size exceeded\n"},{"item":"fixed-data-table-2","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nMaximum call stack size exceeded\n"},{"item":"flagged-respawn","response":"success"},{"item":"flake-idgen","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"flat","response":"success"},{"item":"flat-cache","response":"success"},{"item":"flatbuffers","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"flatbush","response":"success"},{"item":"fleximap","response":"success"},{"item":"flexmonster","response":"success"},{"item":"flexslider","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"flickity","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"flight","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"flightplan","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"flipsnap","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"float-equal","response":"success"},{"item":"float-regex","response":"success"},{"item":"flot","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"flowdoc","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"flowjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"fluent","response":"success"},{"item":"fluent-ffmpeg","response":"success"},{"item":"fluent-langneg","response":"success"},{"item":"fluent-react","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property 'name' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n"},{"item":"fluent__bundle","response":"success"},{"item":"fluent__dedent","response":"success"},{"item":"fluent__langneg","response":"success"},{"item":"fluent__react","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property 'name' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n"},{"item":"fluent__sequence","response":"success"},{"item":"flush-write-stream","response":"success"},{"item":"flushable","response":"success"},{"item":"flux","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"fluxible","response":"success"},{"item":"fluxible-addons-react","response":"success"},{"item":"fluxible-router","response":"success"},{"item":"fluxxor","response":"success"},{"item":"fm-websync","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"fnando__sparkline","response":"success"},{"item":"fnv-lite","response":"success"},{"item":"focus-within","response":"success"},{"item":"follow-redirects","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property 'name' of undefined\n"},{"item":"fontfaceobserver","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"fontkit","response":"success"},{"item":"fontoxml","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"force-graph","response":"success"},{"item":"forever-agent","response":"success"},{"item":"forever-monitor","response":"success"},{"item":"forge-apis","response":"success"},{"item":"forge-viewer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"form-serialize","response":"success"},{"item":"form-serializer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"form-urlencoded","response":"success"},{"item":"format-duration","response":"success"},{"item":"format-io","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"format-link-header","response":"success"},{"item":"format-unicorn","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"format-util","response":"success"},{"item":"formidable","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property 'kind' of undefined\n"},{"item":"formol","response":"success"},{"item":"forms","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"forwarded","response":"success"},{"item":"fossil-delta","response":"success"},{"item":"foundation","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"fpsmeter","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"framebus","response":"success"},{"item":"franc","response":"success"},{"item":"frctl__fractal","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property 'length' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n"},{"item":"frecency","response":"success"},{"item":"freedom","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"freeport","response":"success"},{"item":"fresh","response":"success"},{"item":"freshy","response":"success"},{"item":"frida-gum","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"friendly-errors-webpack-plugin","response":"success"},{"item":"frisby","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property 'symbol' of undefined\n"},{"item":"from","response":"success"},{"item":"from2","response":"success"},{"item":"fromjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"fs-capacitor","response":"success"},{"item":"fs-cson","response":"success"},{"item":"fs-ext","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"fs-extra","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"fs-extra-promise","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"fs-extra-promise-es6","response":"success"},{"item":"fs-finder","response":"success"},{"item":"fs-mock","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"fs-plus","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"fs-readdir-recursive","response":"success"},{"item":"fs-readfile-promise","response":"success"},{"item":"fscreen","response":"success"},{"item":"ftdomdelegate","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"ftp","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"ftpd","response":"success"},{"item":"ftps","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"fullname","response":"success"},{"item":"fullpage.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"function-bind","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property 'name' of undefined\n"},{"item":"fundamental-react","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property 'name' of undefined\n"},{"item":"fusioncharts","response":"success"},{"item":"fuzzaldrin","response":"success"},{"item":"fuzzaldrin-plus","response":"success"},{"item":"fuzzy-search","response":"success"},{"item":"fuzzyset","response":"success"},{"item":"fuzzyset.js","response":"success"},{"item":"fxn","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property 'kind' of undefined\n"},{"item":"gae.channel.api","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"gamedig","response":"success"},{"item":"gamepad","response":"success"},{"item":"gamequery","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"gandi-livedns","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"gapi","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"gapi.analytics","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"gapi.auth2","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.calendar","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.acceleratedmobilepageurl","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.adexchangebuyer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.adexchangebuyer2","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.adexchangeseller","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.adexperiencereport","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.admin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.adsense","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.adsensehost","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.analytics","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.analyticsreporting","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.androiddeviceprovisioning","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.androidenterprise","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.androidmanagement","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.androidpublisher","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.appengine","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.appsactivity","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.appstate","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.bigquery","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.bigquerydatatransfer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.blogger","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.books","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.calendar","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.civicinfo","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.classroom","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.cloudbilling","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.cloudbuild","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.clouddebugger","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.clouderrorreporting","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.cloudfunctions","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.cloudiot","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.cloudkms","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.cloudmonitoring","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.cloudresourcemanager","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.cloudtasks","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.cloudtrace","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.clouduseraccounts","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.compute","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.consumersurveys","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.container","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.content","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.customsearch","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.dataflow","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.dataproc","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.datastore","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.deploymentmanager","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.dfareporting","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.discovery","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.dlp","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.dns","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.doubleclickbidmanager","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.doubleclicksearch","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.drive","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.firebasedynamiclinks","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.firebaseremoteconfig","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.firebaserules","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.firestore","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.fitness","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.fusiontables","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.games","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.gamesconfiguration","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.gamesmanagement","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.genomics","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.gmail","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.groupsmigration","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.groupssettings","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.iam","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.identitytoolkit","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.kgsearch","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.language","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.licensing","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.logging","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.manufacturers","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.mirror","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.ml","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.monitoring","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.oauth2","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.oslogin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.pagespeedonline","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.partners","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.people","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.photoslibrary","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.playcustomapp","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.playmoviespartner","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.plus","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.plusdomains","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.prediction","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.proximitybeacon","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.pubsub","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.qpxexpress","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.reseller","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.resourceviews","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.runtimeconfig","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.safebrowsing","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.script","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.searchconsole","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.servicecontrol","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.servicemanagement","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.serviceuser","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.sheets","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.siteverification","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.slides","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.sourcerepo","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.spanner","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.spectrum","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.speech","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.sqladmin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.storage","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.storagetransfer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.streetviewpublish","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.surveys","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.tagmanager","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.taskqueue","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.tasks","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.testing","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.toolresults","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.translate","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.urlshortener","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.vault","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.videointelligence","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.vision","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.webfonts","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.webmasters","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.youtube","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.youtubeanalytics","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"gapi.client.youtubereporting","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"gapi.drive","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"gapi.pagespeedonline","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"gapi.people","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"gapi.plus","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"gapi.translate","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"gapi.urlshortener","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"gapi.youtube","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"gapi.youtubeanalytics","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"gaussian","response":"success"},{"item":"gc-stats","response":"success"},{"item":"gdal","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"geetest","response":"success"},{"item":"gematriya","response":"success"},{"item":"gen-readlines","response":"success"},{"item":"generate-changelog","response":"success"},{"item":"generate-json-webpack-plugin","response":"success"},{"item":"generic-functions","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"generic-pool","response":"success"},{"item":"gently","response":"success"},{"item":"geobuf","response":"success"},{"item":"geodesy","response":"success"},{"item":"geoflatbush","response":"success"},{"item":"geoip-lite","response":"success"},{"item":"geojson","response":"success"},{"item":"geojson2osm","response":"success"},{"item":"geokdbush","response":"success"},{"item":"geolite2","response":"success"},{"item":"geometry-dom","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"geopattern","response":"success"},{"item":"gestalt","response":"success"},{"item":"get-caller-file","response":"success"},{"item":"get-certain","response":"success"},{"item":"get-emoji","response":"success"},{"item":"get-folder-size","response":"success"},{"item":"get-func-name","response":"success"},{"item":"get-node-dimensions","response":"success"},{"item":"get-res","response":"success"},{"item":"get-value","response":"success"},{"item":"getenv","response":"success"},{"item":"getos","response":"success"},{"item":"getpass","response":"success"},{"item":"gettext.js","response":"success"},{"item":"gfc","response":"success"},{"item":"gh-pages","response":"success"},{"item":"ghauth","response":"success"},{"item":"ghost-storage-base","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"gifffer","response":"success"},{"item":"gijgo","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"giphy-api","response":"success"},{"item":"giraffe","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"git","response":"success"},{"item":"git-add-remote","response":"success"},{"item":"git-branch","response":"success"},{"item":"git-config","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property 'kind' of undefined\n"},{"item":"git-config-path","response":"success"},{"item":"git-raw-commits","response":"success"},{"item":"git-repo-name","response":"success"},{"item":"git-rev","response":"success"},{"item":"git-rev-sync","response":"success"},{"item":"git-revision-webpack-plugin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"git-root-dir","response":"success"},{"item":"git-semver-tags","response":"success"},{"item":"git-url-parse","response":"success"},{"item":"git-user-email","response":"success"},{"item":"git-user-name","response":"success"},{"item":"git-username","response":"success"},{"item":"gitconfiglocal","response":"success"},{"item":"github-url-from-git","response":"success"},{"item":"github-url-to-object","response":"success"},{"item":"github-username-regex","response":"success"},{"item":"gl","response":"success"},{"item":"gl-matrix","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"gl-react","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of Parameter - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"gl-react-dom","response":"success"},{"item":"gl-react-expo","response":"success"},{"item":"gl-react-headless","response":"success"},{"item":"gl-react-native","response":"success"},{"item":"gl-shader","response":"success"},{"item":"gl-texture2d","response":"success"},{"item":"gl-vec2","response":"success"},{"item":"gl-vec3","response":"success"},{"item":"gl-vec4","response":"success"},{"item":"gldatepicker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"glidejs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"glob","response":"success"},{"item":"glob-base","response":"success"},{"item":"glob-expand","response":"success"},{"item":"glob-parent","response":"success"},{"item":"glob-stream","response":"success"},{"item":"glob-to-regexp","response":"success"},{"item":"glob-watcher","response":"success"},{"item":"global-modules","response":"success"},{"item":"global-modules-path","response":"success"},{"item":"global-npm","response":"success"},{"item":"global-paths","response":"success"},{"item":"global-prefix","response":"success"},{"item":"global-tunnel-ng","response":"success"},{"item":"globalize","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null"},{"item":"globalize-compiler","response":"success"},{"item":"globalthis","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"globjoin","response":"success"},{"item":"globule","response":"success"},{"item":"glue","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"gm","response":"success"},{"item":"go","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property 'kind' of undefined\n"},{"item":"good-storage","response":"success"},{"item":"google-adwords-scripts","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"google-apps-script","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"google-apps-script-oauth2","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"google-closure-compiler","response":"success"},{"item":"google-cloud__datastore","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"google-cloud__kms","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"google-cloud__tasks","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"google-cloud__text-to-speech","response":"success"},{"item":"google-ddns","response":"success"},{"item":"google-drive-realtime-api","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"google-earth","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"google-fonts","response":"success"},{"item":"google-images","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"google-libphonenumber","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"google-map-react","response":"success"},{"item":"google-maps","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"google-maps-react","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"google-protobuf","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"google-translate-api","response":"success"},{"item":"google.analytics","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"google.feeds","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"google.fonts","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"google.geolocation","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"google.picker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"google.script.client-side","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"google.visualization","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"google__maps","response":"success"},{"item":"googlemaps","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"googlemaps.infobubble","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"googlepay","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"got","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"graceful-fs","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"gradient-string","response":"success"},{"item":"graham_scan","response":"success"},{"item":"gramps__rest-helpers","response":"success"},{"item":"graphite-udp","response":"success"},{"item":"graphlib","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"graphlib-dot","response":"success"},{"item":"graphql-api-koa","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"graphql-bigint","response":"success"},{"item":"graphql-date","response":"success"},{"item":"graphql-deduplicator","response":"success"},{"item":"graphql-depth-limit","response":"success"},{"item":"graphql-errors","response":"success"},{"item":"graphql-fields","response":"success"},{"item":"graphql-iso-date","response":"success"},{"item":"graphql-list-fields","response":"success"},{"item":"graphql-react","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null"},{"item":"graphql-relay","response":"success"},{"item":"graphql-resolve-batch","response":"success"},{"item":"graphql-resolvers","response":"success"},{"item":"graphql-type-json","response":"success"},{"item":"graphql-type-uuid","response":"success"},{"item":"graphql-upload","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"graphviz","response":"success"},{"item":"grasp","response":"success"},{"item":"gravatar","response":"success"},{"item":"gray-percentage","response":"success"},{"item":"graylog2","response":"success"},{"item":"greasemonkey","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"grecaptcha","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"gregorian-calendar","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"gremlin","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"grid-template-parser","response":"success"},{"item":"gridfs-stream","response":"success"},{"item":"gridstack","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"gridstack","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"growing-io","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"grpc-error","response":"success"},{"item":"grunt","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"gsap","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"gtag.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"gtin","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"guardian__prosemirror-invisibles","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property 'symbol' of undefined\n"},{"item":"guid","response":"success"},{"item":"gulp","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"gulp-angular-templatecache","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"gulp-autoprefixer","response":"success"},{"item":"gulp-babel","response":"success"},{"item":"gulp-batch","response":"success"},{"item":"gulp-bump","response":"success"},{"item":"gulp-cache","response":"success"},{"item":"gulp-cached","response":"success"},{"item":"gulp-change","response":"success"},{"item":"gulp-changed","response":"success"},{"item":"gulp-cheerio","response":"success"},{"item":"gulp-clean-dest","response":"success"},{"item":"gulp-coffeeify","response":"success"},{"item":"gulp-coffeelint","response":"success"},{"item":"gulp-concat","response":"success"},{"item":"gulp-connect","response":"success"},{"item":"gulp-copy","response":"success"},{"item":"gulp-csso","response":"success"},{"item":"gulp-debug","response":"success"},{"item":"gulp-diff","response":"success"},{"item":"gulp-dtsm","response":"success"},{"item":"gulp-espower","response":"success"},{"item":"gulp-file-include","response":"success"},{"item":"gulp-filter","response":"success"},{"item":"gulp-flatten","response":"success"},{"item":"gulp-gh-pages","response":"success"},{"item":"gulp-gzip","response":"success"},{"item":"gulp-header","response":"success"},{"item":"gulp-help","response":"success"},{"item":"gulp-help-doc","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"gulp-html-prettify","response":"success"},{"item":"gulp-html-replace","response":"success"},{"item":"gulp-htmlmin","response":"success"},{"item":"gulp-if","response":"success"},{"item":"gulp-image","response":"success"},{"item":"gulp-image-resize","response":"success"},{"item":"gulp-imagemin","response":"success"},{"item":"gulp-inject","response":"success"},{"item":"gulp-insert","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"gulp-install","response":"success"},{"item":"gulp-intercept","response":"success"},{"item":"gulp-istanbul","response":"success"},{"item":"gulp-jade","response":"success"},{"item":"gulp-jasmine","response":"success"},{"item":"gulp-jasmine-browser","response":"success"},{"item":"gulp-json-editor","response":"success"},{"item":"gulp-json-validator","response":"success"},{"item":"gulp-jsonmin","response":"success"},{"item":"gulp-jsonminify","response":"success"},{"item":"gulp-jspm","response":"success"},{"item":"gulp-less","response":"success"},{"item":"gulp-load-plugins","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"gulp-minify-css","response":"success"},{"item":"gulp-minify-html","response":"success"},{"item":"gulp-mocha","response":"success"},{"item":"gulp-modernizr","response":"success"},{"item":"gulp-msbuild","response":"success"},{"item":"gulp-mustache","response":"success"},{"item":"gulp-newer","response":"success"},{"item":"gulp-ng-annotate","response":"success"},{"item":"gulp-nodemon","response":"success"},{"item":"gulp-nunit-runner","response":"success"},{"item":"gulp-plumber","response":"success"},{"item":"gulp-postcss","response":"success"},{"item":"gulp-protractor","response":"success"},{"item":"gulp-pug-i18n","response":"success"},{"item":"gulp-remember","response":"success"},{"item":"gulp-rename","response":"success"},{"item":"gulp-replace","response":"success"},{"item":"gulp-responsive-images","response":"success"},{"item":"gulp-rev","response":"success"},{"item":"gulp-rev-replace","response":"success"},{"item":"gulp-ruby-sass","response":"success"},{"item":"gulp-sass","response":"success"},{"item":"gulp-sass-variables","response":"success"},{"item":"gulp-sequence","response":"success"},{"item":"gulp-size","response":"success"},{"item":"gulp-sort","response":"success"},{"item":"gulp-sourcemaps","response":"success"},{"item":"gulp-strip-comments","response":"success"},{"item":"gulp-strip-debug","response":"success"},{"item":"gulp-stylus","response":"success"},{"item":"gulp-svg-sprite","response":"success"},{"item":"gulp-svgmin","response":"success"},{"item":"gulp-tap","response":"success"},{"item":"gulp-task-listing","response":"success"},{"item":"gulp-template","response":"success"},{"item":"gulp-terser","response":"success"},{"item":"gulp-tsd","response":"success"},{"item":"gulp-uglify","response":"success"},{"item":"gulp-useref","response":"success"},{"item":"gulp-util","response":"success"},{"item":"gulp-watch","response":"success"},{"item":"gulp-zip","response":"success"},{"item":"gun","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property 'declarations' of undefined\n"},{"item":"gyronorm","response":"success"},{"item":"gzip-js","response":"success"},{"item":"h2o2","response":"success"},{"item":"halfred","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"halogen","response":"success"},{"item":"halogenium","response":"success"},{"item":"hammerjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"handlebars-helpers","response":"success"},{"item":"hapi","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"hapi-auth-basic","response":"success"},{"item":"hapi-auth-bearer-token","response":"success"},{"item":"hapi-auth-cookie","response":"success"},{"item":"hapi-decorators","response":"success"},{"item":"hapi-pino","response":"success"},{"item":"hapi__b64","response":"success"},{"item":"hapi__basic","response":"success"},{"item":"hapi__bell","response":"success"},{"item":"hapi__catbox","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"hapi__catbox-memory","response":"success"},{"item":"hapi__catbox-redis","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"hapi__cookie","response":"success"},{"item":"hapi__crumb","response":"success"},{"item":"hapi__glue","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"hapi__h2o2","response":"success"},{"item":"hapi__hapi","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"hapi__hawk","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property 'symbol' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n"},{"item":"hapi__inert","response":"success"},{"item":"hapi__joi","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null"},{"item":"hapi__mimos","response":"success"},{"item":"hapi__nes","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property 'kind' of undefined\n"},{"item":"hapi__podium","response":"success"},{"item":"hapi__shot","response":"success"},{"item":"hapi__sntp","response":"success"},{"item":"hapi__vision","response":"success"},{"item":"hapi__yar","response":"success"},{"item":"happypack","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"har-format","response":"success"},{"item":"hard-source-webpack-plugin","response":"success"},{"item":"hark","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property 'name' of undefined\n"},{"item":"harmon","response":"success"},{"item":"harmony-proxy","response":"success"},{"item":"has-ansi","response":"success"},{"item":"hash-file","response":"success"},{"item":"hash-it","response":"success"},{"item":"hash-stream","response":"success"},{"item":"hash-sum","response":"success"},{"item":"hasher","response":"success"},{"item":"hashids","response":"success"},{"item":"hashmap","response":"success"},{"item":"hashring","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"hashset","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"hashtable","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"hashtag-regex","response":"success"},{"item":"hast","response":"success"},{"item":"hat","response":"success"},{"item":"haversine","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"hbs","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"hdkey","response":"success"},{"item":"he","response":"success"},{"item":"headroom","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"heap","response":"success"},{"item":"heapdump","response":"success"},{"item":"heatmap.js","response":"success"},{"item":"hedron","response":"success"},{"item":"hellojs","response":"success"},{"item":"hellosign-embedded","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"helmet","response":"success"},{"item":"heredatalens","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"heremaps","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"heroku-logger","response":"success"},{"item":"hex-rgba","response":"success"},{"item":"hexo","response":"success"},{"item":"hexo-bunyan","response":"success"},{"item":"hexo-fs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"hexo-log","response":"success"},{"item":"hexo-util","response":"success"},{"item":"hh-mm-ss","response":"success"},{"item":"hig__button","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null"},{"item":"highcharts-ng","response":"success"},{"item":"highland","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"highlight-words-core","response":"success"},{"item":"highlight.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property 'kind' of undefined\n"},{"item":"highlightjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property 'kind' of undefined\n"},{"item":"hiredis","response":"success"},{"item":"hirestime","response":"success"},{"item":"history","response":"success"},{"item":"history.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"historykana","response":"success"},{"item":"hjson","response":"success"},{"item":"hls-parser","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"hls.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"hoek","response":"success"},{"item":"hogan.js","response":"success"},{"item":"hoist-non-react-statics","response":"success"},{"item":"holderjs","response":"success"},{"item":"honeybadger","response":"success"},{"item":"hooker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"hookrouter","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"hopscotch","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"host-validation","response":"success"},{"item":"hosted-git-info","response":"success"},{"item":"hostile","response":"success"},{"item":"howler","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"hpp","response":"success"},{"item":"html-entities","response":"success"},{"item":"html-minifier","response":"success"},{"item":"html-parser","response":"success"},{"item":"html-pdf","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"html-tag-names","response":"success"},{"item":"html-to-draftjs","response":"success"},{"item":"html-to-text","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"html-truncate","response":"success"},{"item":"html-validator","response":"success"},{"item":"html-void-elements","response":"success"},{"item":"html-webpack-plugin","response":"success"},{"item":"html-webpack-template","response":"success"},{"item":"html2canvas","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"html5-history","response":"success"},{"item":"html5-to-pdf","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"html5plus","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"htmlbars-inline-precompile","response":"success"},{"item":"htmlescape","response":"success"},{"item":"htmlhint","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"htmlparser2","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property 'symbol' of undefined\n"},{"item":"htmltojsx","response":"success"},{"item":"http-assert","response":"success"},{"item":"http-aws-es","response":"success"},{"item":"http-build-query","response":"success"},{"item":"http-cache-semantics","response":"success"},{"item":"http-codes","response":"success"},{"item":"http-context","response":"success"},{"item":"http-errors","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"http-link-header","response":"success"},{"item":"http-proxy","response":"success"},{"item":"http-proxy-agent","response":"success"},{"item":"http-proxy-middleware","response":"success"},{"item":"http-rx","response":"success"},{"item":"http-server","response":"success"},{"item":"http-string-parser","response":"success"},{"item":"httperr","response":"success"},{"item":"hubot","response":"success"},{"item":"hubspot-pace","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"human-interval","response":"success"},{"item":"humane-js","response":"success"},{"item":"humanize-duration","response":"success"},{"item":"humanize-ms","response":"success"},{"item":"humanize-plus","response":"success"},{"item":"humanparser","response":"success"},{"item":"hummus-recipe","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"humps","response":"success"},{"item":"hyco-ws","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"hyper-aws4","response":"success"},{"item":"hyperscript","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"hypertext-application-language","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"hystrixjs","response":"success"},{"item":"i18n","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"i18n-abide","response":"success"},{"item":"i18n-js","response":"success"},{"item":"i18next-ko","response":"success"},{"item":"i18next-node-fs-backend","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"i18next-sprintf-postprocessor","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"i2c-bus","response":"success"},{"item":"iab-vpaid","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"iarna__toml","response":"success"},{"item":"iban","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"ibm-mobilefirst","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"ibm-openapi-validator","response":"success"},{"item":"ibm_db","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property 'symbol' of undefined\n"},{"item":"ical","response":"success"},{"item":"icepick","response":"success"},{"item":"icheck","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"icon-gen","response":"success"},{"item":"iconv","response":"success"},{"item":"icss-utils","response":"success"},{"item":"identicon.js","response":"success"},{"item":"idyll","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"idyll-ast","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"idyll-compiler","response":"success"},{"item":"idyll-document","response":"success"},{"item":"iferr","response":"success"},{"item":"iframe-resizer","response":"success"},{"item":"ifvisible","response":"success"},{"item":"ignite-ui","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"ignore-styles","response":"success"},{"item":"ignore-walk","response":"success"},{"item":"iltorb","response":"success"},{"item":"image-thumbnail","response":"success"},{"item":"imagemagick","response":"success"},{"item":"imagemagick-native","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"imagemapster","response":"success"},{"item":"imagemin","response":"success"},{"item":"imagemin-gifsicle","response":"success"},{"item":"imagemin-jpegtran","response":"success"},{"item":"imagemin-mozjpeg","response":"success"},{"item":"imagemin-optipng","response":"success"},{"item":"imagemin-pngquant","response":"success"},{"item":"imagemin-svgo","response":"success"},{"item":"imagemin-webp","response":"success"},{"item":"images","response":"success"},{"item":"imagesloaded","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"imap","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"imap-simple","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"imgur-rest-api","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"immediate","response":"success"},{"item":"imperium","response":"success"},{"item":"impress","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"imsi-grok","response":"success"},{"item":"imul","response":"success"},{"item":"imurmurhash","response":"success"},{"item":"in-app-purchase","response":"success"},{"item":"inboxsdk","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"incremental-dom","response":"success"},{"item":"indefinite","response":"success"},{"item":"inert","response":"success"},{"item":"ineum","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"inflation","response":"success"},{"item":"inflected","response":"success"},{"item":"inflection","response":"success"},{"item":"infobox-parser","response":"success"},{"item":"inherits","response":"success"},{"item":"ini","response":"success"},{"item":"iniparser","response":"success"},{"item":"init-package-json","response":"success"},{"item":"ink-select-input","response":"success"},{"item":"ink-spinner","response":"success"},{"item":"ink-table","response":"success"},{"item":"ink-testing-library","response":"success"},{"item":"ink-text-input","response":"success"},{"item":"inline-css","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"inline-style-prefixer","response":"success"},{"item":"input-moment","response":"success"},{"item":"inputmask","response":"success"},{"item":"inquirer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property 'name' of undefined\n"},{"item":"inquirer-npm-name","response":"success"},{"item":"insert-css","response":"success"},{"item":"insert-module-globals","response":"success"},{"item":"insert-text-at-cursor","response":"success"},{"item":"insight","response":"success"},{"item":"inspectlet-es","response":"success"},{"item":"integer","response":"success"},{"item":"integrate-adaptive-simpson","response":"success"},{"item":"intercept-stdout","response":"success"},{"item":"intercom-client","response":"success"},{"item":"intercom-web","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"intercomjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"interface-datastore","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: GetAccessor - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"internal-slot","response":"success"},{"item":"interpret","response":"success"},{"item":"intersects","response":"success"},{"item":"intersperse","response":"success"},{"item":"intl","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property 'name' of undefined\n"},{"item":"intl-tel-input","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\n\n../DefinitelyTyped/types/intl-tel-input/index.d.ts(125,30): error TS2304: Cannot find name 'JQueryDeferred'.\n"},{"item":"intrinsic-scale","response":"success"},{"item":"intro.js","response":"success"},{"item":"invariant","response":"success"},{"item":"inversify-devtools","response":"success"},{"item":"iobroker","response":"success"},{"item":"ion-rangeslider","response":"success"},{"item":"iopipe__iopipe","response":"success"},{"item":"ioredis","response":"success"},{"item":"iost-contract","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"iota.lib.js","response":"success"},{"item":"ip","response":"success"},{"item":"ip-address","response":"success"},{"item":"ipcheck","response":"success"},{"item":"irc","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"iri","response":"success"},{"item":"iron","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"is","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"is-absolute","response":"success"},{"item":"is-alphanumerical","response":"success"},{"item":"is-array","response":"success"},{"item":"is-blank","response":"success"},{"item":"is-buffer","response":"success"},{"item":"is-callable","response":"success"},{"item":"is-charging","response":"success"},{"item":"is-ci","response":"success"},{"item":"is-color","response":"success"},{"item":"is-date-object","response":"success"},{"item":"is-dotdir","response":"success"},{"item":"is-dotfile","response":"success"},{"item":"is-empty","response":"success"},{"item":"is-empty-object","response":"success"},{"item":"is-even","response":"success"},{"item":"is-finite","response":"success"},{"item":"is-function","response":"success"},{"item":"is-generator","response":"success"},{"item":"is-git-url","response":"success"},{"item":"is-glob","response":"success"},{"item":"is-hotkey","response":"success"},{"item":"is-integer","response":"success"},{"item":"is-my-json-valid","response":"success"},{"item":"is-natural-number","response":"success"},{"item":"is-negated-glob","response":"success"},{"item":"is-number","response":"success"},{"item":"is-number-like","response":"success"},{"item":"is-object","response":"success"},{"item":"is-odd","response":"success"},{"item":"is-progressive","response":"success"},{"item":"is-promise","response":"success"},{"item":"is-relative","response":"success"},{"item":"is-running","response":"success"},{"item":"is-ssh","response":"success"},{"item":"is-touch-device","response":"success"},{"item":"is-trademarked","response":"success"},{"item":"is-typedarray","response":"success"},{"item":"is-unc-path","response":"success"},{"item":"is-url","response":"success"},{"item":"is-uuid","response":"success"},{"item":"is-valid-glob","response":"success"},{"item":"is-valid-path","response":"success"},{"item":"is-windows","response":"success"},{"item":"isaac","response":"success"},{"item":"isarray","response":"success"},{"item":"isbn-utils","response":"success"},{"item":"iscroll","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"isexe","response":"success"},{"item":"iso-3166-2","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"iso8601-localizer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"isomorphic-fetch","response":"success"},{"item":"isomorphic-form-data","response":"success"},{"item":"isotope-layout","response":"success"},{"item":"isstream","response":"success"},{"item":"issue-parser","response":"success"},{"item":"istanbul","response":"success"},{"item":"istanbul-lib-coverage","response":"success"},{"item":"istanbul-lib-hook","response":"success"},{"item":"istanbul-lib-instrument","response":"success"},{"item":"istanbul-lib-report","response":"success"},{"item":"istanbul-lib-source-maps","response":"success"},{"item":"istanbul-middleware","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"istanbul-reports","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"istextorbinary","response":"success"},{"item":"it-all","response":"success"},{"item":"it-pushable","response":"success"},{"item":"ityped","response":"success"},{"item":"ix.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"jackrabbit","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"jade","response":"success"},{"item":"jaeger-client","response":"success"},{"item":"jake","response":"success"},{"item":"jalaali-js","response":"success"},{"item":"japanese-holidays","response":"success"},{"item":"jasmine","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"jasmine-ajax","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"jasmine-data-provider","response":"success"},{"item":"jasmine-data_driven_tests","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"jasmine-enzyme","response":"success"},{"item":"jasmine-es6-promise-matchers","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"jasmine-fixture","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"jasmine-given","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"jasmine-jquery","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"jasmine-matchers","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"jasmine-node","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"jasmine-promise-matchers","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"jasmine_dom_matchers","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"jasminewd2","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"java","response":"success"},{"item":"java-applet","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"javascript-astar","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"javascript-bignum","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"javascript-state-machine","response":"success"},{"item":"javascript-time-ago","response":"success"},{"item":"jbinary","response":"success"},{"item":"jcanvas","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"jdataview","response":"success"},{"item":"jee-jsf","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"jenkins","response":"success"},{"item":"jest","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"jest-axe","response":"success"},{"item":"jest-dev-server","response":"success"},{"item":"jest-docblock","response":"success"},{"item":"jest-environment-puppeteer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property 'kind' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n"},{"item":"jest-expect-message","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"jest-image-snapshot","response":"success"},{"item":"jest-in-case","response":"success"},{"item":"jest-json-schema","response":"success"},{"item":"jest-matcher-one-of","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"jest-matcher-utils","response":"success"},{"item":"jest-matchers","response":"success"},{"item":"jest-plugin-context","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"jest-plugin-set","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"jest-specific-snapshot","response":"success"},{"item":"jest-validate","response":"success"},{"item":"jest-when","response":"success"},{"item":"jexl","response":"success"},{"item":"jfp","response":"success"},{"item":"jfs","response":"success"},{"item":"jira-client","response":"success"},{"item":"jju","response":"success"},{"item":"jjv","response":"success"},{"item":"jjve","response":"success"},{"item":"jmespath","response":"success"},{"item":"johnny-five","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"joi","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"joi-password-complexity","response":"success"},{"item":"johnny-five","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"joi","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"joi-password-complexity","response":"success"},{"item":"joigoose","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property 'declarations' of undefined\n"},{"item":"josa","response":"success"},{"item":"jotform-css.js","response":"success"},{"item":"jpeg-autorotate","response":"success"},{"item":"jpegtran-bin","response":"success"},{"item":"jpm","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"jqgrid","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"jqrangeslider","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"jquery","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nMaximum call stack size exceeded\n"},{"item":"jquery-ajax-chain","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"jquery-alertable","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"jquery-animate-scroll","response":"success"},{"item":"jquery-awesome-cursor","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"jquery-backstretch","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"jquery-countdown","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"jquery-countto","response":"success"},{"item":"jquery-cropbox","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"jquery-deferred","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property 'symbol' of undefined\n"},{"item":"jquery-deparam","response":"success"},{"item":"jquery-drawer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"jquery-easy-loading","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"jquery-editable-select","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"jquery-focus-exit","response":"success"},{"item":"jquery-focusable","response":"success"},{"item":"jquery-formatdatetime","response":"success"},{"item":"jquery-fullscreen","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"jquery-galleria","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"jquery-gray","response":"success"},{"item":"jquery-handsontable","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"jquery-jcrop","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"jquery-jsonrpcclient","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"jquery-knob","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"jquery-lazyload","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"jquery-loading-overlay","response":"success"},{"item":"jquery-mask-plugin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"jquery-maskmoney","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"jquery-match-height","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"jquery-mockjax","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"jquery-mouse-exit","response":"success"},{"item":"jquery-mousewheel","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"jquery-next-id","response":"success"},{"item":"jquery-param","response":"success"},{"item":"jquery-slimscroll","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"jquery-slugify","response":"success"},{"item":"jquery-sortable","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"jquery-steps","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"jquery-sticky","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"jquery-tags-input","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery-timeentry","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery-toast-plugin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery-toastmessage-plugin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery-truncate-html","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery-typeahead","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery-urlparam","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery-validation-unobtrusive","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery.address","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery.appear","response":"success"},{"item":"jquery.are-you-sure","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery.autosize","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery.base64","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery.bbq","response":"success"},{"item":"jquery.blockui","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery.bootstrap.wizard","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery.browser","response":"success"},{"item":"jquery.cleditor","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery.clientsidelogging","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery.color","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery.colorbox","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery.colorpicker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery.contextmenu","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery.cookie","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery.customselect","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"jquery.cycle","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.cycle2","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.dropotron","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.dynatree","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.elang","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.fancytree","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.fileupload","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.filtertable","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.finger","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.flagstrap","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.form","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.fullscreen","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.gridster","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.growl","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.highlight-bartaz","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.jnotify","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.joyride","response":"success"},{"item":"jquery.jsignature","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.leanmodal","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.livestampjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property 'declarations' of undefined\n"},{"item":"jquery.menuaim","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.mmenu","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.nicescroll","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.notify","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.notifybar","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"jquery.noty","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.payment","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.pin","response":"success"},{"item":"jquery.pjax","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.placeholder","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.pnotify","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.postmessage","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.prettyphoto","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.qrcode","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.rateit","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.rowgrid","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.scrollto","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.simplemodal","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.simplepagination","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.simulate","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.soap","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.sortelements","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.stickem","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.superlink","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.tagsmanager","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.tile","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.timeago","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.timepicker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.timer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.tinycarousel","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"jquery.tinyscrollbar","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"jquery.tipsy","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"jquery.tools","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"jquery.total-storage","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"jquery.transit","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"jquery.ui.datetimepicker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"jquery.ui.layout","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"jquery.uniform","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"jquery.validation","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"jquery.watermark","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"jquery.window","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"jquerymobile","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"jqueryui","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"js-base64","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"js-beautify","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"js-captcha","response":"success"},{"item":"js-clipper","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"js-combinatorics","response":"success"},{"item":"js-cookie","response":"success"},{"item":"js-data-angular","response":"success"},{"item":"js-fixtures","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"js-git","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"js-levenshtein","response":"success"},{"item":"js-md5","response":"success"},{"item":"js-money","response":"success"},{"item":"js-nacl","response":"success"},{"item":"js-priority-queue","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"js-quantities","response":"success"},{"item":"js-roman-numerals","response":"success"},{"item":"js-schema","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"js-search","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"js-sha512","response":"success"},{"item":"js-string-escape","response":"success"},{"item":"js-to-java","response":"success"},{"item":"js-url","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"js-yaml","response":"success"},{"item":"js.spec","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"jsbn","response":"success"},{"item":"jschannel","response":"success"},{"item":"jscodeshift","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"jscrollpane","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"jsdeferred","response":"success"},{"item":"jsdoc-to-markdown","response":"success"},{"item":"jsdom","response":"success"},{"item":"jsdom-global","response":"success"},{"item":"jsen","response":"success"},{"item":"jsend","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"jsesc","response":"success"},{"item":"jsfl","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"jsforce","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property 'kind' of undefined\n"},{"item":"jsftp","response":"success"},{"item":"jsgraph","response":"success"},{"item":"jshamcrest","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"jsmediatags","response":"success"},{"item":"jsmockito","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"jsnox","response":"success"},{"item":"json-buffer","response":"success"},{"item":"json-editor","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"json-file-plus","response":"success"},{"item":"json-form-data","response":"success"},{"item":"json-js","response":"success"},{"item":"json-merge-patch","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"json-parse-better-errors","response":"success"},{"item":"json-patch","response":"success"},{"item":"json-patch-gen","response":"success"},{"item":"json-pointer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property 'kind' of undefined\n"},{"item":"json-query","response":"success"},{"item":"json-rpc-random-id","response":"success"},{"item":"json-rpc-ws","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"json-schema","response":"success"},{"item":"json-schema-compare","response":"success"},{"item":"json-schema-merge-allof","response":"success"},{"item":"json-server","response":"success"},{"item":"json-socket","response":"success"},{"item":"json-stable-stringify","response":"success"},{"item":"json-stream-stringify","response":"success"},{"item":"json-stringify-safe","response":"success"},{"item":"json-to-ast","response":"success"},{"item":"json2csv","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"json2md","response":"success"},{"item":"json2mq","response":"success"},{"item":"json3","response":"success"},{"item":"json5","response":"success"},{"item":"json8-patch","response":"success"},{"item":"json_ml","response":"success"},{"item":"jsonabc","response":"success"},{"item":"jsonapi-serializer","response":"success"},{"item":"jsoneditor","response":"success"},{"item":"jsoneditor-for-react","response":"success"},{"item":"jsoneditoronline","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"jsonfile","response":"success"},{"item":"jsonic","response":"success"},{"item":"jsonld","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"jsonminify","response":"success"},{"item":"jsonnet","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"jsonp","response":"success"},{"item":"jsonpack","response":"success"},{"item":"jsonpath","response":"success"},{"item":"jsonpointer","response":"success"},{"item":"jsonquery","response":"success"},{"item":"jsonrpc-serializer","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"jsonstream","response":"success"},{"item":"jsontoxml","response":"success"},{"item":"jsonwebtoken","response":"success"},{"item":"jsonwebtoken-promisified","response":"success"},{"item":"jspath","response":"success"},{"item":"jspdf","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"jsprintmanager","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"jsqrcode","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"jsqubits","response":"success"},{"item":"jsreport-chrome-pdf","response":"success"},{"item":"jsreport-core","response":"success"},{"item":"jsreport-html-embedded-in-docx","response":"success"},{"item":"jsreport-html-to-xlsx","response":"success"},{"item":"jsreport-jsrender","response":"success"},{"item":"jsreport-phantom-pdf","response":"success"},{"item":"jsreport-xlsx","response":"success"},{"item":"jsrp","response":"success"},{"item":"jsrsasign","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"jssha","response":"success"},{"item":"jssip","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"jsspec__jsspec","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"jstimezonedetect","response":"success"},{"item":"jstorage","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"jstree","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"jsts","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"jsuite","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"jsum","response":"success"},{"item":"jsuri","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"jsurl","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"jsx-chai","response":"success"},{"item":"jszip","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n"},{"item":"jug","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property 'kind' of undefined\n"},{"item":"jui","response":"success"},{"item":"jui-core","response":"success"},{"item":"jui-grid","response":"success"},{"item":"jump.js","response":"success"},{"item":"just-clone","response":"success"},{"item":"just-debounce-it","response":"success"},{"item":"just-extend","response":"success"},{"item":"just-pick","response":"success"},{"item":"just-safe-get","response":"success"},{"item":"just-snake-case","response":"success"},{"item":"just-throttle","response":"success"},{"item":"jweixin","response":"success"},{"item":"jwk-to-pem","response":"success"},{"item":"jwplayer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"jws","response":"success"},{"item":"jwt-client","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"jwt-decode","response":"success"},{"item":"jwt-express","response":"success"},{"item":"jwt-simple","response":"success"},{"item":"jwt-then","response":"success"},{"item":"jxon","response":"success"},{"item":"k6","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\n\n../DefinitelyTyped/types/k6/global.d.ts(53,9): error TS2451: Cannot redeclare block-scoped variable 'console'.\n../DefinitelyTyped/types/node/globals.d.ts(145,13): error TS2451: Cannot redeclare block-scoped variable 'console'.\nnode_modules/typescript/lib/lib.dom.d.ts(19661,13): error TS2451: Cannot redeclare block-scoped variable 'console'.\n"},{"item":"kafka-node-avro","response":"success"},{"item":"kamailio-kemi","response":"success"},{"item":"karma","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"karma-chai","response":"success"},{"item":"karma-chai-sinon","response":"success"},{"item":"karma-coverage","response":"success"},{"item":"karma-coverage-istanbul-reporter","response":"success"},{"item":"karma-fixture","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"karma-jasmine","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"karma-webpack","response":"success"},{"item":"katex","response":"success"},{"item":"kcors","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"kd-tree-javascript","response":"success"},{"item":"kdbush","response":"success"},{"item":"kdbxweb","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"keen-tracking","response":"success"},{"item":"kefir","response":"success"},{"item":"kendo-ui","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"kerberos","response":"success"},{"item":"keyboardjs","response":"success"},{"item":"keycloak-connect","response":"success"},{"item":"keygrip","response":"success"},{"item":"keymaster","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keymirror","response":"success"},{"item":"keypress.js","response":"success"},{"item":"keystonejs__adapter-knex","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keystonejs__adapter-mongoose","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keystonejs__apollo-helpers","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keystonejs__app-admin-ui","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keystonejs__app-graphql","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keystonejs__app-next","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keystonejs__app-nuxt","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keystonejs__app-static","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keystonejs__auth-passport","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keystonejs__auth-password","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keystonejs__email","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keystonejs__fields","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keystonejs__file-adapters","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keystonejs__keystone","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keystonejs__list-plugins","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keystonejs__logger","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keystonejs__oembed-adapters","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keystonejs__session","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"keysym","response":"success"},{"item":"keyv","response":"success"},{"item":"keyv__mongo","response":"success"},{"item":"keyv__mysql","response":"success"},{"item":"keyv__postgres","response":"success"},{"item":"keyv__redis","response":"success"},{"item":"keyv__sqlite","response":"success"},{"item":"kii-cloud-sdk","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"kik-browser","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"kind-of","response":"success"},{"item":"kineticjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"kissfft-js","response":"success"},{"item":"kiwicom__orbit-design-tokens","response":"success"},{"item":"klaw","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"klaw-sync","response":"success"},{"item":"kms-json","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"knex-db-manager","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"knex-postgis","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"knockback","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"knockout","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"knockout-amd-helpers","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"knockout-postbox","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"knockout-secure-binding","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"knockout-transformations","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"knockout.deferred.updates","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"knockout.editables","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"knockout.es5","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"knockout.kogrid","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"knockout.mapper","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"knockout.mapping","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"knockout.projections","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"knockout.punches","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"knockout.rx","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"knockout.validation","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"knockout.viewmodel","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"knockstrap","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"knuddels-userapps-api","response":"success"},{"item":"knuth-shuffle","response":"success"},{"item":"ko.plus","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"koa","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-basic-auth","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-bodyparser","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-bouncer","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-bunyan-logger","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-cache-control","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-compose","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-compress","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-conditional-get","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-convert","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-cookie","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-cors","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-csrf","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-dec-router","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property 'symbol' of undefined\n"},{"item":"koa-docs","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-ejs","response":"success"},{"item":"koa-etag","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-favicon","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-generic-session","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-graphql","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-hbs","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null"},{"item":"koa-helmet","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-html-minifier","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-joi-router","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"koa-joi-router-docs","response":"success"},{"item":"koa-json","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-json-error","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-log","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-log4","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-logger","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-logger-winston","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-morgan","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-mount","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-multer","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-passport","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null"},{"item":"koa-pino-logger","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-proxies","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-proxy","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-qs","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-range","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-ratelimit","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-ratelimit-lru","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-redis","response":"success"},{"item":"koa-redis-cache","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-response-time","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-route","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-router","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"koa-send","response":"success"},{"item":"koa-session","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-session-minimal","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-sslify","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-static","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-static-cache","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-static-server","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-views","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-webpack","response":"success"},{"item":"koa-websocket","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa-xml-body","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa2-cors","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa2-session-redis","response":"success"},{"item":"koa__cors","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa__multer","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"koa__router","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"koji-tools","response":"success"},{"item":"kolite","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"kompression","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"konami.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"kos-core","response":"success"},{"item":"kraken-js","response":"success"},{"item":"kramed","response":"success"},{"item":"kss","response":"success"},{"item":"kue","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nMaximum call stack size exceeded\n"},{"item":"kue-ui-client","response":"success"},{"item":"kurento-client","response":"success"},{"item":"kurento-utils","response":"success"},{"item":"kuromoji","response":"success"},{"item":"kythe","response":"success"},{"item":"lab","response":"success"},{"item":"labeled-stream-splicer","response":"success"},{"item":"lambda-log","response":"success"},{"item":"lambda-tester","response":"success"},{"item":"lang.js","response":"success"},{"item":"langmap","response":"success"},{"item":"lasso","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property 'symbol' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n"},{"item":"later","response":"success"},{"item":"latinize","response":"success"},{"item":"latlon-geohash","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"launchpad","response":"success"},{"item":"layzr.js","response":"success"},{"item":"lazy-brush","response":"success"},{"item":"lazy-property","response":"success"},{"item":"lazy.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"lazypipe","response":"success"},{"item":"ldap-filters","response":"success"},{"item":"ldapjs","response":"success"},{"item":"ldapjs-client","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"leadfoot","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"leaflet","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"leaflet-areaselect","response":"success"},{"item":"leaflet-curve","response":"success"},{"item":"leaflet-deepzoom","response":"success"},{"item":"leaflet-draw","response":"success"},{"item":"leaflet-editable","response":"success"},{"item":"leaflet-fullscreen","response":"success"},{"item":"leaflet-geocoder-mapzen","response":"success"},{"item":"leaflet-geosearch","response":"success"},{"item":"leaflet-gpx","response":"success"},{"item":"leaflet-groupedlayercontrol","response":"success"},{"item":"leaflet-imageoverlay-rotated","response":"success"},{"item":"leaflet-label","response":"success"},{"item":"leaflet-loading","response":"success"},{"item":"leaflet-mouse-position","response":"success"},{"item":"leaflet-polylinedecorator","response":"success"},{"item":"leaflet-providers","response":"success"},{"item":"leaflet-rastercoords","response":"success"},{"item":"leaflet-responsive-popup","response":"success"},{"item":"leaflet-rotatedmarker","response":"success"},{"item":"leaflet-routing-machine","response":"success"},{"item":"leaflet.awesome-markers","response":"success"},{"item":"leaflet.featuregroup.subgroup","response":"success"},{"item":"leaflet.fullscreen","response":"success"},{"item":"leaflet.gridlayer.googlemutant","response":"success"},{"item":"leaflet.heat","response":"success"},{"item":"leaflet.icon.glyph","response":"success"},{"item":"leaflet.locatecontrol","response":"success"},{"item":"leaflet.markercluster","response":"success"},{"item":"leaflet.markercluster.layersupport","response":"success"},{"item":"leaflet.pancontrol","response":"success"},{"item":"leaflet.pm","response":"success"},{"item":"leaflet.polylinemeasure","response":"success"},{"item":"leaflet.utm","response":"success"},{"item":"leakage","response":"success"},{"item":"leapmotionts","response":"success"},{"item":"ledgerhq__hw-transport","response":"success"},{"item":"ledgerhq__hw-transport-node-hid","response":"success"},{"item":"ledgerhq__hw-transport-u2f","response":"success"},{"item":"ledgerhq__hw-transport-webusb","response":"success"},{"item":"legal-eagle","response":"success"},{"item":"less","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"less-middleware","response":"success"},{"item":"less2sass","response":"success"},{"item":"lestate","response":"success"},{"item":"level-codec","response":"success"},{"item":"level-js","response":"success"},{"item":"level-sublevel","response":"success"},{"item":"level-ttl","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"leveldown","response":"success"},{"item":"levelup","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"levenshtein","response":"success"},{"item":"lexicographic-integer","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"libnpmsearch","response":"success"},{"item":"libpq","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"librato-node","response":"success"},{"item":"libsodium-wrappers","response":"success"},{"item":"libsodium-wrappers-sumo","response":"success"},{"item":"libxmljs","response":"success"},{"item":"libxslt","response":"success"},{"item":"license-checker","response":"success"},{"item":"license-checker-webpack-plugin","response":"success"},{"item":"lifeomic__axios-fetch","response":"success"},{"item":"liftoff","response":"success"},{"item":"light-sdk","response":"success"},{"item":"lightpick","response":"success"},{"item":"lightship","response":"success"},{"item":"lil-uri","response":"success"},{"item":"lil-uuid","response":"success"},{"item":"lime-js","response":"success"},{"item":"line-by-line","response":"success"},{"item":"line-column","response":"success"},{"item":"line-reader","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"linear-gradient","response":"success"},{"item":"lingui__core","response":"success"},{"item":"lingui__macro","response":"success"},{"item":"lingui__react","response":"success"},{"item":"linkify-it","response":"success"},{"item":"linkifyjs","response":"success"},{"item":"list-git-remotes","response":"success"},{"item":"list-stream","response":"success"},{"item":"list.js","response":"success"},{"item":"listr","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"little-loader","response":"success"},{"item":"lls","response":"success"},{"item":"load-google-maps-api","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"loadable__component","response":"success"},{"item":"loadable__server","response":"success"},{"item":"loadable__webpack-plugin","response":"success"},{"item":"loader-runner","response":"success"},{"item":"loader-utils","response":"success"},{"item":"loadjs","response":"success"},{"item":"loadware","response":"success"},{"item":"lobibox","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"local-dynamo","response":"success"},{"item":"local-storage","response":"success"},{"item":"localized-countries","response":"success"},{"item":"localizejs-library","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"localtunnel","response":"success"},{"item":"lockfile","response":"success"},{"item":"lockr","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"locks","response":"success"},{"item":"locutus","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"lodash","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property 'name' of undefined\n"},{"item":"lodash-deep","response":"success"},{"item":"lodash-es","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property 'name' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null\n"},{"item":"lodash-webpack-plugin","response":"success"},{"item":"lodash.add","response":"success"},{"item":"lodash.after","response":"success"},{"item":"lodash.ary","response":"success"},{"item":"lodash.assign","response":"success"},{"item":"lodash.assignin","response":"success"},{"item":"lodash.assigninwith","response":"success"},{"item":"lodash.assignwith","response":"success"},{"item":"lodash.at","response":"success"},{"item":"lodash.attempt","response":"success"},{"item":"lodash.before","response":"success"},{"item":"lodash.bind","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null"},{"item":"lodash.bindall","response":"success"},{"item":"lodash.bindkey","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null"},{"item":"lodash.camelcase","response":"success"},{"item":"lodash.capitalize","response":"success"},{"item":"lodash.castarray","response":"success"},{"item":"lodash.ceil","response":"success"},{"item":"lodash.chunk","response":"success"},{"item":"lodash.clamp","response":"success"},{"item":"lodash.clone","response":"success"},{"item":"lodash.clonedeep","response":"success"},{"item":"lodash.clonedeepwith","response":"success"},{"item":"lodash.clonewith","response":"success"},{"item":"lodash.compact","response":"success"},{"item":"lodash.concat","response":"success"},{"item":"lodash.cond","response":"success"},{"item":"lodash.constant","response":"success"},{"item":"lodash.countby","response":"success"},{"item":"lodash.create","response":"success"},{"item":"lodash.curry","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null"},{"item":"lodash.curryright","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null"},{"item":"lodash.debounce","response":"success"},{"item":"lodash.deburr","response":"success"},{"item":"lodash.defaults","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property 'name' of undefined\n"},{"item":"lodash.defaultsdeep","response":"success"},{"item":"lodash.defer","response":"success"},{"item":"lodash.delay","response":"success"},{"item":"lodash.difference","response":"success"},{"item":"lodash.differenceby","response":"success"},{"item":"lodash.differencewith","response":"success"},{"item":"lodash.divide","response":"success"},{"item":"lodash.drop","response":"success"},{"item":"lodash.dropright","response":"success"},{"item":"lodash.droprightwhile","response":"success"},{"item":"lodash.dropwhile","response":"success"},{"item":"lodash.endswith","response":"success"},{"item":"lodash.eq","response":"success"},{"item":"lodash.escape","response":"success"},{"item":"lodash.escaperegexp","response":"success"},{"item":"lodash.every","response":"success"},{"item":"lodash.fill","response":"success"},{"item":"lodash.filter","response":"success"},{"item":"lodash.find","response":"success"},{"item":"lodash.findindex","response":"success"},{"item":"lodash.findkey","response":"success"},{"item":"lodash.findlast","response":"success"},{"item":"lodash.findlastindex","response":"success"},{"item":"lodash.findlastkey","response":"success"},{"item":"lodash.first","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null"},{"item":"lodash.flatmap","response":"success"},{"item":"lodash.flatmapdeep","response":"success"},{"item":"lodash.flatmapdepth","response":"success"},{"item":"lodash.flatten","response":"success"},{"item":"lodash.flattendeep","response":"success"},{"item":"lodash.flattendepth","response":"success"},{"item":"lodash.flip","response":"success"},{"item":"lodash.floor","response":"success"},{"item":"lodash.flow","response":"success"},{"item":"lodash.flowright","response":"success"},{"item":"lodash.foreach","response":"success"},{"item":"lodash.foreachright","response":"success"},{"item":"lodash.forin","response":"success"},{"item":"lodash.forinright","response":"success"},{"item":"lodash.forown","response":"success"},{"item":"lodash.forownright","response":"success"},{"item":"lodash.frompairs","response":"success"},{"item":"lodash.functions","response":"success"},{"item":"lodash.functionsin","response":"success"},{"item":"lodash.get","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property 'declarations' of undefined\n"},{"item":"lodash.groupby","response":"success"},{"item":"lodash.gt","response":"success"},{"item":"lodash.gte","response":"success"},{"item":"lodash.has","response":"success"},{"item":"lodash.hasin","response":"success"},{"item":"lodash.head","response":"success"},{"item":"lodash.identity","response":"success"},{"item":"lodash.includes","response":"success"},{"item":"lodash.indexof","response":"success"},{"item":"lodash.initial","response":"success"},{"item":"lodash.inrange","response":"success"},{"item":"lodash.intersection","response":"success"},{"item":"lodash.intersectionby","response":"success"},{"item":"lodash.intersectionwith","response":"success"},{"item":"lodash.invert","response":"success"},{"item":"lodash.invertby","response":"success"},{"item":"lodash.invoke","response":"success"},{"item":"lodash.invokemap","response":"success"},{"item":"lodash.isarguments","response":"success"},{"item":"lodash.isarray","response":"success"},{"item":"lodash.isarraybuffer","response":"success"},{"item":"lodash.isarraylike","response":"success"},{"item":"lodash.isarraylikeobject","response":"success"},{"item":"lodash.isboolean","response":"success"},{"item":"lodash.isbuffer","response":"success"},{"item":"lodash.isdate","response":"success"},{"item":"lodash.iselement","response":"success"},{"item":"lodash.isempty","response":"success"},{"item":"lodash.isequal","response":"success"},{"item":"lodash.isequalwith","response":"success"},{"item":"lodash.iserror","response":"success"},{"item":"lodash.isfinite","response":"success"},{"item":"lodash.isfunction","response":"success"},{"item":"lodash.isinteger","response":"success"},{"item":"lodash.islength","response":"success"},{"item":"lodash.ismap","response":"success"},{"item":"lodash.ismatch","response":"success"},{"item":"lodash.ismatchwith","response":"success"},{"item":"lodash.isnan","response":"success"},{"item":"lodash.isnative","response":"success"},{"item":"lodash.isnil","response":"success"},{"item":"lodash.isnull","response":"success"},{"item":"lodash.isnumber","response":"success"},{"item":"lodash.isobject","response":"success"},{"item":"lodash.isobjectlike","response":"success"},{"item":"lodash.isplainobject","response":"success"},{"item":"lodash.isregexp","response":"success"},{"item":"lodash.issafeinteger","response":"success"},{"item":"lodash.isset","response":"success"},{"item":"lodash.isstring","response":"success"},{"item":"lodash.issymbol","response":"success"},{"item":"lodash.istypedarray","response":"success"},{"item":"lodash.isundefined","response":"success"},{"item":"lodash.isweakmap","response":"success"},{"item":"lodash.isweakset","response":"success"},{"item":"lodash.iteratee","response":"success"},{"item":"lodash.join","response":"success"},{"item":"lodash.kebabcase","response":"success"},{"item":"lodash.keyby","response":"success"},{"item":"lodash.keys","response":"success"},{"item":"lodash.keysin","response":"success"},{"item":"lodash.last","response":"success"},{"item":"lodash.lastindexof","response":"success"},{"item":"lodash.lowercase","response":"success"},{"item":"lodash.lowerfirst","response":"success"},{"item":"lodash.lt","response":"success"},{"item":"lodash.lte","response":"success"},{"item":"lodash.mapkeys","response":"success"},{"item":"lodash.mapvalues","response":"success"},{"item":"lodash.matches","response":"success"},{"item":"lodash.matchesproperty","response":"success"},{"item":"lodash.max","response":"success"},{"item":"lodash.maxby","response":"success"},{"item":"lodash.mean","response":"success"},{"item":"lodash.meanby","response":"success"},{"item":"lodash.memoize","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null"},{"item":"lodash.merge","response":"success"},{"item":"lodash.mergewith","response":"success"},{"item":"lodash.method","response":"success"},{"item":"lodash.methodof","response":"success"},{"item":"lodash.min","response":"success"},{"item":"lodash.minby","response":"success"},{"item":"lodash.mixin","response":"success"},{"item":"lodash.multiply","response":"success"},{"item":"lodash.negate","response":"success"},{"item":"lodash.noop","response":"success"},{"item":"lodash.now","response":"success"},{"item":"lodash.nth","response":"success"},{"item":"lodash.ntharg","response":"success"},{"item":"lodash.omit","response":"success"},{"item":"lodash.omitby","response":"success"},{"item":"lodash.once","response":"success"},{"item":"lodash.orderby","response":"success"},{"item":"lodash.over","response":"success"},{"item":"lodash.overargs","response":"success"},{"item":"lodash.overevery","response":"success"},{"item":"lodash.oversome","response":"success"},{"item":"lodash.pad","response":"success"},{"item":"lodash.padend","response":"success"},{"item":"lodash.padstart","response":"success"},{"item":"lodash.parseint","response":"success"},{"item":"lodash.partial","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null"},{"item":"lodash.partialright","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null"},{"item":"lodash.partition","response":"success"},{"item":"lodash.pick","response":"success"},{"item":"lodash.pickby","response":"success"},{"item":"lodash.property","response":"success"},{"item":"lodash.propertyof","response":"success"},{"item":"lodash.pull","response":"success"},{"item":"lodash.pullall","response":"success"},{"item":"lodash.pullallby","response":"success"},{"item":"lodash.pullallwith","response":"success"},{"item":"lodash.pullat","response":"success"},{"item":"lodash.random","response":"success"},{"item":"lodash.range","response":"success"},{"item":"lodash.rangeright","response":"success"},{"item":"lodash.rearg","response":"success"},{"item":"lodash.reduce","response":"success"},{"item":"lodash.reduceright","response":"success"},{"item":"lodash.reject","response":"success"},{"item":"lodash.remove","response":"success"},{"item":"lodash.repeat","response":"success"},{"item":"lodash.replace","response":"success"},{"item":"lodash.rest","response":"success"},{"item":"lodash.result","response":"success"},{"item":"lodash.reverse","response":"success"},{"item":"lodash.round","response":"success"},{"item":"lodash.sample","response":"success"},{"item":"lodash.samplesize","response":"success"},{"item":"lodash.set","response":"success"},{"item":"lodash.setwith","response":"success"},{"item":"lodash.shuffle","response":"success"},{"item":"lodash.size","response":"success"},{"item":"lodash.slice","response":"success"},{"item":"lodash.snakecase","response":"success"},{"item":"lodash.some","response":"success"},{"item":"lodash.sortby","response":"success"},{"item":"lodash.sortedindex","response":"success"},{"item":"lodash.sortedindexby","response":"success"},{"item":"lodash.sortedindexof","response":"success"},{"item":"lodash.sortedlastindex","response":"success"},{"item":"lodash.sortedlastindexby","response":"success"},{"item":"lodash.sortedlastindexof","response":"success"},{"item":"lodash.sorteduniq","response":"success"},{"item":"lodash.sorteduniqby","response":"success"},{"item":"lodash.split","response":"success"},{"item":"lodash.spread","response":"success"},{"item":"lodash.startcase","response":"success"},{"item":"lodash.startswith","response":"success"},{"item":"lodash.stubfalse","response":"success"},{"item":"lodash.stubtrue","response":"success"},{"item":"lodash.subtract","response":"success"},{"item":"lodash.sum","response":"success"},{"item":"lodash.sumby","response":"success"},{"item":"lodash.tail","response":"success"},{"item":"lodash.take","response":"success"},{"item":"lodash.takeright","response":"success"},{"item":"lodash.takerightwhile","response":"success"},{"item":"lodash.takewhile","response":"success"},{"item":"lodash.template","response":"success"},{"item":"lodash.throttle","response":"success"},{"item":"lodash.times","response":"success"},{"item":"lodash.toarray","response":"success"},{"item":"lodash.tofinite","response":"success"},{"item":"lodash.tointeger","response":"success"},{"item":"lodash.tolength","response":"success"},{"item":"lodash.tolower","response":"success"},{"item":"lodash.tonumber","response":"success"},{"item":"lodash.topairs","response":"success"},{"item":"lodash.topairsin","response":"success"},{"item":"lodash.topath","response":"success"},{"item":"lodash.toplainobject","response":"success"},{"item":"lodash.tosafeinteger","response":"success"},{"item":"lodash.tostring","response":"success"},{"item":"lodash.toupper","response":"success"},{"item":"lodash.transform","response":"success"},{"item":"lodash.trim","response":"success"},{"item":"lodash.trimend","response":"success"},{"item":"lodash.trimstart","response":"success"},{"item":"lodash.truncate","response":"success"},{"item":"lodash.unary","response":"success"},{"item":"lodash.unescape","response":"success"},{"item":"lodash.union","response":"success"},{"item":"lodash.unionby","response":"success"},{"item":"lodash.unionwith","response":"success"},{"item":"lodash.uniq","response":"success"},{"item":"lodash.uniqby","response":"success"},{"item":"lodash.uniqueid","response":"success"},{"item":"lodash.uniqwith","response":"success"},{"item":"lodash.unset","response":"success"},{"item":"lodash.unzip","response":"success"},{"item":"lodash.unzipwith","response":"success"},{"item":"lodash.update","response":"success"},{"item":"lodash.updatewith","response":"success"},{"item":"lodash.uppercase","response":"success"},{"item":"lodash.upperfirst","response":"success"},{"item":"lodash.values","response":"success"},{"item":"lodash.valuesin","response":"success"},{"item":"lodash.without","response":"success"},{"item":"lodash.words","response":"success"},{"item":"lodash.wrap","response":"success"},{"item":"lodash.xor","response":"success"},{"item":"lodash.xorby","response":"success"},{"item":"lodash.xorwith","response":"success"},{"item":"lodash.zip","response":"success"},{"item":"lodash.zipobject","response":"success"},{"item":"lodash.zipobjectdeep","response":"success"},{"item":"lodash.zipwith","response":"success"},{"item":"log-process-errors","response":"success"},{"item":"logat","response":"success"},{"item":"logfmt","response":"success"},{"item":"logg","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"logger","response":"success"},{"item":"loggly","response":"success"},{"item":"login-with-amazon-sdk-browser","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"logrocket-react","response":"success"},{"item":"logrotate-stream","response":"success"},{"item":"lokijs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"lolex","response":"success"},{"item":"long","response":"success"},{"item":"loopback","response":"success"},{"item":"loopback-boot","response":"success"},{"item":"loopbench","response":"success"},{"item":"lory.js","response":"success"},{"item":"lossless-json","response":"success"},{"item":"lovefield","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"lowdb","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property 'name' of undefined\n"},{"item":"lowlight","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"lozad","response":"success"},{"item":"lru-cache","response":"success"},{"item":"lscache","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"ltx","response":"success"},{"item":"luaparse","response":"success"},{"item":"lucene","response":"success"},{"item":"lunr","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null"},{"item":"lusca","response":"success"},{"item":"luxon","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"lwip","response":"success"},{"item":"lyric-parser","response":"success"},{"item":"lyricist","response":"success"},{"item":"lz-string","response":"success"},{"item":"lzma-native","response":"success"},{"item":"macaca-circular-json","response":"success"},{"item":"macrotask","response":"success"},{"item":"magic-number","response":"success"},{"item":"magicsuggest","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"magnet-uri","response":"success"},{"item":"mailcheck","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"maildev","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"mailgen","response":"success"},{"item":"mailgun-js","response":"success"},{"item":"mailparser","response":"success"},{"item":"main-bower-files","response":"success"},{"item":"mainloop.js","response":"success"},{"item":"maker.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"makeup-expander","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"makeup-floating-label","response":"success"},{"item":"makeup-keyboard-trap","response":"success"},{"item":"makeup-prevent-scroll-keys","response":"success"},{"item":"makeup-screenreader-trap","response":"success"},{"item":"mandrill-api","response":"success"},{"item":"mangopay2-nodejs-sdk","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property 'declarations' of undefined\n"},{"item":"map-to-obj","response":"success"},{"item":"mapbox","response":"success"},{"item":"mapbox-gl","response":"success"},{"item":"mapbox-gl-leaflet","response":"success"},{"item":"mapbox__geo-viewport","response":"success"},{"item":"mapbox__geojson-area","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"mapbox__mapbox-sdk","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"mapbox__polyline","response":"success"},{"item":"mapbox__s3urls","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"mapbox__shelf-pack","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"mapbox__sphericalmercator","response":"success"},{"item":"mapbox__tile-cover","response":"success"},{"item":"mapnik","response":"success"},{"item":"mapsjs","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"mariasql","response":"success"},{"item":"mark.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"markdown-it","response":"success"},{"item":"markdown-it-anchor","response":"success"},{"item":"markdown-it-container","response":"success"},{"item":"markdown-it-lazy-headers","response":"success"},{"item":"markdown-pdf","response":"success"},{"item":"markdown-to-jsx","response":"success"},{"item":"markdownlint","response":"success"},{"item":"marked","response":"success"},{"item":"marked-terminal","response":"success"},{"item":"marker-animate-unobtrusive","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"markerclustererplus","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"markitup","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"marko","response":"success"},{"item":"maskedinput","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"masonry-layout","response":"success"},{"item":"massive","response":"success"},{"item":"match-media-mock","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"match-sorter","response":"success"},{"item":"material-design-lite","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"material-ui","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"material-ui-datatables","response":"success"},{"item":"material-ui-pagination","response":"success"},{"item":"material__animation","response":"success"},{"item":"material__auto-init","response":"success"},{"item":"material__base","response":"success"},{"item":"material__checkbox","response":"success"},{"item":"material__chips","response":"success"},{"item":"material__dialog","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property 'symbol' of undefined\n"},{"item":"material__dom","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property 'symbol' of undefined\n"},{"item":"material__drawer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nMaximum call stack size exceeded\n"},{"item":"material__floating-label","response":"success"},{"item":"material__form-field","response":"success"},{"item":"material__grid-list","response":"success"},{"item":"material__icon-toggle","response":"success"},{"item":"material__line-ripple","response":"success"},{"item":"material__linear-progress","response":"success"},{"item":"material__list","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nMaximum call stack size exceeded\n"},{"item":"material__menu","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nMaximum call stack size exceeded\n"},{"item":"material__notched-outline","response":"success"},{"item":"material__radio","response":"success"},{"item":"material__ripple","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property 'symbol' of undefined\n"},{"item":"material__select","response":"success"},{"item":"material__selection-control","response":"success"},{"item":"material__slider","response":"success"},{"item":"material__snackbar","response":"success"},{"item":"material__tab","response":"success"},{"item":"material__tabs","response":"success"},{"item":"material__textfield","response":"success"},{"item":"material__toolbar","response":"success"},{"item":"material__top-app-bar","response":"success"},{"item":"materialize-css","response":"success"},{"item":"math-sign","response":"success"},{"item":"math-trunc","response":"success"},{"item":"math3d","response":"success"},{"item":"mathjax","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"mathjs","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"matter-js","response":"success"},{"item":"mcrypt","response":"success"},{"item":"mcustomscrollbar","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"md5","response":"success"},{"item":"md5-file","response":"success"},{"item":"mdast","response":"success"},{"item":"mdns","response":"success"},{"item":"mdurl","response":"success"},{"item":"mdx-js__react","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"media-typer","response":"success"},{"item":"medium-editor","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"megajs","response":"success"},{"item":"mem-cache","response":"success"},{"item":"mem-fs","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"mem-fs-editor","response":"success"},{"item":"memcached","response":"success"},{"item":"memdown","response":"success"},{"item":"memjs","response":"success"},{"item":"memoizee","response":"success"},{"item":"memory-cache","response":"success"},{"item":"memory-fs","response":"success"},{"item":"memory-pager","response":"success"},{"item":"memorystream","response":"success"},{"item":"memwatch-next","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"meow","response":"success"},{"item":"merge-descriptors","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property 'kind' of undefined\n"},{"item":"merge-env","response":"success"},{"item":"merge-images","response":"success"},{"item":"merge-objects","response":"success"},{"item":"merge-stream","response":"success"},{"item":"merge2","response":"success"},{"item":"mergerino","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"merkle","response":"success"},{"item":"mermaid","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"mersenne-twister","response":"success"},{"item":"meshblu","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"mess","response":"success"},{"item":"messenger","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"metalsmith","response":"success"},{"item":"meteor","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"meteor-accounts-phone","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"meteor-astronomy","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"meteor-collection-hooks","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"meteor-jboulhous-dev","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"meteor-persistent-session","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"meteor-prime8consulting-oauth2","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"meteor-publish-composite","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"meteor-roles","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"meteor-universe-i18n","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"method-override","response":"success"},{"item":"methods","response":"success"},{"item":"metric-suffix","response":"success"},{"item":"meyda","response":"success"},{"item":"mfiles","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"micro","response":"success"},{"item":"micro-cors","response":"success"},{"item":"micro-events","response":"success"},{"item":"micromatch","response":"success"},{"item":"micromodal","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"microrouter","response":"success"},{"item":"microservice-utilities","response":"success"},{"item":"microsoft-ajax","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"microsoft-graph","response":"success"},{"item":"microsoft-live-connect","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"microsoft-sdk-soap","response":"success"},{"item":"microsoft__typescript-etw","response":"success"},{"item":"microsoftteams","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"microtime","response":"success"},{"item":"milkcocoa","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"millisecond","response":"success"},{"item":"milliseconds","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"mime","response":"success"},{"item":"mime-db","response":"success"},{"item":"mime-types","response":"success"},{"item":"mimos","response":"success"},{"item":"min-document","response":"success"},{"item":"min-indent","response":"success"},{"item":"mina","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"minapp-env","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"mini-css-extract-plugin","response":"success"},{"item":"minilog","response":"success"},{"item":"minimal-bit-array","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"minimal-request-promise","response":"success"},{"item":"minimalistic-assert","response":"success"},{"item":"minimatch","response":"success"},{"item":"minimist","response":"success"},{"item":"minimist-options","response":"success"},{"item":"minio","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"minipass","response":"success"},{"item":"miniprogram-wxs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"mirrorx","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"mithril","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nMaximum call stack size exceeded\n"},{"item":"mithril-global","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nMaximum call stack size exceeded\n"},{"item":"mitm","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"mitsobox","response":"success"},{"item":"mixpanel","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"mixpanel-browser","response":"success"},{"item":"mixto","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"mjml","response":"success"},{"item":"mjml-react","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"mkcert","response":"success"},{"item":"mkdirp","response":"success"},{"item":"mkdirp-promise","response":"success"},{"item":"mkpath","response":"success"},{"item":"ml-levenberg-marquardt","response":"success"},{"item":"mmmagic","response":"success"},{"item":"mobx-apollo","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property 'kind' of undefined\n"},{"item":"mocha","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"mocha-each","response":"success"},{"item":"mocha-phantomjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"mocha-prepare","response":"success"},{"item":"mocha-steps","response":"success"},{"item":"mochaccino","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property 'name' of undefined\n"},{"item":"mock-aws-s3","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"mock-fs","response":"success"},{"item":"mock-knex","response":"success"},{"item":"mock-raf","response":"success"},{"item":"mock-req-res","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property 'name' of undefined\n"},{"item":"mock-require","response":"success"},{"item":"mockdate","response":"success"},{"item":"mockery","response":"success"},{"item":"mockjs","response":"success"},{"item":"modernizr","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"modesl","response":"success"},{"item":"modular-scale","response":"success"},{"item":"module-alias","response":"success"},{"item":"module-deps","response":"success"},{"item":"moji","response":"success"},{"item":"moment-business","response":"success"},{"item":"moment-business-time","response":"success"},{"item":"moment-duration-format","response":"success"},{"item":"moment-hijri","response":"success"},{"item":"moment-holiday","response":"success"},{"item":"moment-jalaali","response":"success"},{"item":"moment-precise-range-plugin","response":"success"},{"item":"moment-round","response":"success"},{"item":"moment-shortformat","response":"success"},{"item":"moment-strftime2","response":"success"},{"item":"moment-timezone","response":"success"},{"item":"money-math","response":"success"},{"item":"mongo-sanitize","response":"success"},{"item":"mongodb","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nMaximum call stack size exceeded\n"},{"item":"mongodb-uri","response":"success"},{"item":"mongoose","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"mongoose-auto-increment","response":"success"},{"item":"mongoose-autopopulate","response":"success"},{"item":"mongoose-deep-populate","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property 'symbol' of undefined\n"},{"item":"mongoose-delete","response":"success"},{"item":"mongoose-geojson-schema","response":"success"},{"item":"mongoose-mock","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nMaximum call stack size exceeded\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"mongoose-paginate","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"mongoose-paginate-v2","response":"success"},{"item":"mongoose-promise","response":"success"},{"item":"mongoose-seeder","response":"success"},{"item":"mongoose-sequence","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"mongoose-simple-random","response":"success"},{"item":"mongoose-unique-validator","response":"success"},{"item":"mongorito","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nMaximum call stack size exceeded\n"},{"item":"mongration","response":"success"},{"item":"moo","response":"success"},{"item":"moonjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property 'declarations' of undefined\n"},{"item":"morgan","response":"success"},{"item":"morris.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"mosca","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"motion-scroll","response":"success"},{"item":"motor-hat","response":"success"},{"item":"mousetrap","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"move-concurrently","response":"success"},{"item":"moveto","response":"success"},{"item":"moviedb","response":"success"},{"item":"moxios","response":"success"},{"item":"mozilla-readability","response":"success"},{"item":"mozjpeg","response":"success"},{"item":"mpromise","response":"success"},{"item":"mri","response":"success"},{"item":"ms","response":"success"},{"item":"msgpack","response":"success"},{"item":"msgpack-lite","response":"success"},{"item":"msgpack5","response":"success"},{"item":"msnodesql","response":"success"},{"item":"mssql","response":"success"},{"item":"mta-h5-analysis","response":"success"},{"item":"mu2","response":"success"},{"item":"mui-datatables","response":"success"},{"item":"muibox","response":"success"},{"item":"muicss","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"multer","response":"success"},{"item":"multer-gridfs-storage","response":"success"},{"item":"multer-s3","response":"success"},{"item":"multi-progress","response":"success"},{"item":"multi-typeof","response":"success"},{"item":"multiaddr","response":"success"},{"item":"multibase","response":"success"},{"item":"multicodec","response":"success"},{"item":"multimap","response":"success"},{"item":"multiparty","response":"success"},{"item":"multipipe","response":"success"},{"item":"multiplexjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"multireducer","response":"success"},{"item":"multisort","response":"success"},{"item":"multistream","response":"success"},{"item":"multivariate-normal","response":"success"},{"item":"multy","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"mumath","response":"success"},{"item":"muri","response":"success"},{"item":"murmurhash","response":"success"},{"item":"murmurhash-js","response":"success"},{"item":"murmurhash3js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"musicmatch","response":"success"},{"item":"musicmetadata","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"mustache","response":"success"},{"item":"mustache-express","response":"success"},{"item":"mutexify","response":"success"},{"item":"mv","response":"success"},{"item":"mysql","response":"success"},{"item":"mysql-import","response":"success"},{"item":"mz","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property 'symbol' of undefined\n"},{"item":"n-readlines","response":"success"},{"item":"n3","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"naja","response":"success"},{"item":"named-regexp-groups","response":"success"},{"item":"named-routes","response":"success"},{"item":"nano-equal","response":"success"},{"item":"nanoajax","response":"success"},{"item":"nanoassert","response":"success"},{"item":"nanoevents","response":"success"},{"item":"nanographql","response":"success"},{"item":"nanoid","response":"success"},{"item":"nanomsg","response":"success"},{"item":"nanoscroller","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"nanp","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"native-toast","response":"success"},{"item":"natural","response":"success"},{"item":"natural-compare","response":"success"},{"item":"natural-compare-lite","response":"success"},{"item":"natural-sort","response":"success"},{"item":"naudiodon","response":"success"},{"item":"naver-whale","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"navermaps","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"navigo","response":"success"},{"item":"nconf","response":"success"},{"item":"ncp","response":"success"},{"item":"ndarray","response":"success"},{"item":"ndn-js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nMaximum call stack size exceeded\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n"},{"item":"nearley","response":"success"},{"item":"neat-csv","response":"success"},{"item":"nedb","response":"success"},{"item":"nedb-logger","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"needle","response":"success"},{"item":"negotiator","response":"success"},{"item":"neo4j","response":"success"},{"item":"nes","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property 'kind' of undefined\n"},{"item":"nestdb","response":"success"},{"item":"nested-error-stacks","response":"success"},{"item":"net-keepalive","response":"success"},{"item":"net-ticks","response":"success"},{"item":"netconf","response":"success"},{"item":"netease-captcha","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"netlify-identity-widget","response":"success"},{"item":"netmask","response":"success"},{"item":"network-interfaces","response":"success"},{"item":"neverbounce","response":"success"},{"item":"new-relic-browser","response":"success"},{"item":"newline-remove","response":"success"},{"item":"newman","response":"success"},{"item":"newrelic","response":"success"},{"item":"newrelic__winston-enricher","response":"success"},{"item":"nexpect","response":"success"},{"item":"next-nprogress","response":"success"},{"item":"next-redux-saga","response":"success"},{"item":"next-seo","response":"success"},{"item":"next-tick","response":"success"},{"item":"nextgen-events","response":"success"},{"item":"ng-command","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"ng-cordova","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"ng-dialog","response":"success"},{"item":"ng-facebook","response":"success"},{"item":"ng-file-upload","response":"success"},{"item":"ng-flow","response":"success"},{"item":"ng-grid","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"ng-i18next","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"ng-notify","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"ng-stomp","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"ng-tags-input","response":"success"},{"item":"ngbootbox","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"ngeohash","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"ngkookies","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"ngmap","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"ngprogress","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"ngprogress-lite","response":"success"},{"item":"ngreact","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"ngsijs","response":"success"},{"item":"ngstorage","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n../DefinitelyTyped/types/ngstorage/index.d.ts(41,39): error TS2503: Cannot find namespace 'angular'.\n"},{"item":"ngtoaster","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property 'declarations' of undefined\n"},{"item":"ngwysiwyg","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"nice-try","response":"success"},{"item":"nightmare","response":"success"},{"item":"nightwatch","response":"success"},{"item":"nise","response":"success"},{"item":"nivo-slider","response":"success"},{"item":"no-scroll","response":"success"},{"item":"noble","response":"success"},{"item":"noble-mac","response":"success"},{"item":"nodal","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property 'kind' of undefined\n"},{"item":"node","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"node-7z","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"node-abi","response":"success"},{"item":"node-array-ext","response":"success"},{"item":"node-calendar","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"node-cleanup","response":"success"},{"item":"node-config-manager","response":"success"},{"item":"node-crate","response":"success"},{"item":"node-cron","response":"success"},{"item":"node-dijkstra","response":"success"},{"item":"node-dir","response":"success"},{"item":"node-dogstatsd","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"node-downloader-helper","response":"success"},{"item":"node-easy-cert","response":"success"},{"item":"node-emoji","response":"success"},{"item":"node-expat","response":"success"},{"item":"node-fetch","response":"success"},{"item":"node-fibers","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"node-forge","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"node-gcm","response":"success"},{"item":"node-geocoder","response":"success"},{"item":"node-getopt","response":"success"},{"item":"node-gettext","response":"success"},{"item":"node-gzip","response":"success"},{"item":"node-hid","response":"success"},{"item":"node-horseman","response":"success"},{"item":"node-hue-api","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property 'kind' of undefined\n"},{"item":"node-insights","response":"success"},{"item":"node-int64","response":"success"},{"item":"node-ipc","response":"success"},{"item":"node-jose","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"node-jsfl-runner","response":"success"},{"item":"node-localstorage","response":"success"},{"item":"node-loggly-bulk","response":"success"},{"item":"node-mailjet","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"node-memwatch","response":"success"},{"item":"node-mysql-wrapper","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"node-notifier","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"node-observer","response":"success"},{"item":"node-openload","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: GetAccessor - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: GetAccessor - it will convert to null"},{"item":"node-os-utils","response":"success"},{"item":"node-persist","response":"success"},{"item":"node-polyglot","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"node-powershell","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"node-pushnotifications","response":"success"},{"item":"node-ral","response":"success"},{"item":"node-red","response":"success"},{"item":"node-redis-pubsub","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nMaximum call stack size exceeded\n"},{"item":"node-redmine","response":"success"},{"item":"node-resque","response":"success"},{"item":"node-rsa","response":"success"},{"item":"node-sass","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"node-sass-middleware","response":"success"},{"item":"node-schedule","response":"success"},{"item":"node-slack","response":"success"},{"item":"node-snap7","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property 'kind' of undefined\n"},{"item":"node-sprite-generator","response":"success"},{"item":"node-ssdp","response":"success"},{"item":"node-static","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property 'symbol' of undefined\n"},{"item":"node-statsd","response":"success"},{"item":"node-telegram-bot-api","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"node-timecodes","response":"success"},{"item":"node-uuid","response":"success"},{"item":"node-vagrant","response":"success"},{"item":"node-validator","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"node-vault","response":"success"},{"item":"node-wget-promise","response":"success"},{"item":"node-windows","response":"success"},{"item":"node-wit","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"node-xlsx","response":"success"},{"item":"node-xmpp-client","response":"success"},{"item":"node-xmpp-core","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"node-zendesk","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"node-zookeeper-client","response":"success"},{"item":"node-zopfli","response":"success"},{"item":"node-zopfli-es","response":"success"},{"item":"node_redis","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"nodecredstash","response":"success"},{"item":"nodegit","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"nodejs-license-file","response":"success"},{"item":"nodemailer","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null"},{"item":"nodemailer-direct-transport","response":"success"},{"item":"nodemailer-mailgun-transport","response":"success"},{"item":"nodemailer-pickup-transport","response":"success"},{"item":"nodemailer-ses-transport","response":"success"},{"item":"nodemailer-smtp-pool","response":"success"},{"item":"nodemailer-smtp-transport","response":"success"},{"item":"nodemailer-stub-transport","response":"success"},{"item":"nodemon","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nMaximum call stack size exceeded\n"},{"item":"nodeunit","response":"success"},{"item":"noisejs","response":"success"},{"item":"nomnom","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"nonogram-solver","response":"success"},{"item":"nopt","response":"success"},{"item":"normalize-jss","response":"success"},{"item":"normalize-package-data","response":"success"},{"item":"normalize-path","response":"success"},{"item":"notie","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"notify","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"notifyjs","response":"success"},{"item":"notifyjs-browser","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"notp","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"nouislider","response":"success"},{"item":"novnc-core","response":"success"},{"item":"npm","response":"success"},{"item":"npm-cache-filename","response":"success"},{"item":"npm-license-crawler","response":"success"},{"item":"npm-list-author-packages","response":"success"},{"item":"npm-package-arg","response":"success"},{"item":"npm-packlist","response":"success"},{"item":"npm-paths","response":"success"},{"item":"npm-registry-fetch","response":"success"},{"item":"npm-registry-package-info","response":"success"},{"item":"npm-run","response":"success"},{"item":"npm-user-packages","response":"success"},{"item":"npm-which","response":"success"},{"item":"npmlog","response":"success"},{"item":"nprogress","response":"success"},{"item":"ns-api","response":"success"},{"item":"nslog","response":"success"},{"item":"nsqjs","response":"success"},{"item":"nssm","response":"success"},{"item":"nuclear-js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property 'symbol' of undefined\n"},{"item":"num2fraction","response":"success"},{"item":"number-is-nan","response":"success"},{"item":"number-to-words","response":"success"},{"item":"numeral","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"numeric","response":"success"},{"item":"numjs","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"nunjucks","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"nunjucks-date","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"nuxtjs__auth","response":"success"},{"item":"nvd3","response":"success"},{"item":"nw.gui","response":"success"},{"item":"nw.js","response":"success"},{"item":"nwmatcher","response":"success"},{"item":"nyaapi","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"oakdex-pokedex","response":"success"},{"item":"oauth","response":"success"},{"item":"oauth-shim","response":"success"},{"item":"oauth.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"oauth2-implicit","response":"success"},{"item":"oauth2-server","response":"success"},{"item":"oauth2orize","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"obelisk.js","response":"success"},{"item":"obj-file-parser","response":"success"},{"item":"obj-str","response":"success"},{"item":"object-assign","response":"success"},{"item":"object-assign-deep","response":"success"},{"item":"object-diff","response":"success"},{"item":"object-fit-images","response":"success"},{"item":"object-hash","response":"success"},{"item":"object-inspect","response":"success"},{"item":"object-joiner","response":"success"},{"item":"object-keys","response":"success"},{"item":"object-keys-mapping","response":"success"},{"item":"object-map","response":"success"},{"item":"object-merge","response":"success"},{"item":"object-path","response":"success"},{"item":"object-refs","response":"success"},{"item":"object.getownpropertydescriptors","response":"success"},{"item":"object.omit","response":"success"},{"item":"object.pick","response":"success"},{"item":"objtools","response":"success"},{"item":"oblo-util","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"oboe","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property 'kind' of undefined\n"},{"item":"observe-js","response":"success"},{"item":"oclazyload","response":"success"},{"item":"ofe","response":"success"},{"item":"office-js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"office-js-preview","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"office-runtime","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"offline-js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"offscreencanvas","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"oibackoff","response":"success"},{"item":"oidc-token-manager","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"oja","response":"success"},{"item":"okta__okta-vue","response":"success"},{"item":"ol","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property 'name' of undefined\n"},{"item":"omelette","response":"success"},{"item":"omggif","response":"success"},{"item":"omit-empty","response":"success"},{"item":"on-finished","response":"success"},{"item":"on-headers","response":"success"},{"item":"on-wake-up","response":"success"},{"item":"once","response":"success"},{"item":"one-time","response":"success"},{"item":"onesignal-cordova-plugin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"onfleet__node-onfleet","response":"success"},{"item":"oniguruma","response":"success"},{"item":"onionoo","response":"success"},{"item":"ontime","response":"success"},{"item":"open-graph","response":"success"},{"item":"openapi-factory","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"opener","response":"success"},{"item":"openfin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"openid","response":"success"},{"item":"openjscad","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"openlayers","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n"},{"item":"openpgp","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property 'kind' of undefined\n"},{"item":"openssi-websdk","response":"success"},{"item":"openstack-wrapper","response":"success"},{"item":"opentok","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"opentype.js","response":"success"},{"item":"openui5","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"openurl","response":"success"},{"item":"openurl2","response":"success"},{"item":"opossum","response":"success"},{"item":"optics-agent","response":"success"},{"item":"optimist","response":"success"},{"item":"optimize-css-assets-webpack-plugin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"oracle__oraclejet","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"oracledb","response":"success"},{"item":"orchestrator","response":"success"},{"item":"orderedmap","response":"success"},{"item":"orientjs","response":"success"},{"item":"original","response":"success"},{"item":"optimist","response":"success"},{"item":"optimize-css-assets-webpack-plugin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"oracle__oraclejet","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"oracledb","response":"success"},{"item":"orchestrator","response":"success"},{"item":"orderedmap","response":"success"},{"item":"orientjs","response":"success"},{"item":"original","response":"success"},{"item":"os-homedir","response":"success"},{"item":"os-service","response":"success"},{"item":"os-tmpdir","response":"success"},{"item":"os-utils","response":"success"},{"item":"osenv","response":"success"},{"item":"osmosis","response":"success"},{"item":"osmtogeojson","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"ospec","response":"success"},{"item":"osrm","response":"success"},{"item":"osrs-json-api","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"overlayscrollbars","response":"success"},{"item":"owasp-password-strength-test","response":"success"},{"item":"owl.carousel","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"owlcarousel","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"p-fifo","response":"success"},{"item":"p-loading","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"p2","response":"success"},{"item":"p5","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"package-info","response":"success"},{"item":"packery","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"pacote","response":"success"},{"item":"pad-left","response":"success"},{"item":"page","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"page-icon","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"pager__jackrabbit","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"paho-mqtt","response":"success"},{"item":"pako","response":"success"},{"item":"palx","response":"success"},{"item":"pangu","response":"success"},{"item":"papaparse","response":"success"},{"item":"parallel-transform","response":"success"},{"item":"paralleljs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"parcel-bundler","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"parcel-env","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"parent-package-json","response":"success"},{"item":"parents","response":"success"},{"item":"parity-pmd","response":"success"},{"item":"parity-pmr","response":"success"},{"item":"parity-poe","response":"success"},{"item":"parquetjs","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"parse","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property 'declarations' of undefined\n"},{"item":"parse-author","response":"success"},{"item":"parse-color","response":"success"},{"item":"parse-filepath","response":"success"},{"item":"parse-git-config","response":"success"},{"item":"parse-github-url","response":"success"},{"item":"parse-glob","response":"success"},{"item":"parse-human-date-range","response":"success"},{"item":"parse-json","response":"success"},{"item":"parse-link-header","response":"success"},{"item":"parse-mockdb","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"parse-numeric-range","response":"success"},{"item":"parse-package-name","response":"success"},{"item":"parse-passwd","response":"success"},{"item":"parse-path","response":"success"},{"item":"parse-torrent","response":"success"},{"item":"parse-torrent-file","response":"success"},{"item":"parse-unit","response":"success"},{"item":"parse5","response":"success"},{"item":"parse5-html-rewriting-stream","response":"success"},{"item":"parse5-htmlparser2-tree-adapter","response":"success"},{"item":"parse5-parser-stream","response":"success"},{"item":"parse5-plain-text-conversion-stream","response":"success"},{"item":"parse5-sax-parser","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"parse5-serializer-stream","response":"success"},{"item":"parsecurrency","response":"success"},{"item":"parseurl","response":"success"},{"item":"parsimmon","response":"success"},{"item":"passport","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property 'ids' of undefined\n"},{"item":"passport-anonymous","response":"success"},{"item":"passport-auth0","response":"success"},{"item":"passport-azure-ad","response":"success"},{"item":"passport-beam","response":"success"},{"item":"passport-bnet","response":"success"},{"item":"passport-cognito","response":"success"},{"item":"passport-discord","response":"success"},{"item":"passport-facebook","response":"success"},{"item":"passport-facebook-token","response":"success"},{"item":"passport-github","response":"success"},{"item":"passport-github2","response":"success"},{"item":"passport-google-oauth","response":"success"},{"item":"passport-google-oauth2","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nMaximum call stack size exceeded\n"},{"item":"passport-google-oauth20","response":"success"},{"item":"passport-http","response":"success"},{"item":"passport-http-bearer","response":"success"},{"item":"passport-jwt","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"passport-kakao","response":"success"},{"item":"passport-linkedin-oauth2","response":"success"},{"item":"passport-local","response":"success"},{"item":"passport-local-mongoose","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"passport-microsoft","response":"success"},{"item":"passport-naver","response":"success"},{"item":"passport-oauth2","response":"success"},{"item":"passport-oauth2-client-password","response":"success"},{"item":"passport-oauth2-refresh","response":"success"},{"item":"passport-remember-me-extended","response":"success"},{"item":"passport-saml","response":"success"},{"item":"passport-steam","response":"success"},{"item":"passport-strategy","response":"success"},{"item":"passport-twitter","response":"success"},{"item":"passport-unique-token","response":"success"},{"item":"passport-vkontakte","response":"success"},{"item":"passport-windowsauth","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"passport.socketio","response":"success"},{"item":"password","response":"success"},{"item":"password-hash","response":"success"},{"item":"password-hash-and-salt","response":"success"},{"item":"path-is-absolute","response":"success"},{"item":"path-is-inside","response":"success"},{"item":"path-parse","response":"success"},{"item":"path-regex","response":"success"},{"item":"pathfinding","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"pathjs","response":"success"},{"item":"pathval","response":"success"},{"item":"pathwatcher","response":"success"},{"item":"pause","response":"success"},{"item":"payment","response":"success"},{"item":"paypal-cordova-plugin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"paypal-rest-sdk","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"pbf","response":"success"},{"item":"pbkdf2","response":"success"},{"item":"pdf2image","response":"success"},{"item":"pdfjs-dist","response":"success"},{"item":"pdfkit","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"pdfmake","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"pdfobject","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"pebblekitjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"peer-dial","response":"success"},{"item":"pegjs","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"pem","response":"success"},{"item":"pem-jwk","response":"success"},{"item":"pendo-io-browser","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"permit","response":"success"},{"item":"persona","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"pet-finder-api","response":"success"},{"item":"petit-dom","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"pg","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"pg-copy-streams","response":"success"},{"item":"pg-ears","response":"success"},{"item":"pg-escape","response":"success"},{"item":"pg-format","response":"success"},{"item":"pg-large-object","response":"success"},{"item":"pg-pool","response":"success"},{"item":"pg-query-stream","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"pg-types","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"pgwmodal","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"phantom","response":"success"},{"item":"phantomcss","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\n\n../DefinitelyTyped/types/node/globals.d.ts(167,13): error TS2300: Duplicate identifier 'require'.\n../DefinitelyTyped/types/phantomjs/index.d.ts(6,18): error TS2300: Duplicate identifier 'require'.\n"},{"item":"phantomjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"phoenix","response":"success"},{"item":"phone","response":"success"},{"item":"phone-formatter","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"phoneformat.js","response":"success"},{"item":"phonegap","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"phonegap-facebook-plugin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"phonegap-nfc","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"phonegap-plugin-barcodescanner","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"phonon","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"photonui","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"photoswipe","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"php-serialize","response":"success"},{"item":"physijs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"pi-spi","response":"success"},{"item":"pica","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"pick-deep","response":"success"},{"item":"pick-weight","response":"success"},{"item":"pickadate","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"picturefill","response":"success"},{"item":"pid-from-port","response":"success"},{"item":"pidusage","response":"success"},{"item":"pify","response":"success"},{"item":"pigpio","response":"success"},{"item":"pigpio-dht","response":"success"},{"item":"pikaday","response":"success"},{"item":"pikaday-time","response":"success"},{"item":"ping","response":"success"},{"item":"pinkyswear","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"pino","response":"success"},{"item":"pino-http","response":"success"},{"item":"pino-multi-stream","response":"success"},{"item":"pino-std-serializers","response":"success"},{"item":"pinterest-sdk","response":"success"},{"item":"pinyin","response":"success"},{"item":"piwik-tracker","response":"success"},{"item":"pixelmatch","response":"success"},{"item":"pixl-xml","response":"success"},{"item":"pizzip","response":"success"},{"item":"pkcs7-padding","response":"success"},{"item":"pkgcloud","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"pkijs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"places","response":"success"},{"item":"plaid-link","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"platform","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"playerframework","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"playmusic","response":"success"},{"item":"pleasejs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"plist","response":"success"},{"item":"plotly.js","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"plugapi","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"plugin-error","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"plupload","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"pluralize","response":"success"},{"item":"plurals-cldr","response":"success"},{"item":"png.js","response":"success"},{"item":"pngjs","response":"success"},{"item":"pngjs2","response":"success"},{"item":"pngquant-bin","response":"success"},{"item":"pnpapi","response":"success"},{"item":"podcast","response":"success"},{"item":"podium","response":"success"},{"item":"poi","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"point-in-polygon","response":"success"},{"item":"poker-evaluator","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"pollyjs__adapter","response":"success"},{"item":"pollyjs__adapter-fetch","response":"success"},{"item":"pollyjs__adapter-node-http","response":"success"},{"item":"pollyjs__adapter-xhr","response":"success"},{"item":"pollyjs__core","response":"success"},{"item":"pollyjs__node-server","response":"success"},{"item":"pollyjs__persister","response":"success"},{"item":"pollyjs__persister-fs","response":"success"},{"item":"pollyjs__utils","response":"success"},{"item":"polyfill-service","response":"success"},{"item":"polygon","response":"success"},{"item":"polygons-intersect","response":"success"},{"item":"polylabel","response":"success"},{"item":"polyline","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"polymer","response":"success"},{"item":"polymer-ts","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"popcorn","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"port-numbers","response":"success"},{"item":"portscanner","response":"success"},{"item":"postal","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"postcss-calc","response":"success"},{"item":"postcss-icss-values","response":"success"},{"item":"postcss-load-config","response":"success"},{"item":"postcss-modules-extract-imports","response":"success"},{"item":"postcss-modules-local-by-default","response":"success"},{"item":"postcss-modules-resolve-imports","response":"success"},{"item":"postcss-modules-scope","response":"success"},{"item":"postcss-modules-values","response":"success"},{"item":"postcss-nested","response":"success"},{"item":"postcss-url","response":"success"},{"item":"poster-image","response":"success"},{"item":"postlight__mercury-parser","response":"success"},{"item":"postman-collection","response":"success"},{"item":"postmate","response":"success"},{"item":"pouch-redux-middleware","response":"success"},{"item":"pouchdb","response":"success"},{"item":"pouchdb-adapter-cordova-sqlite","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"pouchdb-adapter-fruitdown","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"pouchdb-adapter-http","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"pouchdb-adapter-idb","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"pouchdb-adapter-leveldb","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"pouchdb-adapter-localstorage","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"pouchdb-adapter-memory","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"pouchdb-adapter-node-websql","response":"success"},{"item":"pouchdb-adapter-websql","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"pouchdb-browser","response":"success"},{"item":"pouchdb-core","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"pouchdb-find","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"pouchdb-http","response":"success"},{"item":"pouchdb-live-find","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"pouchdb-mapreduce","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"pouchdb-node","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"pouchdb-replication","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"pouchdb-upsert","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"power-assert","response":"success"},{"item":"power-assert-formatter","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"powerapps-component-framework","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"powerbi-visuals-tools","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: EnumMember - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"preact-i18n","response":"success"},{"item":"precise","response":"success"},{"item":"precond","response":"success"},{"item":"preferred-pm","response":"success"},{"item":"prefixfree","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"preloadjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"prelude-ls","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"prettier","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property 'name' of undefined\n"},{"item":"prettier-package-json","response":"success"},{"item":"pretty","response":"success"},{"item":"pretty-hrtime","response":"success"},{"item":"pretty-time","response":"success"},{"item":"prettyjson","response":"success"},{"item":"preval.macro","response":"success"},{"item":"priorityqueuejs","response":"success"},{"item":"prismic-dom","response":"success"},{"item":"prismjs","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"private-ip","response":"success"},{"item":"probability-distributions","response":"success"},{"item":"procfs-stats","response":"success"},{"item":"proclaim","response":"success"},{"item":"progress","response":"success"},{"item":"progress-stream","response":"success"},{"item":"progressbar","response":"success"},{"item":"progressjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"proj4","response":"success"},{"item":"proj4leaflet","response":"success"},{"item":"project-name","response":"success"},{"item":"project-oxford","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"prometheus-gc-stats","response":"success"},{"item":"promise-abortable","response":"success"},{"item":"promise-dag","response":"success"},{"item":"promise-fs","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"promise-ftp","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"promise-ftp-common","response":"success"},{"item":"promise-hash","response":"success"},{"item":"promise-map-limit","response":"success"},{"item":"promise-memoize","response":"success"},{"item":"promise-nodeify","response":"success"},{"item":"promise-pg","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property 'symbol' of undefined\n"},{"item":"promise-poller","response":"success"},{"item":"promise-polyfill","response":"success"},{"item":"promise-pool","response":"success"},{"item":"promise-queue","response":"success"},{"item":"promise-retry","response":"success"},{"item":"promise-sequential","response":"success"},{"item":"promise-sftp","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"promise-timeout","response":"success"},{"item":"promise.allsettled","response":"success"},{"item":"promise.prototype.finally","response":"success"},{"item":"promised-ldap","response":"success"},{"item":"promised-temp","response":"success"},{"item":"promisify-node","response":"success"},{"item":"promisify-supertest","response":"success"},{"item":"prompt-sync","response":"success"},{"item":"prompt-sync-history","response":"success"},{"item":"promptly","response":"success"},{"item":"prompts","response":"success"},{"item":"prop-types","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property 'name' of undefined\n"},{"item":"proper-lockfile","response":"success"},{"item":"proper-url-join","response":"success"},{"item":"properties-reader","response":"success"},{"item":"prosemirror-collab","response":"success"},{"item":"prosemirror-commands","response":"success"},{"item":"prosemirror-dev-tools","response":"success"},{"item":"prosemirror-dropcursor","response":"success"},{"item":"prosemirror-gapcursor","response":"success"},{"item":"prosemirror-history","response":"success"},{"item":"prosemirror-inputrules","response":"success"},{"item":"prosemirror-keymap","response":"success"},{"item":"prosemirror-markdown","response":"success"},{"item":"prosemirror-menu","response":"success"},{"item":"prosemirror-model","response":"success"},{"item":"prosemirror-schema-basic","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"prosemirror-schema-list","response":"success"},{"item":"prosemirror-state","response":"success"},{"item":"prosemirror-test-builder","response":"success"},{"item":"prosemirror-transform","response":"success"},{"item":"prosemirror-view","response":"success"},{"item":"protoc-plugin","response":"success"},{"item":"protocol-buffers-schema","response":"success"},{"item":"protocols","response":"success"},{"item":"proton-native","response":"success"},{"item":"protoo-server","response":"success"},{"item":"protractor-browser-logs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\n\n../DefinitelyTyped/types/protractor-browser-logs/node_modules/protractor/built/index.d.ts(5,10): error TS2440: Import declaration conflicts with local declaration of 'PluginConfig'.\n../DefinitelyTyped/types/protractor-browser-logs/node_modules/protractor/built/index.d.ts(5,24): error TS2440: Import declaration conflicts with local declaration of 'ProtractorPlugin'.\n"},{"item":"protractor-helpers","response":"success"},{"item":"protractor-http-mock","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"provinces","response":"success"},{"item":"proxy-addr","response":"success"},{"item":"proxy-from-env","response":"success"},{"item":"proxy-lists","response":"success"},{"item":"proxy-verifier","response":"success"},{"item":"proxyquire","response":"success"},{"item":"ps-tree","response":"success"},{"item":"pseudo-audio-param","response":"success"},{"item":"psl","response":"success"},{"item":"ptomasroos__react-native-multi-slider","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"pty.js","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"pubnub","response":"success"},{"item":"pubsub-js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"pug","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"pull-stream","response":"success"},{"item":"pulltorefreshjs","response":"success"},{"item":"pulsar-client","response":"success"},{"item":"pump","response":"success"},{"item":"pumpify","response":"success"},{"item":"punycode","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"puppeteer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property 'symbol' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"puppeteer-core","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property 'symbol' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"purdy","response":"success"},{"item":"pure-render-decorator","response":"success"},{"item":"purifycss-webpack","response":"success"},{"item":"purl","response":"success"},{"item":"pusher-js","response":"success"},{"item":"pusher__chatkit-client","response":"success"},{"item":"pvutils","response":"success"},{"item":"python-shell","response":"success"},{"item":"python-struct","response":"success"},{"item":"q","response":"success"},{"item":"q-io","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"q-retry","response":"success"},{"item":"qhistory","response":"success"},{"item":"qiniu-js","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"qlik","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"qlik-engineapi","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"qlik-visualizationextensions","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"qr-image","response":"success"},{"item":"qrcode","response":"success"},{"item":"qrcode-svg","response":"success"},{"item":"qrcode.react","response":"success"},{"item":"qs","response":"success"},{"item":"qs-middleware","response":"success"},{"item":"qtip2","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"querystringify","response":"success"},{"item":"quick-hash","response":"success"},{"item":"quill","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\n\n../DefinitelyTyped/types/quill/node_modules/quill-delta/dist/Delta.d.ts(1,8): error TS1259: Module '\"/home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/quill/node_modules/fast-diff/diff\"' can only be default-imported using the 'esModuleInterop' flag\n"},{"item":"quixote","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"qunit","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"quoted-printable","response":"success"},{"item":"qwest","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"r-script","response":"success"},{"item":"rabbit.js","response":"success"},{"item":"rabbitmq-schema","response":"success"},{"item":"radium","response":"success"},{"item":"radius","response":"success"},{"item":"radix64","response":"success"},{"item":"raf","response":"success"},{"item":"raf-schd","response":"success"},{"item":"ramda","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"random","response":"success"},{"item":"random-boolean","response":"success"},{"item":"random-bytes","response":"success"},{"item":"random-normal","response":"success"},{"item":"random-number","response":"success"},{"item":"random-seed","response":"success"},{"item":"random-string","response":"success"},{"item":"random-useragent","response":"success"},{"item":"randombytes","response":"success"},{"item":"randomcolor","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"randomstring","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"range-parser","response":"success"},{"item":"range_check","response":"success"},{"item":"rangy","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"rangyinputs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"ranjs","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"raphael","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"rappid","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"rasha","response":"success"},{"item":"raspi","response":"success"},{"item":"raspi-board","response":"success"},{"item":"raspi-gpio","response":"success"},{"item":"raspi-i2c","response":"success"},{"item":"raspi-led","response":"success"},{"item":"raspi-onewire","response":"success"},{"item":"raspi-peripheral","response":"success"},{"item":"raspi-pwm","response":"success"},{"item":"raspi-serial","response":"success"},{"item":"raspi-soft-pwm","response":"success"},{"item":"rate-limit-redis","response":"success"},{"item":"ratelimiter","response":"success"},{"item":"raty","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"raven","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"raven-for-redux","response":"success"},{"item":"raygun","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"raygun4js","response":"success"},{"item":"rbac-a","response":"success"},{"item":"rbush","response":"success"},{"item":"rc","response":"success"},{"item":"rc-select","response":"success"},{"item":"rc-slider","response":"success"},{"item":"rc-switch","response":"success"},{"item":"rc-time-picker","response":"success"},{"item":"rc-tooltip","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"rc-tree","response":"success"},{"item":"rcloader","response":"success"},{"item":"rdf-data-model","response":"success"},{"item":"rdf-dataset-ext","response":"success"},{"item":"rdf-dataset-indexed","response":"success"},{"item":"rdf-ext","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property 'declarations' of undefined\n"},{"item":"rdf-js","response":"success"},{"item":"rdf-transform-triple-to-quad","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"rdfjs__namespace","response":"success"},{"item":"rdfjs__parser-jsonld","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"rdfjs__parser-n3","response":"success"},{"item":"rdfjs__serializer-jsonld","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"rdfjs__serializer-jsonld-ext","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"rdfjs__sink-map","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"re-base","response":"success"},{"item":"reach__alert","response":"success"},{"item":"reach__alert-dialog","response":"success"},{"item":"reach__auto-id","response":"success"},{"item":"reach__combobox","response":"success"},{"item":"reach__dialog","response":"success"},{"item":"reach__menu-button","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"reach__rect","response":"success"},{"item":"reach__router","response":"success"},{"item":"reach__skip-nav","response":"success"},{"item":"reach__tabs","response":"success"},{"item":"reach__tooltip","response":"success"},{"item":"reach__utils","response":"success"},{"item":"reach__visually-hidden","response":"success"},{"item":"reach__menu-button","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"reach__rect","response":"success"},{"item":"reach__router","response":"success"},{"item":"reach__skip-nav","response":"success"},{"item":"reach__tabs","response":"success"},{"item":"reach__tooltip","response":"success"},{"item":"reach__utils","response":"success"},{"item":"reach__visually-hidden","response":"success"},{"item":"reach__window-size","response":"success"},{"item":"react","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property 'name' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"react-adal","response":"success"},{"item":"react-add-to-calendar","response":"success"},{"item":"react-addons-create-fragment","response":"success"},{"item":"react-addons-css-transition-group","response":"success"},{"item":"react-addons-linked-state-mixin","response":"success"},{"item":"react-addons-perf","response":"success"},{"item":"react-addons-pure-render-mixin","response":"success"},{"item":"react-addons-shallow-compare","response":"success"},{"item":"react-addons-test-utils","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-addons-transition-group","response":"success"},{"item":"react-addons-update","response":"success"},{"item":"react-albus","response":"success"},{"item":"react-alert","response":"success"},{"item":"react-amplitude","response":"success"},{"item":"react-animate-on-scroll","response":"success"},{"item":"react-app","response":"success"},{"item":"react-aria-live","response":"success"},{"item":"react-aria-menubutton","response":"success"},{"item":"react-aria-modal","response":"success"},{"item":"react-autocomplete","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"react-autosuggest","response":"success"},{"item":"react-avatar-editor","response":"success"},{"item":"react-axe","response":"success"},{"item":"react-beautiful-dnd","response":"success"},{"item":"react-beforeunload","response":"success"},{"item":"react-better-password","response":"success"},{"item":"react-big-calendar","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nMaximum call stack size exceeded\n"},{"item":"react-big-scheduler","response":"success"},{"item":"react-blessed","response":"success"},{"item":"react-body-classname","response":"success"},{"item":"react-bootstrap","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property 'symbol' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n"},{"item":"react-bootstrap-date-picker","response":"success"},{"item":"react-bootstrap-daterangepicker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"react-bootstrap-table","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nMaximum call stack size exceeded\n"},{"item":"react-bootstrap-typeahead","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"react-breadcrumbs","response":"success"},{"item":"react-breadcrumbs-dynamic","response":"success"},{"item":"react-broadcast","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-burger-menu","response":"success"},{"item":"react-bytesize-icons","response":"success"},{"item":"react-cache","response":"success"},{"item":"react-calendar-heatmap","response":"success"},{"item":"react-calendar-timeline","response":"success"},{"item":"react-canvas-draw","response":"success"},{"item":"react-cartographer","response":"success"},{"item":"react-click-outside","response":"success"},{"item":"react-click-outside-hook","response":"success"},{"item":"react-close-on-escape","response":"success"},{"item":"react-codemirror","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"react-coinhive","response":"success"},{"item":"react-collapse","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nMaximum call stack size exceeded\n"},{"item":"react-color","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nMaximum call stack size exceeded\n"},{"item":"react-confirm","response":"success"},{"item":"react-cookies","response":"success"},{"item":"react-copy-to-clipboard","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"react-copy-write","response":"success"},{"item":"react-count-to","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"react-countdown-circle-timer","response":"success"},{"item":"react-countup","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"react-credit-cards","response":"success"},{"item":"react-cropper","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null"},{"item":"react-css-collapse","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"react-css-modules","response":"success"},{"item":"react-css-transition-replace","response":"success"},{"item":"react-csv","response":"success"},{"item":"react-currency-formatter","response":"success"},{"item":"react-custom-scrollbars","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nMaximum call stack size exceeded\n"},{"item":"react-data-grid","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"react-datagrid","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nMaximum call stack size exceeded\n"},{"item":"react-date-range","response":"success"},{"item":"react-datepicker","response":"success"},{"item":"react-daterange-picker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nMaximum call stack size exceeded\n"},{"item":"react-dates","response":"success"},{"item":"react-dev-utils","response":"success"},{"item":"react-devtools","response":"success"},{"item":"react-div-100vh","response":"success"},{"item":"react-dnd-multi-backend","response":"success"},{"item":"react-dnd-scrollzone","response":"success"},{"item":"react-document-meta","response":"success"},{"item":"react-document-title","response":"success"},{"item":"react-dom","response":"success"},{"item":"react-dom-factories","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"react-draft-wysiwyg","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property 'kind' of undefined\n"},{"item":"react-dragtastic","response":"success"},{"item":"react-dynamic-number","response":"success"},{"item":"react-easy-chart","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"react-easy-crop","response":"success"},{"item":"react-editext","response":"success"},{"item":"react-elemental","response":"success"},{"item":"react-email-editor","response":"success"},{"item":"react-event-listener","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null"},{"item":"react-fa","response":"success"},{"item":"react-facebook-login","response":"success"},{"item":"react-facebook-login-component","response":"success"},{"item":"react-fade-in","response":"success"},{"item":"react-faux-dom","response":"success"},{"item":"react-file-input","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"react-file-reader-input","response":"success"},{"item":"react-filepond","response":"success"},{"item":"react-flag-icon-css","response":"success"},{"item":"react-flags-select","response":"success"},{"item":"react-flatpickr","response":"success"},{"item":"react-flex","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nMaximum call stack size exceeded\n"},{"item":"react-flexr","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"react-fontawesome","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"react-form","response":"success"},{"item":"react-foundation","response":"success"},{"item":"react-frame-component","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null"},{"item":"react-frontload","response":"success"},{"item":"react-gamepad","response":"success"},{"item":"react-gateway","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-geosuggest","response":"success"},{"item":"react-github-button","response":"success"},{"item":"react-global-configuration","response":"success"},{"item":"react-google-login-component","response":"success"},{"item":"react-google-maps-loader","response":"success"},{"item":"react-google-places-suggest","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-google-recaptcha","response":"success"},{"item":"react-gravatar","response":"success"},{"item":"react-grid-layout","response":"success"},{"item":"react-gtm-module","response":"success"},{"item":"react-hamburger-menu","response":"success"},{"item":"react-hammerjs","response":"success"},{"item":"react-headroom","response":"success"},{"item":"react-helmet","response":"success"},{"item":"react-highcharts","response":"success"},{"item":"react-highlight","response":"success"},{"item":"react-highlight-words","response":"success"},{"item":"react-highlight.js","response":"success"},{"item":"react-highlighter","response":"success"},{"item":"react-holder","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nMaximum call stack size exceeded\n"},{"item":"react-hook-mousetrap","response":"success"},{"item":"react-hooks-helper","response":"success"},{"item":"react-howler","response":"success"},{"item":"react-html-parser","response":"success"},{"item":"react-hyperscript","response":"success"},{"item":"react-icofont","response":"success"},{"item":"react-icon-base","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"react-image-crop","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"react-image-fallback","response":"success"},{"item":"react-image-gallery","response":"success"},{"item":"react-image-magnify","response":"success"},{"item":"react-imageloader","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"react-images","response":"success"},{"item":"react-imgix","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-imgpro","response":"success"},{"item":"react-immutable-proptypes","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property 'name' of undefined\n"},{"item":"react-infinite","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"react-infinite-calendar","response":"success"},{"item":"react-infinite-scroll-component","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"react-infinite-scroller","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nMaximum call stack size exceeded\n"},{"item":"react-input-autosize","response":"success"},{"item":"react-input-calendar","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"react-input-mask","response":"success"},{"item":"react-inspector","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null"},{"item":"react-instantsearch","response":"success"},{"item":"react-instantsearch-core","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"react-instantsearch-dom","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"react-instantsearch-native","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"react-interactive","response":"success"},{"item":"react-intl-redux","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"react-is","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null"},{"item":"react-is-deprecated","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"react-js-pagination","response":"success"},{"item":"react-json","response":"success"},{"item":"react-json-tree","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nMaximum call stack size exceeded\n"},{"item":"react-jsonschema-form","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"react-kawaii","response":"success"},{"item":"react-lazy-load-image-component","response":"success"},{"item":"react-lazyload","response":"success"},{"item":"react-lazylog","response":"success"},{"item":"react-leaflet","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null"},{"item":"react-leaflet-markercluster","response":"success"},{"item":"react-leaflet-sidebarv2","response":"success"},{"item":"react-lifecycle-component","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"react-lifecycles-compat","response":"success"},{"item":"react-linkify","response":"success"},{"item":"react-list","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nMaximum call stack size exceeded\n"},{"item":"react-loadable","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"react-loadable-visibility","response":"success"},{"item":"react-loader","response":"success"},{"item":"react-loader-spinner","response":"success"},{"item":"react-lottie","response":"success"},{"item":"react-mailchimp-subscribe","response":"success"},{"item":"react-map-gl","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null"},{"item":"react-maskedinput","response":"success"},{"item":"react-material-ui-form-validator","response":"success"},{"item":"react-mathquill","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"react-mce","response":"success"},{"item":"react-mdl","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nMaximum call stack size exceeded\n"},{"item":"react-measure","response":"success"},{"item":"react-medium-image-zoom","response":"success"},{"item":"react-mentions","response":"success"},{"item":"react-mic","response":"success"},{"item":"react-mixin","response":"success"},{"item":"react-modal","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"react-motion","response":"success"},{"item":"react-motion-loop","response":"success"},{"item":"react-motion-slider","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"react-motion-ui-pack","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-native","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property 'kind' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n"},{"item":"react-native-actionsheet","response":"success"},{"item":"react-native-android-taskdescription","response":"success"},{"item":"react-native-app-intro-slider","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-app-link","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-native-audio","response":"success"},{"item":"react-native-auth0","response":"success"},{"item":"react-native-autocomplete-input","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-awesome-card-io","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-background-timer","response":"success"},{"item":"react-native-bluetooth-serial","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-calendars","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-canvas","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-charts-wrapper","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-check-box","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-communications","response":"success"},{"item":"react-native-community__cli","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property 'declarations' of undefined\n"},{"item":"react-native-custom-tabs","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-native-datepicker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-dialog","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-dialogflow","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-native-doc-viewer","response":"success"},{"item":"react-native-document-picker","response":"success"},{"item":"react-native-dotenv","response":"success"},{"item":"react-native-draggable-flatlist","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-drawer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-drawer-layout","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-easy-upgrade","response":"success"},{"item":"react-native-elevated-view","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-fbsdk","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-fetch-blob","response":"success"},{"item":"react-native-flip-card","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-form","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-google-signin","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-honeywell-scanner","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-native-htmlview","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-huawei-protected-apps","response":"success"},{"item":"react-native-i18n","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-native-incall-manager","response":"success"},{"item":"react-native-indicators","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-joi","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"react-native-keep-awake","response":"success"},{"item":"react-native-keyboard-spacer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-loading-spinner-overlay","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-mail","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-native-maps","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-material-design-searchbar","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-material-dropdown","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-material-kit","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-material-textfield","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-material-ui","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-mixpanel","response":"success"},{"item":"react-native-modal-dropdown","response":"success"},{"item":"react-native-modal-filter-picker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-modalbox","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-multi-slider","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-navbar","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-orientation","response":"success"},{"item":"react-native-pdf-lib","response":"success"},{"item":"react-native-percentage-circle","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-phone-input","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-photo-view","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-platform-touchable","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-popup-dialog","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-privacy-snapshot","response":"success"},{"item":"react-native-push-notification","response":"success"},{"item":"react-native-qrcode","response":"success"},{"item":"react-native-read-more-text","response":"success"},{"item":"react-native-referrer","response":"success"},{"item":"react-native-responsive-dimensions","response":"success"},{"item":"react-native-restart","response":"success"},{"item":"react-native-rss-parser","response":"success"},{"item":"react-native-safari-view","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-scaled-image","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-scrollable-tab-view","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nMaximum call stack size exceeded\n"},{"item":"react-native-sensor-manager","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property 'kind' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n"},{"item":"react-native-settings-list","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-share","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-share-extension","response":"success"},{"item":"react-native-share-menu","response":"success"},{"item":"react-native-signature-capture","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-snackbar-component","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-snap-carousel","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-sortable-grid","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-sortable-list","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-sqlite-storage","response":"success"},{"item":"react-native-star-rating","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-status-bar-height","response":"success"},{"item":"react-native-svg-charts","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-svg-uri","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-swiper","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nMaximum call stack size exceeded\n"},{"item":"react-native-tab-navigator","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-text-input-mask","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-toast-native","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-touch-id","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"react-native-uuid","response":"success"},{"item":"react-native-uuid-generator","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-native-vector-icons","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-version-check","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-native-version-number","response":"success"},{"item":"react-native-video","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-view-pdf","response":"success"},{"item":"react-native-webrtc","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-native-zeroconf","response":"success"},{"item":"react-native-zss-rich-text-editor","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-no-ssr","response":"success"},{"item":"react-notification-system","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nMaximum call stack size exceeded\n"},{"item":"react-notification-system-redux","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nMaximum call stack size exceeded\n"},{"item":"react-notify-toast","response":"success"},{"item":"react-numeric-input","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"react-offcanvas","response":"success"},{"item":"react-onclickoutside","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"react-onsenui","response":"success"},{"item":"react-outside-click-handler","response":"success"},{"item":"react-overlays","response":"success"},{"item":"react-paginate","response":"success"},{"item":"react-panelgroup","response":"success"},{"item":"react-pdf","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property 'symbol' of undefined\n"},{"item":"react-phone-number-input","response":"success"},{"item":"react-photoswipe","response":"success"},{"item":"react-places-autocomplete","response":"success"},{"item":"react-plaid-link","response":"success"},{"item":"react-plotly.js","response":"success"},{"item":"react-plyr","response":"success"},{"item":"react-pointable","response":"success"},{"item":"react-popover","response":"success"},{"item":"react-portal","response":"success"},{"item":"react-primitives","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-props-decorators","response":"success"},{"item":"react-qr-reader","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"react-query","response":"success"},{"item":"react-radio-group","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-rangeslider","response":"success"},{"item":"react-recaptcha","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"react-recaptcha-v3","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"react-reconciler","response":"success"},{"item":"react-redux","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property 'name' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"react-redux-epic","response":"success"},{"item":"react-redux-i18n","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"react-redux-toastr","response":"success"},{"item":"react-relay","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null"},{"item":"react-request","response":"success"},{"item":"react-resizable","response":"success"},{"item":"react-resize-detector","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nMaximum call stack size exceeded\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n"},{"item":"react-resolver","response":"success"},{"item":"react-responsive","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null"},{"item":"react-router","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null"},{"item":"react-router-bootstrap","response":"success"},{"item":"react-router-config","response":"success"},{"item":"react-router-dom","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"react-router-guard","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null"},{"item":"react-router-hash-link","response":"success"},{"item":"react-router-native","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"react-router-navigation","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-router-navigation-core","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"react-router-param-link","response":"success"},{"item":"react-router-redux","response":"success"},{"item":"react-rte","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property 'kind' of undefined\n"},{"item":"react-s-alert","response":"success"},{"item":"react-scroll","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property 'symbol' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n"},{"item":"react-scroll-into-view-if-needed","response":"success"},{"item":"react-scroll-rotate","response":"success"},{"item":"react-scrollable-anchor","response":"success"},{"item":"react-scrollbar","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"react-scrollbar-size","response":"success"},{"item":"react-scrollspy","response":"success"},{"item":"react-select","response":"success"},{"item":"react-shadow-dom-retarget-events","response":"success"},{"item":"react-share","response":"success"},{"item":"react-show-more","response":"success"},{"item":"react-side-effect","response":"success"},{"item":"react-sidebar","response":"success"},{"item":"react-signature-canvas","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null"},{"item":"react-simple-maps","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property 'name' of undefined\n"},{"item":"react-sizes","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property 'declarations' of undefined\n"},{"item":"react-sketchapp","response":"success"},{"item":"react-slick","response":"success"},{"item":"react-slider","response":"success"},{"item":"react-smooth-scrollbar","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"react-sortable-tree","response":"success"},{"item":"react-sortable-tree-theme-file-explorer","response":"success"},{"item":"react-sound","response":"success"},{"item":"react-sparklines","response":"success"},{"item":"react-spinkit","response":"success"},{"item":"react-spinner","response":"success"},{"item":"react-splitter-layout","response":"success"},{"item":"react-star-rating-component","response":"success"},{"item":"react-stars","response":"success"},{"item":"react-sticky","response":"success"},{"item":"react-sticky-el","response":"success"},{"item":"react-stickynode","response":"success"},{"item":"react-stripe-elements","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-svg-inline","response":"success"},{"item":"react-svg-pan-zoom","response":"success"},{"item":"react-swf","response":"success"},{"item":"react-swipe","response":"success"},{"item":"react-swipeable-views","response":"success"},{"item":"react-swipeable-views-utils","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"react-syntax-highlighter","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"react-table","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property 'name' of undefined\n"},{"item":"react-table-filter","response":"success"},{"item":"react-tabs","response":"success"},{"item":"react-tabs-redux","response":"success"},{"item":"react-tag-autocomplete","response":"success"},{"item":"react-tag-input","response":"success"},{"item":"react-tagcloud","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"react-tagsinput","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nMaximum call stack size exceeded\n"},{"item":"react-tap-event-plugin","response":"success"},{"item":"react-test-renderer","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null"},{"item":"react-text-mask","response":"success"},{"item":"react-text-truncate","response":"success"},{"item":"react-textarea-autosize","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"react-timeago","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"react-timeout","response":"success"},{"item":"react-toast-notifications","response":"success"},{"item":"react-toastr","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"react-toggle","response":"success"},{"item":"react-tooltip","response":"success"},{"item":"react-touch","response":"success"},{"item":"react-tracking","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null"},{"item":"react-transition-group","response":"success"},{"item":"react-treeview","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"react-truncate","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nMaximum call stack size exceeded\n"},{"item":"react-twitter-auth","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property 'declarations' of undefined\n"},{"item":"react-typist","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-ultimate-pagination","response":"success"},{"item":"react-user-tour","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"react-vega","response":"success"},{"item":"react-vertical-timeline-component","response":"success"},{"item":"react-virtual-keyboard","response":"success"},{"item":"react-virtualized","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property 'name' of undefined\n"},{"item":"react-virtualized-auto-sizer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property 'symbol' of undefined\n"},{"item":"react-virtualized-select","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"react-visibility-sensor","response":"success"},{"item":"react-wait","response":"success"},{"item":"react-weui","response":"success"},{"item":"react-widgets","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"react-widgets-moment","response":"success"},{"item":"react-window","response":"success"},{"item":"react-window-infinite-loader","response":"success"},{"item":"react-window-size","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property 'symbol' of undefined\n"},{"item":"react-with-styles","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"react-wow","response":"success"},{"item":"react-youtube","response":"success"},{"item":"react-youtube-embed","response":"success"},{"item":"reactable","response":"success"},{"item":"reactabular-dnd","response":"success"},{"item":"reactabular-sticky","response":"success"},{"item":"reactabular-table","response":"success"},{"item":"reactcss","response":"success"},{"item":"reactour","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"reactstrap","response":"success"},{"item":"read","response":"success"},{"item":"read-package-tree","response":"success"},{"item":"readable-stream","response":"success"},{"item":"readdir-stream","response":"success"},{"item":"readline-sync","response":"success"},{"item":"readline-transform","response":"success"},{"item":"readmore-js","response":"success"},{"item":"reapop","response":"success"},{"item":"rebass","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"rebass__forms","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"rebass__grid","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"rebind-host","response":"success"},{"item":"recaptcha2","response":"success"},{"item":"recase","response":"success"},{"item":"recharts","response":"success"},{"item":"recharts-scale","response":"success"},{"item":"rechoir","response":"success"},{"item":"recluster","response":"success"},{"item":"recompose","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"reconnect-core","response":"success"},{"item":"reconnectingwebsocket","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"recorder-js","response":"success"},{"item":"recursive-readdir","response":"success"},{"item":"redis","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nMaximum call stack size exceeded\n"},{"item":"redis-errors","response":"success"},{"item":"redis-mock","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nMaximum call stack size exceeded\n"},{"item":"redis-rate-limiter","response":"success"},{"item":"redis-scripto","response":"success"},{"item":"redlock","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"redux-action","response":"success"},{"item":"redux-action-utils","response":"success"},{"item":"redux-actions","response":"success"},{"item":"redux-api-middleware","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property 'name' of undefined\n"},{"item":"redux-async-queue","response":"success"},{"item":"redux-auth-wrapper","response":"success"},{"item":"redux-batched-subscribe","response":"success"},{"item":"redux-cablecar","response":"success"},{"item":"redux-debounced","response":"success"},{"item":"redux-async-queue","response":"success"},{"item":"redux-auth-wrapper","response":"success"},{"item":"redux-batched-subscribe","response":"success"},{"item":"redux-cablecar","response":"success"},{"item":"redux-debounced","response":"success"},{"item":"redux-devtools","response":"success"},{"item":"redux-devtools-dock-monitor","response":"success"},{"item":"redux-devtools-log-monitor","response":"success"},{"item":"redux-doghouse","response":"success"},{"item":"redux-duck","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"redux-first-router","response":"success"},{"item":"redux-first-router-link","response":"success"},{"item":"redux-first-router-restore-scroll","response":"success"},{"item":"redux-first-routing","response":"success"},{"item":"redux-form","response":"success"},{"item":"redux-immutable","response":"success"},{"item":"redux-immutable-state-invariant","response":"success"},{"item":"redux-infinite-scroll","response":"success"},{"item":"redux-injectable-store","response":"success"},{"item":"redux-localstorage","response":"success"},{"item":"redux-localstorage-debounce","response":"success"},{"item":"redux-localstorage-filter","response":"success"},{"item":"redux-logger","response":"success"},{"item":"redux-mock-store","response":"success"},{"item":"redux-optimistic-ui","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.0.json\nCannot read property '0' of undefined\n"},{"item":"redux-orm","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n"},{"item":"redux-pack","response":"success"},{"item":"redux-persist-transform-encrypt","response":"success"},{"item":"redux-persist-transform-filter","response":"success"},{"item":"redux-promise","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property 'find' of undefined\n"},{"item":"redux-promise-listener","response":"success"},{"item":"redux-recycle","response":"success"},{"item":"redux-router","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nMaximum call stack size exceeded\n"},{"item":"redux-saga-routines","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"redux-saga-tester","response":"success"},{"item":"redux-seamless-immutable","response":"success"},{"item":"redux-sentry-middleware","response":"success"},{"item":"redux-shortcuts","response":"success"},{"item":"redux-socket.io","response":"success"},{"item":"redux-state-sync","response":"success"},{"item":"redux-storage","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property '0' of undefined\n"},{"item":"redux-storage-engine-jsurl","response":"success"},{"item":"redux-storage-engine-localstorage","response":"success"},{"item":"redux-test-utils","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property 'find' of undefined\n"},{"item":"redux-testkit","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"redux-ui","response":"success"},{"item":"ref","response":"success"},{"item":"ref-array","response":"success"},{"item":"ref-array-di","response":"success"},{"item":"ref-napi","response":"success"},{"item":"ref-struct","response":"success"},{"item":"ref-struct-di","response":"success"},{"item":"ref-union","response":"success"},{"item":"ref-union-di","response":"success"},{"item":"reflexbox","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"reflux","response":"success"},{"item":"refractor","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"registry-auth-token","response":"success"},{"item":"regression","response":"success"},{"item":"rehype-react","response":"success"},{"item":"relateurl","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property '0' of undefined\n"},{"item":"relaxed-json","response":"success"},{"item":"relay-compiler","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property 'symbol' of undefined\n"},{"item":"relay-config","response":"success"},{"item":"relay-runtime","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property 'declarations' of undefined\n"},{"item":"relay-test-utils","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nCannot read property 'symbol' of undefined\n"},{"item":"rellax","response":"success"},{"item":"remarkable","response":"success"},{"item":"remote-origin-url","response":"success"},{"item":"remote-redux-devtools","response":"success"},{"item":"remotedev-serialize","response":"success"},{"item":"remove-markdown","response":"success"},{"item":"rename","response":"success"},{"item":"repeat-element","response":"success"},{"item":"repeat-string","response":"success"},{"item":"repeating","response":"success"},{"item":"replace-ext","response":"success"},{"item":"replacestream","response":"success"},{"item":"request","response":"success"},{"item":"request-as-curl","response":"success"},{"item":"request-debug","response":"success"},{"item":"request-ip","response":"success"},{"item":"request-promise","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"request-promise-native","response":"success"},{"item":"request-stats","response":"success"},{"item":"requestidlecallback","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"requestretry","response":"success"},{"item":"require-dir","response":"success"},{"item":"require-directory","response":"success"},{"item":"require-from-string","response":"success"},{"item":"require-relative","response":"success"},{"item":"requireindex","response":"success"},{"item":"requirejs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"requirejs-domready","response":"success"},{"item":"requires-port","response":"success"},{"item":"resemblejs","response":"success"},{"item":"reserved-words","response":"success"},{"item":"reservoir","response":"success"},{"item":"resize-img","response":"success"},{"item":"resize-observer-browser","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nCannot read property '0' of undefined\n"},{"item":"resolve","response":"success"},{"item":"resolve-options","response":"success"},{"item":"resolve-protobuf-schema","response":"success"},{"item":"resourcejs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nMaximum call stack size exceeded\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"response-time","response":"success"},{"item":"responselike","response":"success"},{"item":"rest","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"restangular","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property 'declarations' of undefined\n"},{"item":"restful.js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nMaximum call stack size exceeded\n"},{"item":"restify","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"restify-cookies","response":"success"},{"item":"restify-cors-middleware","response":"success"},{"item":"restify-errors","response":"success"},{"item":"restify-plugins","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"restler","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"restling","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"rethinkdb","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nMaximum call stack size exceeded\n"},{"item":"retinajs","response":"success"},{"item":"retry","response":"success"},{"item":"retry-as-promised","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"revalidate","response":"success"},{"item":"revalidator","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"reveal","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.4.json\nCannot read property '0' of undefined\n"},{"item":"rewire","response":"success"},{"item":"rfc2047","response":"success"},{"item":"rfdc","response":"success"},{"item":"rgrove__parse-xml","response":"success"},{"item":"rheostat","response":"success"},{"item":"rickshaw","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"right-align","response":"success"},{"item":"rijndael-js","response":"success"},{"item":"rimraf","response":"success"},{"item":"ringbufferjs","response":"success"},{"item":"riot-api-nodejs","response":"success"},{"item":"riot-games-api","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"riot-route","response":"success"},{"item":"riotcontrol","response":"success"},{"item":"riotjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\nCannot read property '0' of undefined\n"},{"item":"ripemd160","response":"success"},{"item":"rison","response":"success"},{"item":"rivets","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"rmc-drawer","response":"success"},{"item":"rmfr","response":"success"},{"item":"rn-app-upgrade","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.5.json\n\n../DefinitelyTyped/types/react-native/globals.d.ts(40,15): error TS2300: Duplicate identifier 'FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(85,5): error TS2717: Subsequent property declarations must have the same type.  Property 'body' must be of type 'BodyInit', but here has type 'string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData'.\n../DefinitelyTyped/types/react-native/globals.d.ts(112,14): error TS2300: Duplicate identifier 'RequestInfo'.\n../DefinitelyTyped/types/react-native/globals.d.ts(131,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'Response' must be of type '{ new (body?: BodyInit, init?: ResponseInit): Response; prototype: Response; error(): Response; redirect(url: string, status?: number): Response; }', but here has type '{ new (body?: string | ArrayBuffer | DataView | Int8Array | Uint8Array | Uint8ClampedArray | Int16Array | ... 6 more ... | FormData, init?: ResponseInit): Response; prototype: Response; error: () => Response; redirect: (url: string, status?: number) => Response; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(207,5): error TS2717: Subsequent property declarations must have the same type.  Property 'abort' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(208,5): error TS2717: Subsequent property declarations must have the same type.  Property 'error' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(209,5): error TS2717: Subsequent property declarations must have the same type.  Property 'load' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(210,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadend' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(211,5): error TS2717: Subsequent property declarations must have the same type.  Property 'loadstart' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(212,5): error TS2717: Subsequent property declarations must have the same type.  Property 'progress' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(213,5): error TS2717: Subsequent property declarations must have the same type.  Property 'timeout' must be of type 'ProgressEvent<XMLHttpRequestEventTarget>', but here has type 'ProgressEvent<EventTarget>'.\n../DefinitelyTyped/types/react-native/globals.d.ts(254,14): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n../DefinitelyTyped/types/react-native/globals.d.ts(259,15): error TS2300: Duplicate identifier 'URLSearchParams'.\n../DefinitelyTyped/types/react-native/globals.d.ts(293,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onopen' must be of type '(this: WebSocket, ev: Event) => any', but here has type '() => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(294,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onmessage' must be of type '(this: WebSocket, ev: MessageEvent) => any', but here has type '(event: WebSocketMessageEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(295,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onerror' must be of type '(this: WebSocket, ev: Event) => any', but here has type '(event: WebSocketErrorEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(296,5): error TS2717: Subsequent property declarations must have the same type.  Property 'onclose' must be of type '(this: WebSocket, ev: CloseEvent) => any', but here has type '(event: WebSocketCloseEvent) => void'.\n../DefinitelyTyped/types/react-native/globals.d.ts(299,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'WebSocket' must be of type '{ new (url: string, protocols?: string | string[]): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }', but here has type '{ new (uri: string, protocols?: string | string[], options?: { [optionName: string]: any; headers: { [headerName: string]: string; }; }): WebSocket; prototype: WebSocket; readonly CLOSED: number; readonly CLOSING: number; readonly CONNECTING: number; readonly OPEN: number; }'.\n../DefinitelyTyped/types/react-native/globals.d.ts(323,15): error TS2300: Duplicate identifier 'AbortSignal'.\n../DefinitelyTyped/types/react-native/globals.d.ts(336,15): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1881,11): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1892,13): error TS2300: Duplicate identifier 'AbortController'.\nnode_modules/typescript/lib/lib.dom.d.ts(1902,11): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(1914,13): error TS2300: Duplicate identifier 'AbortSignal'.\nnode_modules/typescript/lib/lib.dom.d.ts(5657,11): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(5667,13): error TS2300: Duplicate identifier 'FormData'.\nnode_modules/typescript/lib/lib.dom.d.ts(16078,11): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(16107,13): error TS2300: Duplicate identifier 'URLSearchParams'.\nnode_modules/typescript/lib/lib.dom.d.ts(19972,6): error TS2300: Duplicate identifier 'RequestInfo'.\nnode_modules/typescript/lib/lib.dom.d.ts(20165,6): error TS2300: Duplicate identifier 'XMLHttpRequestResponseType'.\n"},{"item":"rn-fetch-blob","response":"success"},{"item":"roarr","response":"success"},{"item":"robust-point-in-polygon","response":"success"},{"item":"rocksdb","response":"success"},{"item":"rockset","response":"success"},{"item":"roll","response":"success"},{"item":"rolling-rate-limiter","response":"success"},{"item":"rollup-plugin-buble","response":"success"},{"item":"rollup-plugin-json","response":"success"},{"item":"rollup-plugin-node-builtins","response":"success"},{"item":"rollup-plugin-node-globals","response":"success"},{"item":"rollup-plugin-peer-deps-external","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property 'find' of undefined\n"},{"item":"rollup-plugin-postcss","response":"success"},{"item":"rollup-plugin-progress","response":"success"},{"item":"rollup-plugin-size-snapshot","response":"success"},{"item":"rollup-plugin-sourcemaps","response":"success"},{"item":"rollup-plugin-url","response":"success"},{"item":"rollup-plugin-visualizer","response":"success"},{"item":"roman-numerals","response":"success"},{"item":"ronomon__crypto-async","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"rosie","response":"success"},{"item":"roslib","response":"success"},{"item":"route-parser","response":"success"},{"item":"routie","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"rox-browser","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"rox-node","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"rox-react-native","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"royalslider","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"rpio","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.6.json\nCannot read property '0' of undefined\n"},{"item":"rrc","response":"success"},{"item":"rsmq-worker","response":"success"},{"item":"rsocket-core","response":"success"},{"item":"rsocket-flowable","response":"success"},{"item":"rsocket-tcp-client","response":"success"},{"item":"rsocket-tcp-server","response":"success"},{"item":"rsocket-types","response":"success"},{"item":"rsocket-websocket-client","response":"success"},{"item":"rsocket-websocket-server","response":"success"},{"item":"rss","response":"success"},{"item":"rsvp","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertyDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null"},{"item":"rsync","response":"success"},{"item":"rtl-detect","response":"success"},{"item":"rtlcss","response":"success"},{"item":"rtree","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"run-parallel","response":"success"},{"item":"run-parallel-limit","response":"success"},{"item":"run-sequence","response":"success"},{"item":"runes","response":"success"},{"item":"rwlock","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"rx","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"rx-angular","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"rx-core","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"rx-core-binding","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"rx-dom","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"rx-jquery","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"rx-lite","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.7.json\nCannot read property '0' of undefined\n"},{"item":"rx-lite-aggregates","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"rx-lite-async","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"rx-lite-backpressure","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"rx-lite-coincidence","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"rx-lite-experimental","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"rx-lite-joinpatterns","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"rx-lite-testing","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"rx-lite-time","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"rx-lite-virtualtime","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"rx-node","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"rx.wamp","response":"success"},{"item":"s3-download-stream","response":"success"},{"item":"s3-upload-stream","response":"success"},{"item":"s3-uploader","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"s3rver","response":"success"},{"item":"sade","response":"success"},{"item":"safari-extension","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"safari-extension-content","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.8.json\nCannot read property '0' of undefined\n"},{"item":"safe-compare","response":"success"},{"item":"safe-json-stringify","response":"success"},{"item":"safe-regex","response":"success"},{"item":"safe-timers","response":"success"},{"item":"safer-buffer","response":"success"},{"item":"sails.io.js","response":"success"},{"item":"sailthru-client","response":"success"},{"item":"saml","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"saml2-js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"saml20","response":"success"},{"item":"samlp","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"sammy","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"sanctuary","response":"success"},{"item":"sandboxed-module","response":"success"},{"item":"sane","response":"success"},{"item":"sane-email-validation","response":"success"},{"item":"sanitize-html","response":"success"},{"item":"sanitizer","response":"success"},{"item":"sap__xsenv","response":"success"},{"item":"sarif","response":"success"},{"item":"sasl-anonymous","response":"success"},{"item":"sasl-digest-md5","response":"success"},{"item":"sasl-external","response":"success"},{"item":"sasl-plain","response":"success"},{"item":"sasl-scram-sha-1","response":"success"},{"item":"saslmechanisms","response":"success"},{"item":"saslprep","response":"success"},{"item":"sass","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"sass-graph","response":"success"},{"item":"sat","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"satnav","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.9.json\nCannot read property '0' of undefined\n"},{"item":"save-csv","response":"success"},{"item":"sax","response":"success"},{"item":"saywhen","response":"success"},{"item":"sbd","response":"success"},{"item":"sc-auth","response":"success"},{"item":"sc-broker","response":"success"},{"item":"sc-broker-cluster","response":"success"},{"item":"sc-channel","response":"success"},{"item":"sc-errors","response":"success"},{"item":"sc-framework-health-check","response":"success"},{"item":"sc-hot-reboot","response":"success"},{"item":"scalike","response":"success"},{"item":"scc-broker-client","response":"success"},{"item":"schedule","response":"success"},{"item":"scheduler","response":"success"},{"item":"schema-registry","response":"success"},{"item":"schwifty","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null"},{"item":"scoped-http-client","response":"success"},{"item":"screeps","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"screeps-profiler","response":"success"},{"item":"script-ext-html-webpack-plugin","response":"success"},{"item":"scriptjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"scroll","response":"success"},{"item":"scroll-into-view","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"scroll-to-element","response":"success"},{"item":"scroller","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.10.json\nCannot read property '0' of undefined\n"},{"item":"scrollparent","response":"success"},{"item":"scrollreveal","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"scrolltofixed","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"scrypt","response":"success"},{"item":"scrypt-async","response":"success"},{"item":"scrypt-js","response":"success"},{"item":"scryptsy","response":"success"},{"item":"scss-parser","response":"success"},{"item":"sdp-transform","response":"success"},{"item":"seamless","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"seamless-immutable","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null"},{"item":"season","response":"success"},{"item":"secp256k1","response":"success"},{"item":"secure-json-parse","response":"success"},{"item":"secure-password","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null"},{"item":"secure-random-password","response":"success"},{"item":"seed-random","response":"success"},{"item":"seededshuffle","response":"success"},{"item":"seedrandom","response":"success"},{"item":"seen","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"segment-analytics","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"select2","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property 'declarations' of undefined\n"},{"item":"selectables","response":"success"},{"item":"selectize","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.11.json\nCannot read property '0' of undefined\n"},{"item":"selenium-standalone","response":"success"},{"item":"selenium-webdriver","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property 'symbol' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n"},{"item":"semantic-release","response":"success"},{"item":"semantic-ui","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.12.json\nCannot read property '0' of undefined\n"},{"item":"semantic-ui-accordion","response":"success"},{"item":"semantic-ui-api","response":"success"},{"item":"semantic-ui-checkbox","response":"success"},{"item":"semantic-ui-dimmer","response":"success"},{"item":"semantic-ui-dropdown","response":"success"},{"item":"semantic-ui-embed","response":"success"},{"item":"semantic-ui-form","response":"success"},{"item":"semantic-ui-modal","response":"success"},{"item":"semantic-ui-nag","response":"success"},{"item":"semantic-ui-popup","response":"success"},{"item":"semantic-ui-progress","response":"success"},{"item":"semantic-ui-rating","response":"success"},{"item":"semantic-ui-search","response":"success"},{"item":"semantic-ui-shape","response":"success"},{"item":"semantic-ui-sidebar","response":"success"},{"item":"semantic-ui-site","response":"success"},{"item":"semantic-ui-sticky","response":"success"},{"item":"semantic-ui-tab","response":"success"},{"item":"semantic-ui-transition","response":"success"},{"item":"semantic-ui-visibility","response":"success"},{"item":"semaphore","response":"success"},{"item":"semver","response":"success"},{"item":"semver-compare","response":"success"},{"item":"semver-sort","response":"success"},{"item":"semver-stable","response":"success"},{"item":"semver-utils","response":"success"},{"item":"sencha_touch","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"send","response":"success"},{"item":"sendmail","response":"success"},{"item":"seneca","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"sentry__webpack-plugin","response":"success"},{"item":"sequelize","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"sequelize-cursor-pagination","response":"success"},{"item":"sequelize-fixtures","response":"success"},{"item":"sequencify","response":"success"},{"item":"sequester","response":"success"},{"item":"serialize-javascript","response":"success"},{"item":"serialport","response":"success"},{"item":"serve-favicon","response":"success"},{"item":"serve-handler","response":"success"},{"item":"serve-index","response":"success"},{"item":"serve-static","response":"success"},{"item":"server","response":"success"},{"item":"server-destroy","response":"success"},{"item":"serverless","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"service-worker-mock","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\n\n../DefinitelyTyped/types/service-worker-mock/index.d.ts(15,32): error TS2304: Cannot find name 'ServiceWorkerGlobalScopeEventMap'.\n../DefinitelyTyped/types/service-worker-mock/index.d.ts(26,18): error TS2304: Cannot find name 'Client'.\n../DefinitelyTyped/types/service-worker-mock/index.d.ts(44,34): error TS2304: Cannot find name 'ServiceWorkerGlobalScopeEventMap'.\n../DefinitelyTyped/types/service-worker-mock/index.d.ts(47,50): error TS2304: Cannot find name 'PushEvent'.\n"},{"item":"servicenow","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.13.json\nCannot read property '0' of undefined\n"},{"item":"servicenow-london","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"serviceworker-webpack-plugin","response":"success"},{"item":"session-file-store","response":"success"},{"item":"set-cookie-parser","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"set-interval-async","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"set-link","response":"success"},{"item":"set-value","response":"success"},{"item":"setasap","response":"success"},{"item":"setimmediate","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"settings","response":"success"},{"item":"setup-polly-jest","response":"success"},{"item":"sha","response":"success"},{"item":"sha.js","response":"success"},{"item":"sha1","response":"success"},{"item":"sha256","response":"success"},{"item":"shallow-equals","response":"success"},{"item":"shallowequal","response":"success"},{"item":"shapefile","response":"success"},{"item":"sharedb","response":"success"},{"item":"sharedworker","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"sharepoint","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.14.json\nCannot read property '0' of undefined\n"},{"item":"sharp","response":"success"},{"item":"shasum","response":"success"},{"item":"shebang-command","response":"success"},{"item":"sheetify","response":"success"},{"item":"shell-escape","response":"success"},{"item":"shell-quote","response":"success"},{"item":"shelljs","response":"success"},{"item":"shelljs-exec-proxy","response":"success"},{"item":"shimmer","response":"success"},{"item":"shipit-cli","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nMaximum call stack size exceeded\n"},{"item":"shipit-utils","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nMaximum call stack size exceeded\n"},{"item":"shopify-buy","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"shorten-repo-url","response":"success"},{"item":"shortid","response":"success"},{"item":"shot","response":"success"},{"item":"should-sinon","response":"success"},{"item":"showdown","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"shpjs","response":"success"},{"item":"shrink-ray","response":"success"},{"item":"shuffle-array","response":"success"},{"item":"shuffle-seed","response":"success"},{"item":"sic-ecies","response":"success"},{"item":"sic-list","response":"success"},{"item":"siema","response":"success"},{"item":"siesta","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"sigmajs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"sigmund","response":"success"},{"item":"signal-exit","response":"success"},{"item":"signale","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.15.json\nCannot read property '0' of undefined\n"},{"item":"signalfx","response":"success"},{"item":"signalr","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"signalr-no-jquery","response":"success"},{"item":"signals","response":"success"},{"item":"signature_pad","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"simmerjs","response":"success"},{"item":"simonwep__selection-js","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"simpl-schema","response":"success"},{"item":"simple-assign","response":"success"},{"item":"simple-cw-node","response":"success"},{"item":"simple-lru","response":"success"},{"item":"simple-mock","response":"success"},{"item":"simple-oauth2","response":"success"},{"item":"simple-peer","response":"success"},{"item":"simple-query-string","response":"success"},{"item":"simple-url-cache","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"simple-websocket","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"simple-xml","response":"success"},{"item":"simplebar","response":"success"},{"item":"simplecrawler","response":"success"},{"item":"simplemde","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nCannot read property '0' of undefined\n"},{"item":"simplesmtp","response":"success"},{"item":"simplestorage.js","response":"success"},{"item":"simulant","response":"success"},{"item":"single-line-log","response":"success"},{"item":"single-spa-react","response":"success"},{"item":"sinon","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\n"},{"item":"sinon-as-promised","response":"success"},{"item":"sinon-chai","response":"success"},{"item":"sinon-chrome","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"sinon-express-mock","response":"success"},{"item":"sinon-mongoose","response":"success"},{"item":"sinon-stub-promise","response":"success"},{"item":"sinon-test","response":"success"},{"item":"sipml","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"sitemap2","response":"success"},{"item":"six-runtime","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"sizeof","response":"success"},{"item":"sizzle","response":"success"},{"item":"sjcl","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"skatejs","response":"success"},{"item":"sketchapp","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"ski","response":"success"},{"item":"skyway","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"slack-mock","response":"success"},{"item":"slack-node","response":"success"},{"item":"slack-winston","response":"success"},{"item":"slackdown","response":"success"},{"item":"slackify-html","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property '0' of undefined\n"},{"item":"slate","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.17.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n"},{"item":"slate-base64-serializer","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n"},{"item":"slate-html-serializer","response":"success"},{"item":"slate-irc","response":"success"},{"item":"slate-plain-serializer","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of ModuleDeclaration - it will convert to null"},{"item":"slate-react","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property 'declarations' of undefined\n\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\n"},{"item":"sleep","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"slice-ansi","response":"success"},{"item":"slick-carousel","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"slickgrid","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"slideout","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"slimerjs","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"sloc","response":"success"},{"item":"slocket","response":"success"},{"item":"slonik","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator - it will convert to null"},{"item":"slug","response":"success"},{"item":"smart-fox-server","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"smart-truncate","response":"success"},{"item":"smartwizard","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"smooth-scroll","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.18.json\nCannot read property '0' of undefined\n"},{"item":"smoothscroll-polyfill","response":"success"},{"item":"smpte-timecode","response":"success"},{"item":"smtp-server","response":"success"},{"item":"smtpapi","response":"success"},{"item":"snakecase-keys","response":"success"},{"item":"snappy","response":"success"},{"item":"snapsvg","response":"success"},{"item":"snazzy-info-window","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"snekfetch","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"snowball-stemmers","response":"success"},{"item":"sns-validator","response":"success"},{"item":"sntp","response":"success"},{"item":"socket.io","response":"success"},{"item":"socket.io-client","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.19.json\nCannot read property '0' of undefined\n"},{"item":"socket.io-emitter","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: GetAccessor - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: GetAccessor - it will convert to null\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: GetAccessor - it will convert to null"},{"item":"socket.io-file","response":"success"},{"item":"socket.io-p2p","response":"success"},{"item":"socket.io-parser","response":"success"},{"item":"socket.io-redis","response":"success"},{"item":"socket.io.users","response":"success"},{"item":"socketcluster","response":"success"},{"item":"socketcluster-client","response":"success"},{"item":"socketcluster-server","response":"success"},{"item":"socketio-jwt","response":"success"},{"item":"socketio-jwt-auth","response":"success"},{"item":"socketio-wildcard","response":"success"},{"item":"socketty","response":"success"},{"item":"sockjs","response":"success"},{"item":"sockjs-client","response":"success"},{"item":"sodium-native","response":"success"},{"item":"solid-auth-client","response":"success"}]