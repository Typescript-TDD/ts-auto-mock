[{"item":"7zip-min","response":"success"},{"item":"a-big-triangle","response":"success"},{"item":"a11y-dialog","response":"success"},{"item":"a2hs.js","response":"success"},{"item":"abbrev","response":"success"},{"item":"abs","response":"success"},{"item":"abs-svg-path","response":"success"},{"item":"absinthe__socket","response":"success"},{"item":"absinthe__socket-apollo-link","response":"success"},{"item":"absolute","response":"success"},{"item":"absolute-url","response":"success"},{"item":"abstract-leveldown","response":"success"},{"item":"acc-wizard","response":"success"},{"item":"accedo__accedo-one","response":"success"},{"item":"accept","response":"success"},{"item":"accept-language-parser","response":"success"},{"item":"accepts","response":"success"},{"item":"accessibility","response":"success"},{"item":"accounting","response":"success"},{"item":"accurate-interval","response":"success"},{"item":"ace","response":"success"},{"item":"ace-diff","response":"success"},{"item":"ackee-tracker","response":"success"},{"item":"acl","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/0.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bluebird/index.d.ts:354:92\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property lastly of - R[U]\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `Multi' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `Multi' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `Multi' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `Multi' and such generics are currently not supported. \n        The generated mock will be incomplete."},{"item":"acorn","response":"success"},{"item":"actioncable","response":"success"},{"item":"activedirectory2","response":"success"},{"item":"activestorage","response":"success"},{"item":"activex-access","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property TargetRow of - ActiveXObjectNameMap[K]"},{"item":"activex-adodb","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property Source of - ActiveXObjectNameMap[K]"},{"item":"activex-adox","response":"success"},{"item":"activex-dao","response":"success"},{"item":"activex-diskquota","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property UserNameResolution of - ActiveXObjectNameMap[K]"},{"item":"activex-excel","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/1.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/activex-excel/index.d.ts:15:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/1.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/activex-excel/index.d.ts:22:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: EnumMember - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/1.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/activex-excel/index.d.ts:72:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: EnumMember - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/1.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/activex-excel/index.d.ts:70:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/1.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/activex-excel/index.d.ts:34:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/1.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/activex-excel/index.d.ts:40:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/1.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/activex-excel/index.d.ts:44:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: EnumMember - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/1.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/activex-excel/index.d.ts:1853:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: EnumMember - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/1.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/activex-excel/index.d.ts:1480:9\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property wFlags of - ActiveXObjectNameMap[K]"},{"item":"activex-faxcomexlib","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property pFaxServer of - ActiveXObjectNameMap[K]"},{"item":"activex-infopath","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property wFlags of - ActiveXObjectNameMap[K]"},{"item":"activex-interop","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property  of - ActiveXObjectNameMap[K]"},{"item":"activex-iwshruntimelibrary","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.1.json\nCannot read property 'length' of undefined\n"},{"item":"activex-libreoffice","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property ConfigurationUpdateAccess of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property ConfigurationUpdateAccess of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property SetUpdate of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property SetUpdate of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property SimpleSetUpdate of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property SimpleSetUpdate of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property theCoreReflection of - LibreOffice.InstantiableNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property CoreReflection of - LibreOffice.InstantiableNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property Forms of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property Forms of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property Constants of - ActiveXObjectNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AutomationScriptContext of - SingletonsNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AutomationServiceManager of - StructNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property AvailableServiceNames of - LibreOffice.ServicesNameMap[K]"},{"item":"activex-msforms","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property Y of - ActiveXObjectNameMap[K]"},{"item":"activex-mshtml","response":"success"},{"item":"activex-msxml2","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property XSLTemplate60 of - ActiveXObjectNameMap[K]"},{"item":"activex-office","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property wFlags of - ActiveXObjectNameMap[K]"},{"item":"activex-outlook","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property Views of - ActiveXObjectNameMap[K]"},{"item":"activex-powerpoint","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property WebOptions of - ActiveXObjectNameMap[K]"},{"item":"activex-scripting","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property TextStream of - ActiveXObjectNameMap[K]"},{"item":"activex-shdocvw","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property URL of - ActiveXObjectNameMap[K]"},{"item":"activex-shell","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property ShellWindows of - ActiveXObjectNameMap[K]"},{"item":"activex-stdole","response":"success"},{"item":"activex-vbide","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property Windows of - ActiveXObjectNameMap[K]"},{"item":"activex-wia","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property Vector of - ActiveXObjectNameMap[K]"},{"item":"activex-word","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property wFlags of - ActiveXObjectNameMap[K]"},{"item":"adal-angular","response":"success"},{"item":"add-zero","response":"success"},{"item":"add2home","response":"warning","message":"\u001b[33mWARNING\u001b[39m: DefinitelyTypedTransformer - Cannot find any valid type for this module ../DefinitelyTyped/types/add2home"},{"item":"addressparser","response":"success"},{"item":"adhan","response":"success"},{"item":"adlib","response":"success"},{"item":"adm-zip","response":"success"},{"item":"adobe__es-modules-middleware","response":"success"},{"item":"adone","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/adone/adone.d.ts:9:18\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/node/ts3.1/globals.d.ts:470:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/node/ts3.1/process.d.ts:275:17\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/node/ts3.1/globals.d.ts:519:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/node/ts3.1/globals.d.ts:518:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/node/ts3.1/globals.d.ts:517:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/node/ts3.1/globals.d.ts:505:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/node/ts3.1/globals.d.ts:504:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of PropertySignature - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/node/ts3.1/globals.d.ts:503:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of NamespaceExportDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/adone/glosses/std.d.ts:74:1\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property placeholder of - TObject[TKey]\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/common.d.ts:17:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/array.d.ts:37:22\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:314:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:350:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:436:12\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:778:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:1102:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:1377:12\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/collection.d.ts:1137:99\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property eachRight of - T[keyof T][K]\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/collection.d.ts:1363:119\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/collection.d.ts:1639:81\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/collection.d.ts:1750:51\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/collection.d.ts:1805:38\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/collection.d.ts:1928:81\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/lang.d.ts:1459:38\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:439:63\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:603:47\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:637:49\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property eachRight of - T[TKey]\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:1506:73\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2098:104\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2450:37\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2505:39\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2227:45\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2252:47\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2227:45\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2252:47\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2227:45\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2252:47\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2227:45\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2252:47\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2227:45\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2252:47\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2227:45\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2252:47\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/array.d.ts:489:20\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/array.d.ts:513:24\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/array.d.ts:566:45\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/array.d.ts:1788:18\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property eachRight of - T[K]\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2227:45\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2252:47\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/array.d.ts:489:20\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/array.d.ts:513:24\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/array.d.ts:566:45\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/array.d.ts:1788:18\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property eachRight of - T[K]\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2227:45\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2252:47\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:314:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:350:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:436:12\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:778:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:1102:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:1377:12\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2450:37\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2505:39\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/array.d.ts:483:20\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/array.d.ts:507:24\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/collection.d.ts:1113:94\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property eachRight of - T[keyof T][K]\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/collection.d.ts:1351:114\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:302:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:338:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:427:12\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:662:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:939:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:1368:12\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2221:40\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2246:42\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/common.d.ts:9:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2221:40\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2246:42\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2221:40\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2246:42\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/collection.d.ts:1615:76\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/collection.d.ts:1726:46\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/collection.d.ts:1781:33\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/collection.d.ts:1916:76\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/lang.d.ts:1435:33\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:427:58\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:591:42\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:625:44\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property cache of - T[TKey]\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:1494:68\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2078:99\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2444:32\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2487:34\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2221:40\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2246:42\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/array.d.ts:560:40\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/array.d.ts:1782:18\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property eachRight of - T[K]\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2221:40\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2246:42\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/array.d.ts:483:20\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/array.d.ts:507:24\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/array.d.ts:560:40\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/array.d.ts:1782:18\n\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property eachRight of - T[K]\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2221:40\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2246:42\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:302:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:338:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:427:12\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:662:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:939:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/function.d.ts:1368:12\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2444:32\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/lodash/common/object.d.ts:2487:34\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of NamespaceExportDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/adone/benchmark.d.ts:5:1\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of NamespaceExportDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/adone/async.d.ts:3:1"},{"item":"aes-js","response":"success"},{"item":"aframe","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: GetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/InterleavedBufferAttribute.d.ts:29:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: GetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/InterleavedBufferAttribute.d.ts:30:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/InterleavedBufferAttribute.d.ts:31:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SetAccessor - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/aframe/node_modules/three/src/core/BufferAttribute.d.ts:44:2"},{"item":"ag-channel","response":"success"},{"item":"ag-simple-broker","response":"success"},{"item":"agenda","response":"success"},{"item":"agent-base","response":"success"},{"item":"agiledigital__mule-preview","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: OptionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/agiledigital__mule-preview/index.d.ts:10:37\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: OptionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/agiledigital__mule-preview/index.d.ts:10:46\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: OptionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/agiledigital__mule-preview/index.d.ts:15:40\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: OptionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/2.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/agiledigital__mule-preview/index.d.ts:15:49"},{"item":"agilite","response":"success"},{"item":"agora-rtc-sdk","response":"success"},{"item":"airbnb-prop-types","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.2.json\nThe type checker failed to look up a symbol for `HTMLElement'. \n        Perhaps, the checker was searching an outdated source.\n"},{"item":"airtable","response":"success"},{"item":"ajv-async","response":"success"},{"item":"ajv-bsontype","response":"success"},{"item":"ajv-errors","response":"success"},{"item":"ajv-keywords","response":"success"},{"item":"ajv-merge-patch","response":"success"},{"item":"ajv-pack","response":"success"},{"item":"akamai-edgeworkers","response":"success"},{"item":"akumina-core","response":"success"},{"item":"ale-url-parser","response":"success"},{"item":"alertify","response":"success"},{"item":"alex","response":"success"},{"item":"alexa-sdk","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate1Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate1Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate1Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate1Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate2Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate2Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate2Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate2Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate2Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate2Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate3Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate3Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate3Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate3Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate3Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate3Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate6Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate6Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate6Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate6Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate6Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate6Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate7Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `BodyTemplate7Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `ListTemplate1Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `ListTemplate1Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `ListTemplate1Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `ListTemplate1Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `ListTemplate2Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `ListTemplate2Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `ListTemplate2Builder' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `ListTemplate2Builder' and such generics are currently not supported. \n        The generated mock will be incomplete."},{"item":"alexa-voice-service","response":"success"},{"item":"algebra.js","response":"success"},{"item":"algoliasearch","response":"success"},{"item":"algoliasearch-helper","response":"success"},{"item":"ali-app","response":"success"},{"item":"ali-oss","response":"success"},{"item":"align-text","response":"success"},{"item":"alks-node","response":"success"},{"item":"all-the-cities","response":"success"},{"item":"all-the-package-names","response":"success"},{"item":"alloy","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.3.json\nMaximum call stack size exceeded\n"},{"item":"allure-js-commons","response":"success"},{"item":"almost-equal","response":"success"},{"item":"alpha-bravo","response":"success"},{"item":"alpha-shape","response":"success"},{"item":"alt","response":"success"},{"item":"amap-js-api","response":"warning","message":"\u001b[33mWARNING\u001b[39m: DefinitelyTypedTransformer - Cannot find any valid type for this module ../DefinitelyTyped/types/amap-js-api"},{"item":"amap-js-api-arrival-range","response":"success"},{"item":"amap-js-api-autocomplete","response":"success"},{"item":"amap-js-api-city-search","response":"success"},{"item":"amap-js-api-control-bar","response":"success"},{"item":"amap-js-api-district-search","response":"success"},{"item":"amap-js-api-driving","response":"success"},{"item":"amap-js-api-geocoder","response":"success"},{"item":"amap-js-api-geolocation","response":"success"},{"item":"amap-js-api-heatmap","response":"success"},{"item":"amap-js-api-indoor-map","response":"success"},{"item":"amap-js-api-line-search","response":"success"},{"item":"amap-js-api-map-type","response":"success"},{"item":"amap-js-api-map3d","response":"warning","message":"\u001b[33mWARNING\u001b[39m: DefinitelyTypedTransformer - Cannot find any valid type for this module ../DefinitelyTyped/types/amap-js-api-map3d"},{"item":"amap-js-api-overview","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/4.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amap-js-api/layer/flexible.d.ts:2:5"},{"item":"amap-js-api-place-search","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/4.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amap-js-api/overlay/marker.d.ts:2:5\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/4.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amap-js-api/overlay/marker.d.ts:2:5\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/4.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amap-js-api/overlay/marker.d.ts:2:5\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/4.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amap-js-api/overlay/marker.d.ts:2:5\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/4.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amap-js-api/overlay/infoWindow.d.ts:2:5"},{"item":"amap-js-api-riding","response":"success"},{"item":"amap-js-api-scale","response":"success"},{"item":"amap-js-api-station-search","response":"success"},{"item":"amap-js-api-tool-bar","response":"success"},{"item":"amap-js-api-transfer","response":"success"},{"item":"amap-js-sdk","response":"success"},{"item":"amazon-cognito-auth-js","response":"success"},{"item":"amazon-connect-streams","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: EnumMember - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/4.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amazon-connect-streams/index.d.ts:348:5\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: EnumMember - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/4.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amazon-connect-streams/index.d.ts:349:5"},{"item":"amazon-product-api","response":"success"},{"item":"amcharts","response":"success"},{"item":"amp","response":"success"},{"item":"amp-message","response":"success"},{"item":"amphtml-validator","response":"success"},{"item":"amplifier","response":"success"},{"item":"amplify","response":"success"},{"item":"amplify-deferred","response":"success"},{"item":"amplitude-js","response":"success"},{"item":"amqp","response":"success"},{"item":"amqp-connection-manager","response":"success"},{"item":"amqp-rpc","response":"success"},{"item":"amqplib","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/5.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/amqplib/index.d.ts:9:8"},{"item":"analytics-node","response":"success"},{"item":"anchor-js","response":"success"},{"item":"angular","response":"success"},{"item":"angular-agility","response":"success"},{"item":"angular-animate","response":"success"},{"item":"angular-aria","response":"success"},{"item":"angular-block-ui","response":"success"},{"item":"angular-bootstrap-calendar","response":"success"},{"item":"angular-bootstrap-lightbox","response":"success"},{"item":"angular-breadcrumb","response":"success"},{"item":"angular-clipboard","response":"success"},{"item":"angular-cookie","response":"success"},{"item":"angular-cookies","response":"success"},{"item":"angular-deferred-bootstrap","response":"success"},{"item":"angular-desktop-notification","response":"success"},{"item":"angular-dialog-service","response":"success"},{"item":"angular-environment","response":"success"},{"item":"angular-es","response":"success"},{"item":"angular-feature-flags","response":"success"},{"item":"angular-file-saver","response":"success"},{"item":"angular-file-upload","response":"success"},{"item":"angular-formly","response":"success"},{"item":"angular-fullscreen","response":"success"},{"item":"angular-gettext","response":"success"},{"item":"angular-google-analytics","response":"success"},{"item":"angular-gridster","response":"success"},{"item":"angular-growl-v2","response":"success"},{"item":"angular-hotkeys","response":"success"},{"item":"angular-http-auth","response":"success"},{"item":"angular-httpi","response":"success"},{"item":"angular-idle","response":"success"},{"item":"angular-jwt","response":"success"},{"item":"angular-load","response":"success"},{"item":"angular-loading-bar","response":"success"},{"item":"angular-local-storage","response":"success"},{"item":"angular-localforage","response":"success"},{"item":"angular-locker","response":"success"},{"item":"angular-material","response":"success"},{"item":"angular-media-queries","response":"success"},{"item":"angular-meteor","response":"success"},{"item":"angular-mocks","response":"success"},{"item":"angular-modal","response":"success"},{"item":"angular-notifications","response":"success"},{"item":"angular-notify","response":"success"},{"item":"angular-oauth2","response":"success"},{"item":"angular-odata-resources","response":"success"},{"item":"angular-pdfjs-viewer","response":"success"},{"item":"angular-permission","response":"success"},{"item":"angular-promise-tracker","response":"success"},{"item":"angular-q-extras","response":"success"},{"item":"angular-q-spread","response":"success"},{"item":"angular-resource","response":"success"},{"item":"angular-route","response":"success"},{"item":"angular-sanitize","response":"success"},{"item":"angular-scenario","response":"success"},{"item":"angular-scroll","response":"success"},{"item":"angular-signalr-hub","response":"success"},{"item":"angular-spinner","response":"success"},{"item":"angular-storage","response":"success"},{"item":"angular-strap","response":"success"},{"item":"angular-toastr","response":"success"},{"item":"angular-toasty","response":"success"},{"item":"angular-tooltips","response":"success"},{"item":"angular-translate","response":"success"},{"item":"angular-ui-bootstrap","response":"success"},{"item":"angular-ui-notification","response":"success"},{"item":"angular-ui-router","response":"success"},{"item":"angular-ui-scroll","response":"success"},{"item":"angular-ui-sortable","response":"success"},{"item":"angular-ui-tree","response":"success"},{"item":"angular-websocket","response":"success"},{"item":"angular-wizard","response":"success"},{"item":"angular-xeditable","response":"success"},{"item":"angular.throttle","response":"success"},{"item":"angularfire","response":"success"},{"item":"angularlocalstorage","response":"success"},{"item":"angulartics","response":"success"},{"item":"animation-frame","response":"success"},{"item":"animejs","response":"success"},{"item":"annyang","response":"success"},{"item":"ansi","response":"success"},{"item":"ansi-escape-sequences","response":"success"},{"item":"ansi-styles","response":"success"},{"item":"ansicolors","response":"success"},{"item":"antlr4","response":"success"},{"item":"antlr4-autosuggest","response":"success"},{"item":"any-db","response":"success"},{"item":"any-db-transaction","response":"success"},{"item":"anymatch","response":"success"},{"item":"anyproxy","response":"success"},{"item":"aos","response":"success"},{"item":"apex.js","response":"success"},{"item":"api-error-handler","response":"success"},{"item":"apicache","response":"success"},{"item":"apicalypse","response":"success"},{"item":"apidoc","response":"success"},{"item":"apigee-access","response":"success"},{"item":"apimocker","response":"success"},{"item":"apollo-codegen","response":"success"},{"item":"apollo-upload-client","response":"success"},{"item":"apostrophe","response":"success"},{"item":"app-module-path","response":"success"},{"item":"app-root-dir","response":"success"},{"item":"app-root-path","response":"success"},{"item":"appcache-webpack-plugin","response":"success"},{"item":"appdmg","response":"success"},{"item":"append-query","response":"success"},{"item":"appframework","response":"success"},{"item":"apple-mapkit-js","response":"success"},{"item":"apple-music-api","response":"success"},{"item":"apple-signin-api","response":"success"},{"item":"applepayjs","response":"success"},{"item":"appletvjs","response":"success"},{"item":"applicationinsights-js","response":"success"},{"item":"apptimize__apptimize-web-sdk","response":"success"},{"item":"aqb","response":"success"},{"item":"arangodb","response":"success"},{"item":"arbiter","response":"success"},{"item":"arcgis-js-api","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/10.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/arcgis-js-api/index.d.ts:145:5\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/10.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/arcgis-js-api/index.d.ts:147:5"},{"item":"arcgis-rest-api","response":"success"},{"item":"arcgis-to-geojson-utils","response":"success"},{"item":"architect","response":"success"},{"item":"archiver","response":"success"},{"item":"archy","response":"success"},{"item":"are-we-there-yet","response":"success"},{"item":"argon2-browser","response":"success"},{"item":"argparse","response":"success"},{"item":"args","response":"success"},{"item":"argv","response":"success"},{"item":"ari-client","response":"success"},{"item":"aria-query","response":"success"},{"item":"arr-diff","response":"success"},{"item":"arr-union","response":"success"},{"item":"array-binarysearch.closest","response":"success"},{"item":"array-find-index","response":"success"},{"item":"array-foreach","response":"success"},{"item":"array-initial","response":"success"},{"item":"array-sort","response":"success"},{"item":"array-unique","response":"success"},{"item":"array.from","response":"success"},{"item":"array.prototype.flat","response":"success"},{"item":"array.prototype.flatmap","response":"success"},{"item":"arrayify-stream","response":"success"},{"item":"artillery","response":"success"},{"item":"asana","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:803:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:864:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:954:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:2016:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:1303:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:1393:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:1567:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:2569:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:2069:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:2172:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:2416:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:2266:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:803:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:864:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:954:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:1303:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:1393:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:1567:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:2016:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:2069:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:2172:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:2266:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:2416:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:2569:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: NamespaceImport - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/11.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/asana/index.d.ts:9:8"},{"item":"asap","response":"success"},{"item":"ascii-art","response":"success"},{"item":"ascii-cats","response":"success"},{"item":"ascii2mathml","response":"success"},{"item":"asciichart","response":"success"},{"item":"asciify","response":"success"},{"item":"asenv","response":"success"},{"item":"asn1","response":"success"},{"item":"asn1js","response":"success"},{"item":"aspnet-identity-pw","response":"success"},{"item":"assert","response":"success"},{"item":"assert-equal-jsx","response":"success"},{"item":"assert-plus","response":"success"},{"item":"assertsharp","response":"success"},{"item":"assets-webpack-plugin","response":"success"},{"item":"astring","response":"success"},{"item":"async","response":"success"},{"item":"async-busboy","response":"success"},{"item":"async-cache","response":"success"},{"item":"async-eventemitter","response":"success"},{"item":"async-iterable-stream","response":"success"},{"item":"async-lock","response":"success"},{"item":"async-polling","response":"success"},{"item":"async-redis","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `Multi' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `Multi' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `Multi' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `Multi' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `Multi' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `Multi' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `Multi' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `Multi' and such generics are currently not supported. \n        The generated mock will be incomplete."},{"item":"async-retry","response":"success"},{"item":"async-stream-emitter","response":"success"},{"item":"async-stream-generator","response":"success"},{"item":"async-writer","response":"success"},{"item":"async.nexttick","response":"success"},{"item":"athenajs","response":"success"},{"item":"atlaskit__button","response":"success"},{"item":"atlaskit__calendar","response":"success"},{"item":"atlaskit__feedback-collector","response":"success"},{"item":"atlaskit__inline-edit","response":"success"},{"item":"atlaskit__layer","response":"success"},{"item":"atlaskit__single-select","response":"success"},{"item":"atlaskit__tree","response":"success"},{"item":"atlassian-connect-js","response":"success"},{"item":"atlassian-crowd-client","response":"success"},{"item":"atmosphere.js","response":"success"},{"item":"atob","response":"success"},{"item":"atob-lite","response":"success"},{"item":"atom","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - IndexedAccessType transformation failed: cannot find property config of - ConfigValues[T]"},{"item":"atom-keymap","response":"success"},{"item":"atom-mocha-test-runner","response":"success"},{"item":"atpl","response":"success"},{"item":"audio-context","response":"success"},{"item":"audio-play","response":"success"},{"item":"audiobuffer-to-wav","response":"success"},{"item":"audiosprite","response":"success"},{"item":"auth-header","response":"success"},{"item":"auth0","response":"success"},{"item":"auth0-angular","response":"success"},{"item":"auth0-js","response":"success"},{"item":"auth0-lock","response":"success"},{"item":"auth0.widget","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: LastTypeNode - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/13.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/auth0.widget/index.d.ts:12:18\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: LastTypeNode - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/13.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/auth0.widget/index.d.ts:13:52\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: LastTypeNode - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/13.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/auth0.widget/index.d.ts:14:30"},{"item":"authenticator","response":"success"},{"item":"auto-launch","response":"success"},{"item":"auto-sni","response":"success"},{"item":"autobahn","response":"success"},{"item":"autocannon","response":"success"},{"item":"autoprefixer","response":"success"},{"item":"autoprefixer-core","response":"success"},{"item":"autosize","response":"success"},{"item":"autosuggest-highlight","response":"warning","message":"\u001b[33mWARNING\u001b[39m: DefinitelyTypedTransformer - Cannot find any valid type for this module ../DefinitelyTyped/types/autosuggest-highlight"},{"item":"avoscloud-sdk","response":"success"},{"item":"await-timeout","response":"success"},{"item":"awesomplete","response":"success"},{"item":"aws-greengrass-core-sdk","response":"success"},{"item":"aws-iot-device-sdk","response":"success"},{"item":"aws-kcl","response":"success"},{"item":"aws-lambda","response":"success"},{"item":"aws-param-store","response":"success"},{"item":"aws-regions","response":"success"},{"item":"aws-serverless-express","response":"success"},{"item":"aws4","response":"success"},{"item":"axe-webdriverjs","response":"success"},{"item":"axel","response":"success"},{"item":"axios-cancel","response":"success"},{"item":"axios-case-converter","response":"success"},{"item":"axios-curlirize","response":"success"},{"item":"axios-token-interceptor","response":"success"},{"item":"axon","response":"success"},{"item":"azdata","response":"success"},{"item":"azure","response":"success"},{"item":"azure-kusto-data","response":"success"},{"item":"azure-mobile-services-client","response":"success"},{"item":"azure-sb","response":"success"},{"item":"b-spline","response":"success"},{"item":"b2a","response":"success"},{"item":"b64-lite","response":"success"},{"item":"b_","response":"success"},{"item":"babel-code-frame","response":"success"},{"item":"babel-core","response":"success"},{"item":"babel-generator","response":"success"},{"item":"babel-plugin-glaze","response":"success"},{"item":"babel-plugin-macros","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel__traverse/index.d.ts:239:11\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: RestType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel__traverse/index.d.ts:311:27\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel__traverse/index.d.ts:212:59\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel__traverse/index.d.ts:538:8"},{"item":"babel-plugin-react-html-attrs","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator of KeyOfKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:164:15\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:366:28\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:366:28\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:366:28\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:366:28\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:843:57\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:366:28\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:894:75\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:52:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:91:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator of KeyOfKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:164:15\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator of KeyOfKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:169:15\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:377:48\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:3104:12\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:3107:31\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:818:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:822:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:838:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:366:28\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:891:54\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-plugin-react-html-attrs/index.d.ts:892:55"},{"item":"babel-plugin-react-pug","response":"warning","message":"\u001b[33mWARNING\u001b[39m: DefinitelyTypedTransformer - Cannot find any valid type for this module ../DefinitelyTyped/types/babel-plugin-react-pug"},{"item":"babel-plugin-syntax-jsx","response":"success"},{"item":"babel-plugin-tester","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel__traverse/index.d.ts:239:11\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: RestType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel__traverse/index.d.ts:311:27\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel__traverse/index.d.ts:212:59\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel__traverse/index.d.ts:538:8"},{"item":"babel-template","response":"success"},{"item":"babel-traverse","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-traverse/index.d.ts:348:11\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel-traverse/index.d.ts:597:9"},{"item":"babel-types","response":"success"},{"item":"babel-webpack-plugin","response":"success"},{"item":"babel__code-frame","response":"success"},{"item":"babel__core","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel__traverse/index.d.ts:239:11\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: RestType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel__traverse/index.d.ts:311:27\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel__traverse/index.d.ts:212:59\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel__traverse/index.d.ts:538:8"},{"item":"babel__generator","response":"success"},{"item":"babel__plugin-transform-runtime","response":"success"},{"item":"babel__preset-env","response":"success"},{"item":"babel__standalone","response":"success"},{"item":"babel__template","response":"success"},{"item":"babel__traverse","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel__traverse/index.d.ts:68:79\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel__traverse/index.d.ts:239:11\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: RestType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel__traverse/index.d.ts:311:27\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel__traverse/index.d.ts:212:59\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/15.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/babel__traverse/index.d.ts:538:8"},{"item":"babelify","response":"success"},{"item":"babylon","response":"success"},{"item":"babylon-walk","response":"success"},{"item":"babyparse","response":"success"},{"item":"backblaze-b2","response":"success"},{"item":"backbone","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nMaximum call stack size exceeded\n\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n"},{"item":"backbone-associations","response":"success"},{"item":"backbone-fetch-cache","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete.\n\u001b[33mWARNING\u001b[39m: Transformer - Found a circular generic of `jqXHR<TResolve>' and such generics are currently not supported. \n        The generated mock will be incomplete."},{"item":"backbone-relational","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nMaximum call stack size exceeded\n"},{"item":"backbone.layoutmanager","response":"success"},{"item":"backbone.localstorage","response":"success"},{"item":"backbone.marionette","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nMaximum call stack size exceeded\n"},{"item":"backbone.paginator","response":"success"},{"item":"backbone.radio","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nMaximum call stack size exceeded\n"},{"item":"backgrid","response":"error","message":"Error: Command failed: npx ttsc --project tsconfig.types.16.json\nMaximum call stack size exceeded\n"},{"item":"backlog-js","response":"success"},{"item":"backo2","response":"success"},{"item":"backoff","response":"success"},{"item":"backstopjs","response":"success"},{"item":"bad-words","response":"success"},{"item":"bagpipes","response":"success"},{"item":"baidu-app","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/baidu-app/index.d.ts:4428:31"},{"item":"baidumap-web-sdk","response":"warning","message":"\u001b[33mWARNING\u001b[39m: DefinitelyTypedTransformer - Cannot find any valid type for this module ../DefinitelyTyped/types/baidumap-web-sdk"},{"item":"balanced-match","response":"success"},{"item":"bandagedbd__bdapi","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator of KeyOfKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:183:15\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:360:28\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:360:28\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:360:28\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:360:28\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:838:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:360:28\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:890:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: IndexedAccess of TypeOperator - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:76:11\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:120:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator of KeyOfKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:183:15\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeOperator of KeyOfKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:188:15\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:371:48\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:2863:13\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:2866:31\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:811:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:817:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:832:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: SymbolKeyword - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:360:28\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:886:54\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/16.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/react/index.d.ts:887:55"},{"item":"barbellweights","response":"success"},{"item":"barcode","response":"success"},{"item":"bardjs","response":"success"},{"item":"baretest","response":"success"},{"item":"base-64","response":"success"},{"item":"base16","response":"success"},{"item":"base64-arraybuffer","response":"success"},{"item":"base64-async","response":"success"},{"item":"base64-js","response":"success"},{"item":"base64-stream","response":"success"},{"item":"base64-url","response":"success"},{"item":"base64topdf","response":"success"},{"item":"bases","response":"success"},{"item":"bash-glob","response":"success"},{"item":"basic-auth","response":"success"},{"item":"basicauth-middleware","response":"success"},{"item":"basiclightbox","response":"success"},{"item":"basicscroll","response":"success"},{"item":"batch-stream","response":"success"},{"item":"battery-level","response":"success"},{"item":"bayes-classifier","response":"success"},{"item":"bazinga-translator","response":"success"},{"item":"bbcode-to-react","response":"success"},{"item":"bchaddrjs","response":"success"},{"item":"bcp-47","response":"success"},{"item":"bcp-47-match","response":"success"},{"item":"bcrypt","response":"success"},{"item":"bcrypt-nodejs","response":"success"},{"item":"bcryptjs","response":"success"},{"item":"bdfjs","response":"success"},{"item":"beanstalkd","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/18.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/beanstalkd/index.d.ts:12:27\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/18.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/beanstalkd/index.d.ts:13:28"},{"item":"beanstalkd-worker","response":"success"},{"item":"bearcat-es6","response":"success"},{"item":"beats","response":"success"},{"item":"bech32","response":"success"},{"item":"behavior3","response":"success"},{"item":"bell","response":"success"},{"item":"bemmer","response":"success"},{"item":"benchmark","response":"success"},{"item":"bencode","response":"success"},{"item":"bent","response":"success"},{"item":"better-curry","response":"success"},{"item":"better-queue","response":"success"},{"item":"better-scroll","response":"success"},{"item":"better-sqlite3","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/18.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/better-sqlite3/index.d.ts:135:65\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/18.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/better-sqlite3/index.d.ts:61:77"},{"item":"bezier-js","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/18.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bezier-js/index.d.ts:98:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/18.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bezier-js/index.d.ts:99:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/18.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bezier-js/index.d.ts:100:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/18.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bezier-js/index.d.ts:101:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/18.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bezier-js/index.d.ts:102:9"},{"item":"bgiframe","response":"success"},{"item":"bidirectional-map","response":"success"},{"item":"big.js","response":"success"},{"item":"bigi","response":"success"},{"item":"bigint","response":"success"},{"item":"bignum","response":"success"},{"item":"bigscreen","response":"success"},{"item":"bin-pack","response":"success"},{"item":"binary-parse-stream","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: TypeQuery of MethodDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/18.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/binary-parse-stream/index.d.ts:16:5"},{"item":"binary-parser","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/binary-parser/index.d.ts:139:49\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/binary-parser/index.d.ts:182:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/binary-parser/index.d.ts:87:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/binary-parser/index.d.ts:97:9\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ConditionalType - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/binary-parser/index.d.ts:111:9"},{"item":"binary-split","response":"success"},{"item":"binaryextensions","response":"success"},{"item":"bind-ponyfill","response":"success"},{"item":"bindings","response":"success"},{"item":"bintrees","response":"success"},{"item":"bip21","response":"success"},{"item":"bip38","response":"success"},{"item":"bit-array","response":"success"},{"item":"bit-twiddle","response":"success"},{"item":"bitauth","response":"success"},{"item":"bitcore-lib","response":"warning","message":"\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bitcore-lib/index.d.ts:182:1\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bitcore-lib/index.d.ts:182:1\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bitcore-lib/index.d.ts:182:1\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bitcore-lib/index.d.ts:182:1\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bitcore-lib/index.d.ts:182:1\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bitcore-lib/index.d.ts:182:1\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bitcore-lib/index.d.ts:182:1\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bitcore-lib/index.d.ts:182:1\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bitcore-lib/index.d.ts:182:1\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bitcore-lib/index.d.ts:182:1\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bitcore-lib/index.d.ts:182:1\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bitcore-lib/index.d.ts:182:1\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bitcore-lib/index.d.ts:182:1\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bitcore-lib/index.d.ts:182:1\n\u001b[33mWARNING\u001b[39m: Transformer - Not supported type: ModuleDeclaration - it will convert to null\ncreated file:///home/runner/work/ts-auto-mock/ts-auto-mock/definitelyTypedTests/19.index.ts:6:1\nused by file:///home/runner/work/ts-auto-mock/ts-auto-mock/DefinitelyTyped/types/bitcore-lib/index.d.ts:182:1"},{"item":"bittorrent-protocol","response":"success"},{"item":"bitwise-xor","response":"success"},{"item":"bl","response":"success"},{"item":"blacklist","response":"success"},{"item":"blake2","response":"success"},{"item":"blazor__javascript-interop","response":"success"},{"item":"blazy","response":"success"},{"item":"bleno","response":"success"},{"item":"blessed","response":"success"},{"item":"blip-sdk","response":"success"},{"item":"blissfuljs","response":"success"},{"item":"blob-stream","response":"success"},{"item":"blob-to-buffer","response":"success"}]