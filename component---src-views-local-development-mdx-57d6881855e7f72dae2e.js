(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{wuhz:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return b})),n.d(t,"default",(function(){return c}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk");var a=n("/FXl"),r=n("TjRS");n("aD51");function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var b={};void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/views/local-development.mdx"}});var i={_frontmatter:b},p=r.a;function c(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(p,l({},i,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"local-development"},"Local development"),Object(a.b)("p",null,"If you want to add new functionality or fix a bug in ",Object(a.b)("inlineCode",{parentName:"p"},"ts-auto-mock")," you are in the right place."),Object(a.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"Node.js >= 10"),Object(a.b)("li",{parentName:"ul"},"NPM"),Object(a.b)("li",{parentName:"ul"},"A local clone of the repo")),Object(a.b)("h2",{id:"install-local-dependencies"},"Install local dependencies"),Object(a.b)("p",null,"Make sure you are in the project root folder"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{}),"npm install\n")),Object(a.b)("h2",{id:"build-the-transformer"},"Build the transformer"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{}),"npm run build\n")),Object(a.b)("h2",{id:"make-a-change"},"Make a change"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"ts-auto-mock")," consists of multiple modules, each of them has a different meaning and depending on what you are editing you can re-build each module individually"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"transformer")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"repository")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"extension")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"merge"))),Object(a.b)("p",null,"If you are editing the transformer:"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{}),"npm run build:transformer\n")),Object(a.b)("p",null,"If you are editing anything else:"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{}),"npm run build:modules\n")),Object(a.b)("h2",{id:"test-your-changes"},"Test your changes"),Object(a.b)("p",null,"There are 2 ways to test the effect of your changes"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Use the existing test system"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Add a test")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Run all the tests"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",l({parentName:"pre"},{}),"npm run test\n// or use npm run test:transformer if you are just editing the transformer\n"))))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Use the playground"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Open the file ",Object(a.b)("a",l({parentName:"p"},{href:"https://github.com/Typescript-TDD/ts-auto-mock/blob/master/test/playground/playground.test.ts"}),"playground.test.ts"))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Make your changes")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Run test playground to see the test pass"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",l({parentName:"pre"},{}),"npm run test:playground\n"))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Run build playground to see the emitted JS code in the corresponding ",Object(a.b)("inlineCode",{parentName:"p"},"playground.test.js"),"-file"),Object(a.b)("pre",{parentName:"li"},Object(a.b)("code",l({parentName:"pre"},{}),"npm run build:playground\n")))))),Object(a.b)("p",null,"That's it."))}c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/views/local-development.mdx"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-views-local-development-mdx-57d6881855e7f72dae2e.js.map